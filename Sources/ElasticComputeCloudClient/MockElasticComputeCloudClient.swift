// Copyright 2018-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License").
// You may not use this file except in compliance with the License.
// A copy of the License is located at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.
//
// swiftlint:disable superfluous_disable_command
// swiftlint:disable file_length line_length identifier_name type_name vertical_parameter_alignment type_body_length
// -- Generated Code; do not edit --
//
// MockElasticComputeCloudClient.swift
// ElasticComputeCloudClient
//

import Foundation
import ElasticComputeCloudModel
import SmokeAWSCore
import SmokeHTTPClient

/**
 Mock Client for the ElasticComputeCloud service by default returns the `__default` property of its return type.
 */
public struct MockElasticComputeCloudClient<ClientInvocationReportingType: SmokeAWSInvocationReporting>: ElasticComputeCloudClientProtocol {
    let acceptReservedInstancesExchangeQuoteAsyncOverride: AcceptReservedInstancesExchangeQuoteAsyncType<ClientInvocationReportingType>?
    let acceptReservedInstancesExchangeQuoteSyncOverride: AcceptReservedInstancesExchangeQuoteSyncType<ClientInvocationReportingType>?
    let acceptTransitGatewayPeeringAttachmentAsyncOverride: AcceptTransitGatewayPeeringAttachmentAsyncType<ClientInvocationReportingType>?
    let acceptTransitGatewayPeeringAttachmentSyncOverride: AcceptTransitGatewayPeeringAttachmentSyncType<ClientInvocationReportingType>?
    let acceptTransitGatewayVpcAttachmentAsyncOverride: AcceptTransitGatewayVpcAttachmentAsyncType<ClientInvocationReportingType>?
    let acceptTransitGatewayVpcAttachmentSyncOverride: AcceptTransitGatewayVpcAttachmentSyncType<ClientInvocationReportingType>?
    let acceptVpcEndpointConnectionsAsyncOverride: AcceptVpcEndpointConnectionsAsyncType<ClientInvocationReportingType>?
    let acceptVpcEndpointConnectionsSyncOverride: AcceptVpcEndpointConnectionsSyncType<ClientInvocationReportingType>?
    let acceptVpcPeeringConnectionAsyncOverride: AcceptVpcPeeringConnectionAsyncType<ClientInvocationReportingType>?
    let acceptVpcPeeringConnectionSyncOverride: AcceptVpcPeeringConnectionSyncType<ClientInvocationReportingType>?
    let advertiseByoipCidrAsyncOverride: AdvertiseByoipCidrAsyncType<ClientInvocationReportingType>?
    let advertiseByoipCidrSyncOverride: AdvertiseByoipCidrSyncType<ClientInvocationReportingType>?
    let allocateAddressAsyncOverride: AllocateAddressAsyncType<ClientInvocationReportingType>?
    let allocateAddressSyncOverride: AllocateAddressSyncType<ClientInvocationReportingType>?
    let allocateHostsAsyncOverride: AllocateHostsAsyncType<ClientInvocationReportingType>?
    let allocateHostsSyncOverride: AllocateHostsSyncType<ClientInvocationReportingType>?
    let applySecurityGroupsToClientVpnTargetNetworkAsyncOverride: ApplySecurityGroupsToClientVpnTargetNetworkAsyncType<ClientInvocationReportingType>?
    let applySecurityGroupsToClientVpnTargetNetworkSyncOverride: ApplySecurityGroupsToClientVpnTargetNetworkSyncType<ClientInvocationReportingType>?
    let assignIpv6AddressesAsyncOverride: AssignIpv6AddressesAsyncType<ClientInvocationReportingType>?
    let assignIpv6AddressesSyncOverride: AssignIpv6AddressesSyncType<ClientInvocationReportingType>?
    let assignPrivateIpAddressesAsyncOverride: AssignPrivateIpAddressesAsyncType<ClientInvocationReportingType>?
    let assignPrivateIpAddressesSyncOverride: AssignPrivateIpAddressesSyncType<ClientInvocationReportingType>?
    let associateAddressAsyncOverride: AssociateAddressAsyncType<ClientInvocationReportingType>?
    let associateAddressSyncOverride: AssociateAddressSyncType<ClientInvocationReportingType>?
    let associateClientVpnTargetNetworkAsyncOverride: AssociateClientVpnTargetNetworkAsyncType<ClientInvocationReportingType>?
    let associateClientVpnTargetNetworkSyncOverride: AssociateClientVpnTargetNetworkSyncType<ClientInvocationReportingType>?
    let associateDhcpOptionsAsyncOverride: AssociateDhcpOptionsAsyncType<ClientInvocationReportingType>?
    let associateDhcpOptionsSyncOverride: AssociateDhcpOptionsSyncType<ClientInvocationReportingType>?
    let associateIamInstanceProfileAsyncOverride: AssociateIamInstanceProfileAsyncType<ClientInvocationReportingType>?
    let associateIamInstanceProfileSyncOverride: AssociateIamInstanceProfileSyncType<ClientInvocationReportingType>?
    let associateRouteTableAsyncOverride: AssociateRouteTableAsyncType<ClientInvocationReportingType>?
    let associateRouteTableSyncOverride: AssociateRouteTableSyncType<ClientInvocationReportingType>?
    let associateSubnetCidrBlockAsyncOverride: AssociateSubnetCidrBlockAsyncType<ClientInvocationReportingType>?
    let associateSubnetCidrBlockSyncOverride: AssociateSubnetCidrBlockSyncType<ClientInvocationReportingType>?
    let associateTransitGatewayMulticastDomainAsyncOverride: AssociateTransitGatewayMulticastDomainAsyncType<ClientInvocationReportingType>?
    let associateTransitGatewayMulticastDomainSyncOverride: AssociateTransitGatewayMulticastDomainSyncType<ClientInvocationReportingType>?
    let associateTransitGatewayRouteTableAsyncOverride: AssociateTransitGatewayRouteTableAsyncType<ClientInvocationReportingType>?
    let associateTransitGatewayRouteTableSyncOverride: AssociateTransitGatewayRouteTableSyncType<ClientInvocationReportingType>?
    let associateVpcCidrBlockAsyncOverride: AssociateVpcCidrBlockAsyncType<ClientInvocationReportingType>?
    let associateVpcCidrBlockSyncOverride: AssociateVpcCidrBlockSyncType<ClientInvocationReportingType>?
    let attachClassicLinkVpcAsyncOverride: AttachClassicLinkVpcAsyncType<ClientInvocationReportingType>?
    let attachClassicLinkVpcSyncOverride: AttachClassicLinkVpcSyncType<ClientInvocationReportingType>?
    let attachInternetGatewayAsyncOverride: AttachInternetGatewayAsyncType<ClientInvocationReportingType>?
    let attachInternetGatewaySyncOverride: AttachInternetGatewaySyncType<ClientInvocationReportingType>?
    let attachNetworkInterfaceAsyncOverride: AttachNetworkInterfaceAsyncType<ClientInvocationReportingType>?
    let attachNetworkInterfaceSyncOverride: AttachNetworkInterfaceSyncType<ClientInvocationReportingType>?
    let attachVolumeAsyncOverride: AttachVolumeAsyncType<ClientInvocationReportingType>?
    let attachVolumeSyncOverride: AttachVolumeSyncType<ClientInvocationReportingType>?
    let attachVpnGatewayAsyncOverride: AttachVpnGatewayAsyncType<ClientInvocationReportingType>?
    let attachVpnGatewaySyncOverride: AttachVpnGatewaySyncType<ClientInvocationReportingType>?
    let authorizeClientVpnIngressAsyncOverride: AuthorizeClientVpnIngressAsyncType<ClientInvocationReportingType>?
    let authorizeClientVpnIngressSyncOverride: AuthorizeClientVpnIngressSyncType<ClientInvocationReportingType>?
    let authorizeSecurityGroupEgressAsyncOverride: AuthorizeSecurityGroupEgressAsyncType<ClientInvocationReportingType>?
    let authorizeSecurityGroupEgressSyncOverride: AuthorizeSecurityGroupEgressSyncType<ClientInvocationReportingType>?
    let authorizeSecurityGroupIngressAsyncOverride: AuthorizeSecurityGroupIngressAsyncType<ClientInvocationReportingType>?
    let authorizeSecurityGroupIngressSyncOverride: AuthorizeSecurityGroupIngressSyncType<ClientInvocationReportingType>?
    let bundleInstanceAsyncOverride: BundleInstanceAsyncType<ClientInvocationReportingType>?
    let bundleInstanceSyncOverride: BundleInstanceSyncType<ClientInvocationReportingType>?
    let cancelBundleTaskAsyncOverride: CancelBundleTaskAsyncType<ClientInvocationReportingType>?
    let cancelBundleTaskSyncOverride: CancelBundleTaskSyncType<ClientInvocationReportingType>?
    let cancelCapacityReservationAsyncOverride: CancelCapacityReservationAsyncType<ClientInvocationReportingType>?
    let cancelCapacityReservationSyncOverride: CancelCapacityReservationSyncType<ClientInvocationReportingType>?
    let cancelConversionTaskAsyncOverride: CancelConversionTaskAsyncType<ClientInvocationReportingType>?
    let cancelConversionTaskSyncOverride: CancelConversionTaskSyncType<ClientInvocationReportingType>?
    let cancelExportTaskAsyncOverride: CancelExportTaskAsyncType<ClientInvocationReportingType>?
    let cancelExportTaskSyncOverride: CancelExportTaskSyncType<ClientInvocationReportingType>?
    let cancelImportTaskAsyncOverride: CancelImportTaskAsyncType<ClientInvocationReportingType>?
    let cancelImportTaskSyncOverride: CancelImportTaskSyncType<ClientInvocationReportingType>?
    let cancelReservedInstancesListingAsyncOverride: CancelReservedInstancesListingAsyncType<ClientInvocationReportingType>?
    let cancelReservedInstancesListingSyncOverride: CancelReservedInstancesListingSyncType<ClientInvocationReportingType>?
    let cancelSpotFleetRequestsAsyncOverride: CancelSpotFleetRequestsAsyncType<ClientInvocationReportingType>?
    let cancelSpotFleetRequestsSyncOverride: CancelSpotFleetRequestsSyncType<ClientInvocationReportingType>?
    let cancelSpotInstanceRequestsAsyncOverride: CancelSpotInstanceRequestsAsyncType<ClientInvocationReportingType>?
    let cancelSpotInstanceRequestsSyncOverride: CancelSpotInstanceRequestsSyncType<ClientInvocationReportingType>?
    let confirmProductInstanceAsyncOverride: ConfirmProductInstanceAsyncType<ClientInvocationReportingType>?
    let confirmProductInstanceSyncOverride: ConfirmProductInstanceSyncType<ClientInvocationReportingType>?
    let copyFpgaImageAsyncOverride: CopyFpgaImageAsyncType<ClientInvocationReportingType>?
    let copyFpgaImageSyncOverride: CopyFpgaImageSyncType<ClientInvocationReportingType>?
    let copyImageAsyncOverride: CopyImageAsyncType<ClientInvocationReportingType>?
    let copyImageSyncOverride: CopyImageSyncType<ClientInvocationReportingType>?
    let copySnapshotAsyncOverride: CopySnapshotAsyncType<ClientInvocationReportingType>?
    let copySnapshotSyncOverride: CopySnapshotSyncType<ClientInvocationReportingType>?
    let createCapacityReservationAsyncOverride: CreateCapacityReservationAsyncType<ClientInvocationReportingType>?
    let createCapacityReservationSyncOverride: CreateCapacityReservationSyncType<ClientInvocationReportingType>?
    let createClientVpnEndpointAsyncOverride: CreateClientVpnEndpointAsyncType<ClientInvocationReportingType>?
    let createClientVpnEndpointSyncOverride: CreateClientVpnEndpointSyncType<ClientInvocationReportingType>?
    let createClientVpnRouteAsyncOverride: CreateClientVpnRouteAsyncType<ClientInvocationReportingType>?
    let createClientVpnRouteSyncOverride: CreateClientVpnRouteSyncType<ClientInvocationReportingType>?
    let createCustomerGatewayAsyncOverride: CreateCustomerGatewayAsyncType<ClientInvocationReportingType>?
    let createCustomerGatewaySyncOverride: CreateCustomerGatewaySyncType<ClientInvocationReportingType>?
    let createDefaultSubnetAsyncOverride: CreateDefaultSubnetAsyncType<ClientInvocationReportingType>?
    let createDefaultSubnetSyncOverride: CreateDefaultSubnetSyncType<ClientInvocationReportingType>?
    let createDefaultVpcAsyncOverride: CreateDefaultVpcAsyncType<ClientInvocationReportingType>?
    let createDefaultVpcSyncOverride: CreateDefaultVpcSyncType<ClientInvocationReportingType>?
    let createDhcpOptionsAsyncOverride: CreateDhcpOptionsAsyncType<ClientInvocationReportingType>?
    let createDhcpOptionsSyncOverride: CreateDhcpOptionsSyncType<ClientInvocationReportingType>?
    let createEgressOnlyInternetGatewayAsyncOverride: CreateEgressOnlyInternetGatewayAsyncType<ClientInvocationReportingType>?
    let createEgressOnlyInternetGatewaySyncOverride: CreateEgressOnlyInternetGatewaySyncType<ClientInvocationReportingType>?
    let createFleetAsyncOverride: CreateFleetAsyncType<ClientInvocationReportingType>?
    let createFleetSyncOverride: CreateFleetSyncType<ClientInvocationReportingType>?
    let createFlowLogsAsyncOverride: CreateFlowLogsAsyncType<ClientInvocationReportingType>?
    let createFlowLogsSyncOverride: CreateFlowLogsSyncType<ClientInvocationReportingType>?
    let createFpgaImageAsyncOverride: CreateFpgaImageAsyncType<ClientInvocationReportingType>?
    let createFpgaImageSyncOverride: CreateFpgaImageSyncType<ClientInvocationReportingType>?
    let createImageAsyncOverride: CreateImageAsyncType<ClientInvocationReportingType>?
    let createImageSyncOverride: CreateImageSyncType<ClientInvocationReportingType>?
    let createInstanceExportTaskAsyncOverride: CreateInstanceExportTaskAsyncType<ClientInvocationReportingType>?
    let createInstanceExportTaskSyncOverride: CreateInstanceExportTaskSyncType<ClientInvocationReportingType>?
    let createInternetGatewayAsyncOverride: CreateInternetGatewayAsyncType<ClientInvocationReportingType>?
    let createInternetGatewaySyncOverride: CreateInternetGatewaySyncType<ClientInvocationReportingType>?
    let createKeyPairAsyncOverride: CreateKeyPairAsyncType<ClientInvocationReportingType>?
    let createKeyPairSyncOverride: CreateKeyPairSyncType<ClientInvocationReportingType>?
    let createLaunchTemplateAsyncOverride: CreateLaunchTemplateAsyncType<ClientInvocationReportingType>?
    let createLaunchTemplateSyncOverride: CreateLaunchTemplateSyncType<ClientInvocationReportingType>?
    let createLaunchTemplateVersionAsyncOverride: CreateLaunchTemplateVersionAsyncType<ClientInvocationReportingType>?
    let createLaunchTemplateVersionSyncOverride: CreateLaunchTemplateVersionSyncType<ClientInvocationReportingType>?
    let createLocalGatewayRouteAsyncOverride: CreateLocalGatewayRouteAsyncType<ClientInvocationReportingType>?
    let createLocalGatewayRouteSyncOverride: CreateLocalGatewayRouteSyncType<ClientInvocationReportingType>?
    let createLocalGatewayRouteTableVpcAssociationAsyncOverride: CreateLocalGatewayRouteTableVpcAssociationAsyncType<ClientInvocationReportingType>?
    let createLocalGatewayRouteTableVpcAssociationSyncOverride: CreateLocalGatewayRouteTableVpcAssociationSyncType<ClientInvocationReportingType>?
    let createNatGatewayAsyncOverride: CreateNatGatewayAsyncType<ClientInvocationReportingType>?
    let createNatGatewaySyncOverride: CreateNatGatewaySyncType<ClientInvocationReportingType>?
    let createNetworkAclAsyncOverride: CreateNetworkAclAsyncType<ClientInvocationReportingType>?
    let createNetworkAclSyncOverride: CreateNetworkAclSyncType<ClientInvocationReportingType>?
    let createNetworkAclEntryAsyncOverride: CreateNetworkAclEntryAsyncType<ClientInvocationReportingType>?
    let createNetworkAclEntrySyncOverride: CreateNetworkAclEntrySyncType<ClientInvocationReportingType>?
    let createNetworkInterfaceAsyncOverride: CreateNetworkInterfaceAsyncType<ClientInvocationReportingType>?
    let createNetworkInterfaceSyncOverride: CreateNetworkInterfaceSyncType<ClientInvocationReportingType>?
    let createNetworkInterfacePermissionAsyncOverride: CreateNetworkInterfacePermissionAsyncType<ClientInvocationReportingType>?
    let createNetworkInterfacePermissionSyncOverride: CreateNetworkInterfacePermissionSyncType<ClientInvocationReportingType>?
    let createPlacementGroupAsyncOverride: CreatePlacementGroupAsyncType<ClientInvocationReportingType>?
    let createPlacementGroupSyncOverride: CreatePlacementGroupSyncType<ClientInvocationReportingType>?
    let createReservedInstancesListingAsyncOverride: CreateReservedInstancesListingAsyncType<ClientInvocationReportingType>?
    let createReservedInstancesListingSyncOverride: CreateReservedInstancesListingSyncType<ClientInvocationReportingType>?
    let createRouteAsyncOverride: CreateRouteAsyncType<ClientInvocationReportingType>?
    let createRouteSyncOverride: CreateRouteSyncType<ClientInvocationReportingType>?
    let createRouteTableAsyncOverride: CreateRouteTableAsyncType<ClientInvocationReportingType>?
    let createRouteTableSyncOverride: CreateRouteTableSyncType<ClientInvocationReportingType>?
    let createSecurityGroupAsyncOverride: CreateSecurityGroupAsyncType<ClientInvocationReportingType>?
    let createSecurityGroupSyncOverride: CreateSecurityGroupSyncType<ClientInvocationReportingType>?
    let createSnapshotAsyncOverride: CreateSnapshotAsyncType<ClientInvocationReportingType>?
    let createSnapshotSyncOverride: CreateSnapshotSyncType<ClientInvocationReportingType>?
    let createSnapshotsAsyncOverride: CreateSnapshotsAsyncType<ClientInvocationReportingType>?
    let createSnapshotsSyncOverride: CreateSnapshotsSyncType<ClientInvocationReportingType>?
    let createSpotDatafeedSubscriptionAsyncOverride: CreateSpotDatafeedSubscriptionAsyncType<ClientInvocationReportingType>?
    let createSpotDatafeedSubscriptionSyncOverride: CreateSpotDatafeedSubscriptionSyncType<ClientInvocationReportingType>?
    let createSubnetAsyncOverride: CreateSubnetAsyncType<ClientInvocationReportingType>?
    let createSubnetSyncOverride: CreateSubnetSyncType<ClientInvocationReportingType>?
    let createTagsAsyncOverride: CreateTagsAsyncType<ClientInvocationReportingType>?
    let createTagsSyncOverride: CreateTagsSyncType<ClientInvocationReportingType>?
    let createTrafficMirrorFilterAsyncOverride: CreateTrafficMirrorFilterAsyncType<ClientInvocationReportingType>?
    let createTrafficMirrorFilterSyncOverride: CreateTrafficMirrorFilterSyncType<ClientInvocationReportingType>?
    let createTrafficMirrorFilterRuleAsyncOverride: CreateTrafficMirrorFilterRuleAsyncType<ClientInvocationReportingType>?
    let createTrafficMirrorFilterRuleSyncOverride: CreateTrafficMirrorFilterRuleSyncType<ClientInvocationReportingType>?
    let createTrafficMirrorSessionAsyncOverride: CreateTrafficMirrorSessionAsyncType<ClientInvocationReportingType>?
    let createTrafficMirrorSessionSyncOverride: CreateTrafficMirrorSessionSyncType<ClientInvocationReportingType>?
    let createTrafficMirrorTargetAsyncOverride: CreateTrafficMirrorTargetAsyncType<ClientInvocationReportingType>?
    let createTrafficMirrorTargetSyncOverride: CreateTrafficMirrorTargetSyncType<ClientInvocationReportingType>?
    let createTransitGatewayAsyncOverride: CreateTransitGatewayAsyncType<ClientInvocationReportingType>?
    let createTransitGatewaySyncOverride: CreateTransitGatewaySyncType<ClientInvocationReportingType>?
    let createTransitGatewayMulticastDomainAsyncOverride: CreateTransitGatewayMulticastDomainAsyncType<ClientInvocationReportingType>?
    let createTransitGatewayMulticastDomainSyncOverride: CreateTransitGatewayMulticastDomainSyncType<ClientInvocationReportingType>?
    let createTransitGatewayPeeringAttachmentAsyncOverride: CreateTransitGatewayPeeringAttachmentAsyncType<ClientInvocationReportingType>?
    let createTransitGatewayPeeringAttachmentSyncOverride: CreateTransitGatewayPeeringAttachmentSyncType<ClientInvocationReportingType>?
    let createTransitGatewayRouteAsyncOverride: CreateTransitGatewayRouteAsyncType<ClientInvocationReportingType>?
    let createTransitGatewayRouteSyncOverride: CreateTransitGatewayRouteSyncType<ClientInvocationReportingType>?
    let createTransitGatewayRouteTableAsyncOverride: CreateTransitGatewayRouteTableAsyncType<ClientInvocationReportingType>?
    let createTransitGatewayRouteTableSyncOverride: CreateTransitGatewayRouteTableSyncType<ClientInvocationReportingType>?
    let createTransitGatewayVpcAttachmentAsyncOverride: CreateTransitGatewayVpcAttachmentAsyncType<ClientInvocationReportingType>?
    let createTransitGatewayVpcAttachmentSyncOverride: CreateTransitGatewayVpcAttachmentSyncType<ClientInvocationReportingType>?
    let createVolumeAsyncOverride: CreateVolumeAsyncType<ClientInvocationReportingType>?
    let createVolumeSyncOverride: CreateVolumeSyncType<ClientInvocationReportingType>?
    let createVpcAsyncOverride: CreateVpcAsyncType<ClientInvocationReportingType>?
    let createVpcSyncOverride: CreateVpcSyncType<ClientInvocationReportingType>?
    let createVpcEndpointAsyncOverride: CreateVpcEndpointAsyncType<ClientInvocationReportingType>?
    let createVpcEndpointSyncOverride: CreateVpcEndpointSyncType<ClientInvocationReportingType>?
    let createVpcEndpointConnectionNotificationAsyncOverride: CreateVpcEndpointConnectionNotificationAsyncType<ClientInvocationReportingType>?
    let createVpcEndpointConnectionNotificationSyncOverride: CreateVpcEndpointConnectionNotificationSyncType<ClientInvocationReportingType>?
    let createVpcEndpointServiceConfigurationAsyncOverride: CreateVpcEndpointServiceConfigurationAsyncType<ClientInvocationReportingType>?
    let createVpcEndpointServiceConfigurationSyncOverride: CreateVpcEndpointServiceConfigurationSyncType<ClientInvocationReportingType>?
    let createVpcPeeringConnectionAsyncOverride: CreateVpcPeeringConnectionAsyncType<ClientInvocationReportingType>?
    let createVpcPeeringConnectionSyncOverride: CreateVpcPeeringConnectionSyncType<ClientInvocationReportingType>?
    let createVpnConnectionAsyncOverride: CreateVpnConnectionAsyncType<ClientInvocationReportingType>?
    let createVpnConnectionSyncOverride: CreateVpnConnectionSyncType<ClientInvocationReportingType>?
    let createVpnConnectionRouteAsyncOverride: CreateVpnConnectionRouteAsyncType<ClientInvocationReportingType>?
    let createVpnConnectionRouteSyncOverride: CreateVpnConnectionRouteSyncType<ClientInvocationReportingType>?
    let createVpnGatewayAsyncOverride: CreateVpnGatewayAsyncType<ClientInvocationReportingType>?
    let createVpnGatewaySyncOverride: CreateVpnGatewaySyncType<ClientInvocationReportingType>?
    let deleteClientVpnEndpointAsyncOverride: DeleteClientVpnEndpointAsyncType<ClientInvocationReportingType>?
    let deleteClientVpnEndpointSyncOverride: DeleteClientVpnEndpointSyncType<ClientInvocationReportingType>?
    let deleteClientVpnRouteAsyncOverride: DeleteClientVpnRouteAsyncType<ClientInvocationReportingType>?
    let deleteClientVpnRouteSyncOverride: DeleteClientVpnRouteSyncType<ClientInvocationReportingType>?
    let deleteCustomerGatewayAsyncOverride: DeleteCustomerGatewayAsyncType<ClientInvocationReportingType>?
    let deleteCustomerGatewaySyncOverride: DeleteCustomerGatewaySyncType<ClientInvocationReportingType>?
    let deleteDhcpOptionsAsyncOverride: DeleteDhcpOptionsAsyncType<ClientInvocationReportingType>?
    let deleteDhcpOptionsSyncOverride: DeleteDhcpOptionsSyncType<ClientInvocationReportingType>?
    let deleteEgressOnlyInternetGatewayAsyncOverride: DeleteEgressOnlyInternetGatewayAsyncType<ClientInvocationReportingType>?
    let deleteEgressOnlyInternetGatewaySyncOverride: DeleteEgressOnlyInternetGatewaySyncType<ClientInvocationReportingType>?
    let deleteFleetsAsyncOverride: DeleteFleetsAsyncType<ClientInvocationReportingType>?
    let deleteFleetsSyncOverride: DeleteFleetsSyncType<ClientInvocationReportingType>?
    let deleteFlowLogsAsyncOverride: DeleteFlowLogsAsyncType<ClientInvocationReportingType>?
    let deleteFlowLogsSyncOverride: DeleteFlowLogsSyncType<ClientInvocationReportingType>?
    let deleteFpgaImageAsyncOverride: DeleteFpgaImageAsyncType<ClientInvocationReportingType>?
    let deleteFpgaImageSyncOverride: DeleteFpgaImageSyncType<ClientInvocationReportingType>?
    let deleteInternetGatewayAsyncOverride: DeleteInternetGatewayAsyncType<ClientInvocationReportingType>?
    let deleteInternetGatewaySyncOverride: DeleteInternetGatewaySyncType<ClientInvocationReportingType>?
    let deleteKeyPairAsyncOverride: DeleteKeyPairAsyncType<ClientInvocationReportingType>?
    let deleteKeyPairSyncOverride: DeleteKeyPairSyncType<ClientInvocationReportingType>?
    let deleteLaunchTemplateAsyncOverride: DeleteLaunchTemplateAsyncType<ClientInvocationReportingType>?
    let deleteLaunchTemplateSyncOverride: DeleteLaunchTemplateSyncType<ClientInvocationReportingType>?
    let deleteLaunchTemplateVersionsAsyncOverride: DeleteLaunchTemplateVersionsAsyncType<ClientInvocationReportingType>?
    let deleteLaunchTemplateVersionsSyncOverride: DeleteLaunchTemplateVersionsSyncType<ClientInvocationReportingType>?
    let deleteLocalGatewayRouteAsyncOverride: DeleteLocalGatewayRouteAsyncType<ClientInvocationReportingType>?
    let deleteLocalGatewayRouteSyncOverride: DeleteLocalGatewayRouteSyncType<ClientInvocationReportingType>?
    let deleteLocalGatewayRouteTableVpcAssociationAsyncOverride: DeleteLocalGatewayRouteTableVpcAssociationAsyncType<ClientInvocationReportingType>?
    let deleteLocalGatewayRouteTableVpcAssociationSyncOverride: DeleteLocalGatewayRouteTableVpcAssociationSyncType<ClientInvocationReportingType>?
    let deleteNatGatewayAsyncOverride: DeleteNatGatewayAsyncType<ClientInvocationReportingType>?
    let deleteNatGatewaySyncOverride: DeleteNatGatewaySyncType<ClientInvocationReportingType>?
    let deleteNetworkAclAsyncOverride: DeleteNetworkAclAsyncType<ClientInvocationReportingType>?
    let deleteNetworkAclSyncOverride: DeleteNetworkAclSyncType<ClientInvocationReportingType>?
    let deleteNetworkAclEntryAsyncOverride: DeleteNetworkAclEntryAsyncType<ClientInvocationReportingType>?
    let deleteNetworkAclEntrySyncOverride: DeleteNetworkAclEntrySyncType<ClientInvocationReportingType>?
    let deleteNetworkInterfaceAsyncOverride: DeleteNetworkInterfaceAsyncType<ClientInvocationReportingType>?
    let deleteNetworkInterfaceSyncOverride: DeleteNetworkInterfaceSyncType<ClientInvocationReportingType>?
    let deleteNetworkInterfacePermissionAsyncOverride: DeleteNetworkInterfacePermissionAsyncType<ClientInvocationReportingType>?
    let deleteNetworkInterfacePermissionSyncOverride: DeleteNetworkInterfacePermissionSyncType<ClientInvocationReportingType>?
    let deletePlacementGroupAsyncOverride: DeletePlacementGroupAsyncType<ClientInvocationReportingType>?
    let deletePlacementGroupSyncOverride: DeletePlacementGroupSyncType<ClientInvocationReportingType>?
    let deleteQueuedReservedInstancesAsyncOverride: DeleteQueuedReservedInstancesAsyncType<ClientInvocationReportingType>?
    let deleteQueuedReservedInstancesSyncOverride: DeleteQueuedReservedInstancesSyncType<ClientInvocationReportingType>?
    let deleteRouteAsyncOverride: DeleteRouteAsyncType<ClientInvocationReportingType>?
    let deleteRouteSyncOverride: DeleteRouteSyncType<ClientInvocationReportingType>?
    let deleteRouteTableAsyncOverride: DeleteRouteTableAsyncType<ClientInvocationReportingType>?
    let deleteRouteTableSyncOverride: DeleteRouteTableSyncType<ClientInvocationReportingType>?
    let deleteSecurityGroupAsyncOverride: DeleteSecurityGroupAsyncType<ClientInvocationReportingType>?
    let deleteSecurityGroupSyncOverride: DeleteSecurityGroupSyncType<ClientInvocationReportingType>?
    let deleteSnapshotAsyncOverride: DeleteSnapshotAsyncType<ClientInvocationReportingType>?
    let deleteSnapshotSyncOverride: DeleteSnapshotSyncType<ClientInvocationReportingType>?
    let deleteSpotDatafeedSubscriptionAsyncOverride: DeleteSpotDatafeedSubscriptionAsyncType<ClientInvocationReportingType>?
    let deleteSpotDatafeedSubscriptionSyncOverride: DeleteSpotDatafeedSubscriptionSyncType<ClientInvocationReportingType>?
    let deleteSubnetAsyncOverride: DeleteSubnetAsyncType<ClientInvocationReportingType>?
    let deleteSubnetSyncOverride: DeleteSubnetSyncType<ClientInvocationReportingType>?
    let deleteTagsAsyncOverride: DeleteTagsAsyncType<ClientInvocationReportingType>?
    let deleteTagsSyncOverride: DeleteTagsSyncType<ClientInvocationReportingType>?
    let deleteTrafficMirrorFilterAsyncOverride: DeleteTrafficMirrorFilterAsyncType<ClientInvocationReportingType>?
    let deleteTrafficMirrorFilterSyncOverride: DeleteTrafficMirrorFilterSyncType<ClientInvocationReportingType>?
    let deleteTrafficMirrorFilterRuleAsyncOverride: DeleteTrafficMirrorFilterRuleAsyncType<ClientInvocationReportingType>?
    let deleteTrafficMirrorFilterRuleSyncOverride: DeleteTrafficMirrorFilterRuleSyncType<ClientInvocationReportingType>?
    let deleteTrafficMirrorSessionAsyncOverride: DeleteTrafficMirrorSessionAsyncType<ClientInvocationReportingType>?
    let deleteTrafficMirrorSessionSyncOverride: DeleteTrafficMirrorSessionSyncType<ClientInvocationReportingType>?
    let deleteTrafficMirrorTargetAsyncOverride: DeleteTrafficMirrorTargetAsyncType<ClientInvocationReportingType>?
    let deleteTrafficMirrorTargetSyncOverride: DeleteTrafficMirrorTargetSyncType<ClientInvocationReportingType>?
    let deleteTransitGatewayAsyncOverride: DeleteTransitGatewayAsyncType<ClientInvocationReportingType>?
    let deleteTransitGatewaySyncOverride: DeleteTransitGatewaySyncType<ClientInvocationReportingType>?
    let deleteTransitGatewayMulticastDomainAsyncOverride: DeleteTransitGatewayMulticastDomainAsyncType<ClientInvocationReportingType>?
    let deleteTransitGatewayMulticastDomainSyncOverride: DeleteTransitGatewayMulticastDomainSyncType<ClientInvocationReportingType>?
    let deleteTransitGatewayPeeringAttachmentAsyncOverride: DeleteTransitGatewayPeeringAttachmentAsyncType<ClientInvocationReportingType>?
    let deleteTransitGatewayPeeringAttachmentSyncOverride: DeleteTransitGatewayPeeringAttachmentSyncType<ClientInvocationReportingType>?
    let deleteTransitGatewayRouteAsyncOverride: DeleteTransitGatewayRouteAsyncType<ClientInvocationReportingType>?
    let deleteTransitGatewayRouteSyncOverride: DeleteTransitGatewayRouteSyncType<ClientInvocationReportingType>?
    let deleteTransitGatewayRouteTableAsyncOverride: DeleteTransitGatewayRouteTableAsyncType<ClientInvocationReportingType>?
    let deleteTransitGatewayRouteTableSyncOverride: DeleteTransitGatewayRouteTableSyncType<ClientInvocationReportingType>?
    let deleteTransitGatewayVpcAttachmentAsyncOverride: DeleteTransitGatewayVpcAttachmentAsyncType<ClientInvocationReportingType>?
    let deleteTransitGatewayVpcAttachmentSyncOverride: DeleteTransitGatewayVpcAttachmentSyncType<ClientInvocationReportingType>?
    let deleteVolumeAsyncOverride: DeleteVolumeAsyncType<ClientInvocationReportingType>?
    let deleteVolumeSyncOverride: DeleteVolumeSyncType<ClientInvocationReportingType>?
    let deleteVpcAsyncOverride: DeleteVpcAsyncType<ClientInvocationReportingType>?
    let deleteVpcSyncOverride: DeleteVpcSyncType<ClientInvocationReportingType>?
    let deleteVpcEndpointConnectionNotificationsAsyncOverride: DeleteVpcEndpointConnectionNotificationsAsyncType<ClientInvocationReportingType>?
    let deleteVpcEndpointConnectionNotificationsSyncOverride: DeleteVpcEndpointConnectionNotificationsSyncType<ClientInvocationReportingType>?
    let deleteVpcEndpointServiceConfigurationsAsyncOverride: DeleteVpcEndpointServiceConfigurationsAsyncType<ClientInvocationReportingType>?
    let deleteVpcEndpointServiceConfigurationsSyncOverride: DeleteVpcEndpointServiceConfigurationsSyncType<ClientInvocationReportingType>?
    let deleteVpcEndpointsAsyncOverride: DeleteVpcEndpointsAsyncType<ClientInvocationReportingType>?
    let deleteVpcEndpointsSyncOverride: DeleteVpcEndpointsSyncType<ClientInvocationReportingType>?
    let deleteVpcPeeringConnectionAsyncOverride: DeleteVpcPeeringConnectionAsyncType<ClientInvocationReportingType>?
    let deleteVpcPeeringConnectionSyncOverride: DeleteVpcPeeringConnectionSyncType<ClientInvocationReportingType>?
    let deleteVpnConnectionAsyncOverride: DeleteVpnConnectionAsyncType<ClientInvocationReportingType>?
    let deleteVpnConnectionSyncOverride: DeleteVpnConnectionSyncType<ClientInvocationReportingType>?
    let deleteVpnConnectionRouteAsyncOverride: DeleteVpnConnectionRouteAsyncType<ClientInvocationReportingType>?
    let deleteVpnConnectionRouteSyncOverride: DeleteVpnConnectionRouteSyncType<ClientInvocationReportingType>?
    let deleteVpnGatewayAsyncOverride: DeleteVpnGatewayAsyncType<ClientInvocationReportingType>?
    let deleteVpnGatewaySyncOverride: DeleteVpnGatewaySyncType<ClientInvocationReportingType>?
    let deprovisionByoipCidrAsyncOverride: DeprovisionByoipCidrAsyncType<ClientInvocationReportingType>?
    let deprovisionByoipCidrSyncOverride: DeprovisionByoipCidrSyncType<ClientInvocationReportingType>?
    let deregisterImageAsyncOverride: DeregisterImageAsyncType<ClientInvocationReportingType>?
    let deregisterImageSyncOverride: DeregisterImageSyncType<ClientInvocationReportingType>?
    let deregisterTransitGatewayMulticastGroupMembersAsyncOverride: DeregisterTransitGatewayMulticastGroupMembersAsyncType<ClientInvocationReportingType>?
    let deregisterTransitGatewayMulticastGroupMembersSyncOverride: DeregisterTransitGatewayMulticastGroupMembersSyncType<ClientInvocationReportingType>?
    let deregisterTransitGatewayMulticastGroupSourcesAsyncOverride: DeregisterTransitGatewayMulticastGroupSourcesAsyncType<ClientInvocationReportingType>?
    let deregisterTransitGatewayMulticastGroupSourcesSyncOverride: DeregisterTransitGatewayMulticastGroupSourcesSyncType<ClientInvocationReportingType>?
    let describeAccountAttributesAsyncOverride: DescribeAccountAttributesAsyncType<ClientInvocationReportingType>?
    let describeAccountAttributesSyncOverride: DescribeAccountAttributesSyncType<ClientInvocationReportingType>?
    let describeAddressesAsyncOverride: DescribeAddressesAsyncType<ClientInvocationReportingType>?
    let describeAddressesSyncOverride: DescribeAddressesSyncType<ClientInvocationReportingType>?
    let describeAggregateIdFormatAsyncOverride: DescribeAggregateIdFormatAsyncType<ClientInvocationReportingType>?
    let describeAggregateIdFormatSyncOverride: DescribeAggregateIdFormatSyncType<ClientInvocationReportingType>?
    let describeAvailabilityZonesAsyncOverride: DescribeAvailabilityZonesAsyncType<ClientInvocationReportingType>?
    let describeAvailabilityZonesSyncOverride: DescribeAvailabilityZonesSyncType<ClientInvocationReportingType>?
    let describeBundleTasksAsyncOverride: DescribeBundleTasksAsyncType<ClientInvocationReportingType>?
    let describeBundleTasksSyncOverride: DescribeBundleTasksSyncType<ClientInvocationReportingType>?
    let describeByoipCidrsAsyncOverride: DescribeByoipCidrsAsyncType<ClientInvocationReportingType>?
    let describeByoipCidrsSyncOverride: DescribeByoipCidrsSyncType<ClientInvocationReportingType>?
    let describeCapacityReservationsAsyncOverride: DescribeCapacityReservationsAsyncType<ClientInvocationReportingType>?
    let describeCapacityReservationsSyncOverride: DescribeCapacityReservationsSyncType<ClientInvocationReportingType>?
    let describeClassicLinkInstancesAsyncOverride: DescribeClassicLinkInstancesAsyncType<ClientInvocationReportingType>?
    let describeClassicLinkInstancesSyncOverride: DescribeClassicLinkInstancesSyncType<ClientInvocationReportingType>?
    let describeClientVpnAuthorizationRulesAsyncOverride: DescribeClientVpnAuthorizationRulesAsyncType<ClientInvocationReportingType>?
    let describeClientVpnAuthorizationRulesSyncOverride: DescribeClientVpnAuthorizationRulesSyncType<ClientInvocationReportingType>?
    let describeClientVpnConnectionsAsyncOverride: DescribeClientVpnConnectionsAsyncType<ClientInvocationReportingType>?
    let describeClientVpnConnectionsSyncOverride: DescribeClientVpnConnectionsSyncType<ClientInvocationReportingType>?
    let describeClientVpnEndpointsAsyncOverride: DescribeClientVpnEndpointsAsyncType<ClientInvocationReportingType>?
    let describeClientVpnEndpointsSyncOverride: DescribeClientVpnEndpointsSyncType<ClientInvocationReportingType>?
    let describeClientVpnRoutesAsyncOverride: DescribeClientVpnRoutesAsyncType<ClientInvocationReportingType>?
    let describeClientVpnRoutesSyncOverride: DescribeClientVpnRoutesSyncType<ClientInvocationReportingType>?
    let describeClientVpnTargetNetworksAsyncOverride: DescribeClientVpnTargetNetworksAsyncType<ClientInvocationReportingType>?
    let describeClientVpnTargetNetworksSyncOverride: DescribeClientVpnTargetNetworksSyncType<ClientInvocationReportingType>?
    let describeCoipPoolsAsyncOverride: DescribeCoipPoolsAsyncType<ClientInvocationReportingType>?
    let describeCoipPoolsSyncOverride: DescribeCoipPoolsSyncType<ClientInvocationReportingType>?
    let describeConversionTasksAsyncOverride: DescribeConversionTasksAsyncType<ClientInvocationReportingType>?
    let describeConversionTasksSyncOverride: DescribeConversionTasksSyncType<ClientInvocationReportingType>?
    let describeCustomerGatewaysAsyncOverride: DescribeCustomerGatewaysAsyncType<ClientInvocationReportingType>?
    let describeCustomerGatewaysSyncOverride: DescribeCustomerGatewaysSyncType<ClientInvocationReportingType>?
    let describeDhcpOptionsAsyncOverride: DescribeDhcpOptionsAsyncType<ClientInvocationReportingType>?
    let describeDhcpOptionsSyncOverride: DescribeDhcpOptionsSyncType<ClientInvocationReportingType>?
    let describeEgressOnlyInternetGatewaysAsyncOverride: DescribeEgressOnlyInternetGatewaysAsyncType<ClientInvocationReportingType>?
    let describeEgressOnlyInternetGatewaysSyncOverride: DescribeEgressOnlyInternetGatewaysSyncType<ClientInvocationReportingType>?
    let describeElasticGpusAsyncOverride: DescribeElasticGpusAsyncType<ClientInvocationReportingType>?
    let describeElasticGpusSyncOverride: DescribeElasticGpusSyncType<ClientInvocationReportingType>?
    let describeExportImageTasksAsyncOverride: DescribeExportImageTasksAsyncType<ClientInvocationReportingType>?
    let describeExportImageTasksSyncOverride: DescribeExportImageTasksSyncType<ClientInvocationReportingType>?
    let describeExportTasksAsyncOverride: DescribeExportTasksAsyncType<ClientInvocationReportingType>?
    let describeExportTasksSyncOverride: DescribeExportTasksSyncType<ClientInvocationReportingType>?
    let describeFastSnapshotRestoresAsyncOverride: DescribeFastSnapshotRestoresAsyncType<ClientInvocationReportingType>?
    let describeFastSnapshotRestoresSyncOverride: DescribeFastSnapshotRestoresSyncType<ClientInvocationReportingType>?
    let describeFleetHistoryAsyncOverride: DescribeFleetHistoryAsyncType<ClientInvocationReportingType>?
    let describeFleetHistorySyncOverride: DescribeFleetHistorySyncType<ClientInvocationReportingType>?
    let describeFleetInstancesAsyncOverride: DescribeFleetInstancesAsyncType<ClientInvocationReportingType>?
    let describeFleetInstancesSyncOverride: DescribeFleetInstancesSyncType<ClientInvocationReportingType>?
    let describeFleetsAsyncOverride: DescribeFleetsAsyncType<ClientInvocationReportingType>?
    let describeFleetsSyncOverride: DescribeFleetsSyncType<ClientInvocationReportingType>?
    let describeFlowLogsAsyncOverride: DescribeFlowLogsAsyncType<ClientInvocationReportingType>?
    let describeFlowLogsSyncOverride: DescribeFlowLogsSyncType<ClientInvocationReportingType>?
    let describeFpgaImageAttributeAsyncOverride: DescribeFpgaImageAttributeAsyncType<ClientInvocationReportingType>?
    let describeFpgaImageAttributeSyncOverride: DescribeFpgaImageAttributeSyncType<ClientInvocationReportingType>?
    let describeFpgaImagesAsyncOverride: DescribeFpgaImagesAsyncType<ClientInvocationReportingType>?
    let describeFpgaImagesSyncOverride: DescribeFpgaImagesSyncType<ClientInvocationReportingType>?
    let describeHostReservationOfferingsAsyncOverride: DescribeHostReservationOfferingsAsyncType<ClientInvocationReportingType>?
    let describeHostReservationOfferingsSyncOverride: DescribeHostReservationOfferingsSyncType<ClientInvocationReportingType>?
    let describeHostReservationsAsyncOverride: DescribeHostReservationsAsyncType<ClientInvocationReportingType>?
    let describeHostReservationsSyncOverride: DescribeHostReservationsSyncType<ClientInvocationReportingType>?
    let describeHostsAsyncOverride: DescribeHostsAsyncType<ClientInvocationReportingType>?
    let describeHostsSyncOverride: DescribeHostsSyncType<ClientInvocationReportingType>?
    let describeIamInstanceProfileAssociationsAsyncOverride: DescribeIamInstanceProfileAssociationsAsyncType<ClientInvocationReportingType>?
    let describeIamInstanceProfileAssociationsSyncOverride: DescribeIamInstanceProfileAssociationsSyncType<ClientInvocationReportingType>?
    let describeIdFormatAsyncOverride: DescribeIdFormatAsyncType<ClientInvocationReportingType>?
    let describeIdFormatSyncOverride: DescribeIdFormatSyncType<ClientInvocationReportingType>?
    let describeIdentityIdFormatAsyncOverride: DescribeIdentityIdFormatAsyncType<ClientInvocationReportingType>?
    let describeIdentityIdFormatSyncOverride: DescribeIdentityIdFormatSyncType<ClientInvocationReportingType>?
    let describeImageAttributeAsyncOverride: DescribeImageAttributeAsyncType<ClientInvocationReportingType>?
    let describeImageAttributeSyncOverride: DescribeImageAttributeSyncType<ClientInvocationReportingType>?
    let describeImagesAsyncOverride: DescribeImagesAsyncType<ClientInvocationReportingType>?
    let describeImagesSyncOverride: DescribeImagesSyncType<ClientInvocationReportingType>?
    let describeImportImageTasksAsyncOverride: DescribeImportImageTasksAsyncType<ClientInvocationReportingType>?
    let describeImportImageTasksSyncOverride: DescribeImportImageTasksSyncType<ClientInvocationReportingType>?
    let describeImportSnapshotTasksAsyncOverride: DescribeImportSnapshotTasksAsyncType<ClientInvocationReportingType>?
    let describeImportSnapshotTasksSyncOverride: DescribeImportSnapshotTasksSyncType<ClientInvocationReportingType>?
    let describeInstanceAttributeAsyncOverride: DescribeInstanceAttributeAsyncType<ClientInvocationReportingType>?
    let describeInstanceAttributeSyncOverride: DescribeInstanceAttributeSyncType<ClientInvocationReportingType>?
    let describeInstanceCreditSpecificationsAsyncOverride: DescribeInstanceCreditSpecificationsAsyncType<ClientInvocationReportingType>?
    let describeInstanceCreditSpecificationsSyncOverride: DescribeInstanceCreditSpecificationsSyncType<ClientInvocationReportingType>?
    let describeInstanceStatusAsyncOverride: DescribeInstanceStatusAsyncType<ClientInvocationReportingType>?
    let describeInstanceStatusSyncOverride: DescribeInstanceStatusSyncType<ClientInvocationReportingType>?
    let describeInstanceTypeOfferingsAsyncOverride: DescribeInstanceTypeOfferingsAsyncType<ClientInvocationReportingType>?
    let describeInstanceTypeOfferingsSyncOverride: DescribeInstanceTypeOfferingsSyncType<ClientInvocationReportingType>?
    let describeInstanceTypesAsyncOverride: DescribeInstanceTypesAsyncType<ClientInvocationReportingType>?
    let describeInstanceTypesSyncOverride: DescribeInstanceTypesSyncType<ClientInvocationReportingType>?
    let describeInstancesAsyncOverride: DescribeInstancesAsyncType<ClientInvocationReportingType>?
    let describeInstancesSyncOverride: DescribeInstancesSyncType<ClientInvocationReportingType>?
    let describeInternetGatewaysAsyncOverride: DescribeInternetGatewaysAsyncType<ClientInvocationReportingType>?
    let describeInternetGatewaysSyncOverride: DescribeInternetGatewaysSyncType<ClientInvocationReportingType>?
    let describeIpv6PoolsAsyncOverride: DescribeIpv6PoolsAsyncType<ClientInvocationReportingType>?
    let describeIpv6PoolsSyncOverride: DescribeIpv6PoolsSyncType<ClientInvocationReportingType>?
    let describeKeyPairsAsyncOverride: DescribeKeyPairsAsyncType<ClientInvocationReportingType>?
    let describeKeyPairsSyncOverride: DescribeKeyPairsSyncType<ClientInvocationReportingType>?
    let describeLaunchTemplateVersionsAsyncOverride: DescribeLaunchTemplateVersionsAsyncType<ClientInvocationReportingType>?
    let describeLaunchTemplateVersionsSyncOverride: DescribeLaunchTemplateVersionsSyncType<ClientInvocationReportingType>?
    let describeLaunchTemplatesAsyncOverride: DescribeLaunchTemplatesAsyncType<ClientInvocationReportingType>?
    let describeLaunchTemplatesSyncOverride: DescribeLaunchTemplatesSyncType<ClientInvocationReportingType>?
    let describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsyncOverride: DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsyncType<ClientInvocationReportingType>?
    let describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsSyncOverride: DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsSyncType<ClientInvocationReportingType>?
    let describeLocalGatewayRouteTableVpcAssociationsAsyncOverride: DescribeLocalGatewayRouteTableVpcAssociationsAsyncType<ClientInvocationReportingType>?
    let describeLocalGatewayRouteTableVpcAssociationsSyncOverride: DescribeLocalGatewayRouteTableVpcAssociationsSyncType<ClientInvocationReportingType>?
    let describeLocalGatewayRouteTablesAsyncOverride: DescribeLocalGatewayRouteTablesAsyncType<ClientInvocationReportingType>?
    let describeLocalGatewayRouteTablesSyncOverride: DescribeLocalGatewayRouteTablesSyncType<ClientInvocationReportingType>?
    let describeLocalGatewayVirtualInterfaceGroupsAsyncOverride: DescribeLocalGatewayVirtualInterfaceGroupsAsyncType<ClientInvocationReportingType>?
    let describeLocalGatewayVirtualInterfaceGroupsSyncOverride: DescribeLocalGatewayVirtualInterfaceGroupsSyncType<ClientInvocationReportingType>?
    let describeLocalGatewayVirtualInterfacesAsyncOverride: DescribeLocalGatewayVirtualInterfacesAsyncType<ClientInvocationReportingType>?
    let describeLocalGatewayVirtualInterfacesSyncOverride: DescribeLocalGatewayVirtualInterfacesSyncType<ClientInvocationReportingType>?
    let describeLocalGatewaysAsyncOverride: DescribeLocalGatewaysAsyncType<ClientInvocationReportingType>?
    let describeLocalGatewaysSyncOverride: DescribeLocalGatewaysSyncType<ClientInvocationReportingType>?
    let describeMovingAddressesAsyncOverride: DescribeMovingAddressesAsyncType<ClientInvocationReportingType>?
    let describeMovingAddressesSyncOverride: DescribeMovingAddressesSyncType<ClientInvocationReportingType>?
    let describeNatGatewaysAsyncOverride: DescribeNatGatewaysAsyncType<ClientInvocationReportingType>?
    let describeNatGatewaysSyncOverride: DescribeNatGatewaysSyncType<ClientInvocationReportingType>?
    let describeNetworkAclsAsyncOverride: DescribeNetworkAclsAsyncType<ClientInvocationReportingType>?
    let describeNetworkAclsSyncOverride: DescribeNetworkAclsSyncType<ClientInvocationReportingType>?
    let describeNetworkInterfaceAttributeAsyncOverride: DescribeNetworkInterfaceAttributeAsyncType<ClientInvocationReportingType>?
    let describeNetworkInterfaceAttributeSyncOverride: DescribeNetworkInterfaceAttributeSyncType<ClientInvocationReportingType>?
    let describeNetworkInterfacePermissionsAsyncOverride: DescribeNetworkInterfacePermissionsAsyncType<ClientInvocationReportingType>?
    let describeNetworkInterfacePermissionsSyncOverride: DescribeNetworkInterfacePermissionsSyncType<ClientInvocationReportingType>?
    let describeNetworkInterfacesAsyncOverride: DescribeNetworkInterfacesAsyncType<ClientInvocationReportingType>?
    let describeNetworkInterfacesSyncOverride: DescribeNetworkInterfacesSyncType<ClientInvocationReportingType>?
    let describePlacementGroupsAsyncOverride: DescribePlacementGroupsAsyncType<ClientInvocationReportingType>?
    let describePlacementGroupsSyncOverride: DescribePlacementGroupsSyncType<ClientInvocationReportingType>?
    let describePrefixListsAsyncOverride: DescribePrefixListsAsyncType<ClientInvocationReportingType>?
    let describePrefixListsSyncOverride: DescribePrefixListsSyncType<ClientInvocationReportingType>?
    let describePrincipalIdFormatAsyncOverride: DescribePrincipalIdFormatAsyncType<ClientInvocationReportingType>?
    let describePrincipalIdFormatSyncOverride: DescribePrincipalIdFormatSyncType<ClientInvocationReportingType>?
    let describePublicIpv4PoolsAsyncOverride: DescribePublicIpv4PoolsAsyncType<ClientInvocationReportingType>?
    let describePublicIpv4PoolsSyncOverride: DescribePublicIpv4PoolsSyncType<ClientInvocationReportingType>?
    let describeRegionsAsyncOverride: DescribeRegionsAsyncType<ClientInvocationReportingType>?
    let describeRegionsSyncOverride: DescribeRegionsSyncType<ClientInvocationReportingType>?
    let describeReservedInstancesAsyncOverride: DescribeReservedInstancesAsyncType<ClientInvocationReportingType>?
    let describeReservedInstancesSyncOverride: DescribeReservedInstancesSyncType<ClientInvocationReportingType>?
    let describeReservedInstancesListingsAsyncOverride: DescribeReservedInstancesListingsAsyncType<ClientInvocationReportingType>?
    let describeReservedInstancesListingsSyncOverride: DescribeReservedInstancesListingsSyncType<ClientInvocationReportingType>?
    let describeReservedInstancesModificationsAsyncOverride: DescribeReservedInstancesModificationsAsyncType<ClientInvocationReportingType>?
    let describeReservedInstancesModificationsSyncOverride: DescribeReservedInstancesModificationsSyncType<ClientInvocationReportingType>?
    let describeReservedInstancesOfferingsAsyncOverride: DescribeReservedInstancesOfferingsAsyncType<ClientInvocationReportingType>?
    let describeReservedInstancesOfferingsSyncOverride: DescribeReservedInstancesOfferingsSyncType<ClientInvocationReportingType>?
    let describeRouteTablesAsyncOverride: DescribeRouteTablesAsyncType<ClientInvocationReportingType>?
    let describeRouteTablesSyncOverride: DescribeRouteTablesSyncType<ClientInvocationReportingType>?
    let describeScheduledInstanceAvailabilityAsyncOverride: DescribeScheduledInstanceAvailabilityAsyncType<ClientInvocationReportingType>?
    let describeScheduledInstanceAvailabilitySyncOverride: DescribeScheduledInstanceAvailabilitySyncType<ClientInvocationReportingType>?
    let describeScheduledInstancesAsyncOverride: DescribeScheduledInstancesAsyncType<ClientInvocationReportingType>?
    let describeScheduledInstancesSyncOverride: DescribeScheduledInstancesSyncType<ClientInvocationReportingType>?
    let describeSecurityGroupReferencesAsyncOverride: DescribeSecurityGroupReferencesAsyncType<ClientInvocationReportingType>?
    let describeSecurityGroupReferencesSyncOverride: DescribeSecurityGroupReferencesSyncType<ClientInvocationReportingType>?
    let describeSecurityGroupsAsyncOverride: DescribeSecurityGroupsAsyncType<ClientInvocationReportingType>?
    let describeSecurityGroupsSyncOverride: DescribeSecurityGroupsSyncType<ClientInvocationReportingType>?
    let describeSnapshotAttributeAsyncOverride: DescribeSnapshotAttributeAsyncType<ClientInvocationReportingType>?
    let describeSnapshotAttributeSyncOverride: DescribeSnapshotAttributeSyncType<ClientInvocationReportingType>?
    let describeSnapshotsAsyncOverride: DescribeSnapshotsAsyncType<ClientInvocationReportingType>?
    let describeSnapshotsSyncOverride: DescribeSnapshotsSyncType<ClientInvocationReportingType>?
    let describeSpotDatafeedSubscriptionAsyncOverride: DescribeSpotDatafeedSubscriptionAsyncType<ClientInvocationReportingType>?
    let describeSpotDatafeedSubscriptionSyncOverride: DescribeSpotDatafeedSubscriptionSyncType<ClientInvocationReportingType>?
    let describeSpotFleetInstancesAsyncOverride: DescribeSpotFleetInstancesAsyncType<ClientInvocationReportingType>?
    let describeSpotFleetInstancesSyncOverride: DescribeSpotFleetInstancesSyncType<ClientInvocationReportingType>?
    let describeSpotFleetRequestHistoryAsyncOverride: DescribeSpotFleetRequestHistoryAsyncType<ClientInvocationReportingType>?
    let describeSpotFleetRequestHistorySyncOverride: DescribeSpotFleetRequestHistorySyncType<ClientInvocationReportingType>?
    let describeSpotFleetRequestsAsyncOverride: DescribeSpotFleetRequestsAsyncType<ClientInvocationReportingType>?
    let describeSpotFleetRequestsSyncOverride: DescribeSpotFleetRequestsSyncType<ClientInvocationReportingType>?
    let describeSpotInstanceRequestsAsyncOverride: DescribeSpotInstanceRequestsAsyncType<ClientInvocationReportingType>?
    let describeSpotInstanceRequestsSyncOverride: DescribeSpotInstanceRequestsSyncType<ClientInvocationReportingType>?
    let describeSpotPriceHistoryAsyncOverride: DescribeSpotPriceHistoryAsyncType<ClientInvocationReportingType>?
    let describeSpotPriceHistorySyncOverride: DescribeSpotPriceHistorySyncType<ClientInvocationReportingType>?
    let describeStaleSecurityGroupsAsyncOverride: DescribeStaleSecurityGroupsAsyncType<ClientInvocationReportingType>?
    let describeStaleSecurityGroupsSyncOverride: DescribeStaleSecurityGroupsSyncType<ClientInvocationReportingType>?
    let describeSubnetsAsyncOverride: DescribeSubnetsAsyncType<ClientInvocationReportingType>?
    let describeSubnetsSyncOverride: DescribeSubnetsSyncType<ClientInvocationReportingType>?
    let describeTagsAsyncOverride: DescribeTagsAsyncType<ClientInvocationReportingType>?
    let describeTagsSyncOverride: DescribeTagsSyncType<ClientInvocationReportingType>?
    let describeTrafficMirrorFiltersAsyncOverride: DescribeTrafficMirrorFiltersAsyncType<ClientInvocationReportingType>?
    let describeTrafficMirrorFiltersSyncOverride: DescribeTrafficMirrorFiltersSyncType<ClientInvocationReportingType>?
    let describeTrafficMirrorSessionsAsyncOverride: DescribeTrafficMirrorSessionsAsyncType<ClientInvocationReportingType>?
    let describeTrafficMirrorSessionsSyncOverride: DescribeTrafficMirrorSessionsSyncType<ClientInvocationReportingType>?
    let describeTrafficMirrorTargetsAsyncOverride: DescribeTrafficMirrorTargetsAsyncType<ClientInvocationReportingType>?
    let describeTrafficMirrorTargetsSyncOverride: DescribeTrafficMirrorTargetsSyncType<ClientInvocationReportingType>?
    let describeTransitGatewayAttachmentsAsyncOverride: DescribeTransitGatewayAttachmentsAsyncType<ClientInvocationReportingType>?
    let describeTransitGatewayAttachmentsSyncOverride: DescribeTransitGatewayAttachmentsSyncType<ClientInvocationReportingType>?
    let describeTransitGatewayMulticastDomainsAsyncOverride: DescribeTransitGatewayMulticastDomainsAsyncType<ClientInvocationReportingType>?
    let describeTransitGatewayMulticastDomainsSyncOverride: DescribeTransitGatewayMulticastDomainsSyncType<ClientInvocationReportingType>?
    let describeTransitGatewayPeeringAttachmentsAsyncOverride: DescribeTransitGatewayPeeringAttachmentsAsyncType<ClientInvocationReportingType>?
    let describeTransitGatewayPeeringAttachmentsSyncOverride: DescribeTransitGatewayPeeringAttachmentsSyncType<ClientInvocationReportingType>?
    let describeTransitGatewayRouteTablesAsyncOverride: DescribeTransitGatewayRouteTablesAsyncType<ClientInvocationReportingType>?
    let describeTransitGatewayRouteTablesSyncOverride: DescribeTransitGatewayRouteTablesSyncType<ClientInvocationReportingType>?
    let describeTransitGatewayVpcAttachmentsAsyncOverride: DescribeTransitGatewayVpcAttachmentsAsyncType<ClientInvocationReportingType>?
    let describeTransitGatewayVpcAttachmentsSyncOverride: DescribeTransitGatewayVpcAttachmentsSyncType<ClientInvocationReportingType>?
    let describeTransitGatewaysAsyncOverride: DescribeTransitGatewaysAsyncType<ClientInvocationReportingType>?
    let describeTransitGatewaysSyncOverride: DescribeTransitGatewaysSyncType<ClientInvocationReportingType>?
    let describeVolumeAttributeAsyncOverride: DescribeVolumeAttributeAsyncType<ClientInvocationReportingType>?
    let describeVolumeAttributeSyncOverride: DescribeVolumeAttributeSyncType<ClientInvocationReportingType>?
    let describeVolumeStatusAsyncOverride: DescribeVolumeStatusAsyncType<ClientInvocationReportingType>?
    let describeVolumeStatusSyncOverride: DescribeVolumeStatusSyncType<ClientInvocationReportingType>?
    let describeVolumesAsyncOverride: DescribeVolumesAsyncType<ClientInvocationReportingType>?
    let describeVolumesSyncOverride: DescribeVolumesSyncType<ClientInvocationReportingType>?
    let describeVolumesModificationsAsyncOverride: DescribeVolumesModificationsAsyncType<ClientInvocationReportingType>?
    let describeVolumesModificationsSyncOverride: DescribeVolumesModificationsSyncType<ClientInvocationReportingType>?
    let describeVpcAttributeAsyncOverride: DescribeVpcAttributeAsyncType<ClientInvocationReportingType>?
    let describeVpcAttributeSyncOverride: DescribeVpcAttributeSyncType<ClientInvocationReportingType>?
    let describeVpcClassicLinkAsyncOverride: DescribeVpcClassicLinkAsyncType<ClientInvocationReportingType>?
    let describeVpcClassicLinkSyncOverride: DescribeVpcClassicLinkSyncType<ClientInvocationReportingType>?
    let describeVpcClassicLinkDnsSupportAsyncOverride: DescribeVpcClassicLinkDnsSupportAsyncType<ClientInvocationReportingType>?
    let describeVpcClassicLinkDnsSupportSyncOverride: DescribeVpcClassicLinkDnsSupportSyncType<ClientInvocationReportingType>?
    let describeVpcEndpointConnectionNotificationsAsyncOverride: DescribeVpcEndpointConnectionNotificationsAsyncType<ClientInvocationReportingType>?
    let describeVpcEndpointConnectionNotificationsSyncOverride: DescribeVpcEndpointConnectionNotificationsSyncType<ClientInvocationReportingType>?
    let describeVpcEndpointConnectionsAsyncOverride: DescribeVpcEndpointConnectionsAsyncType<ClientInvocationReportingType>?
    let describeVpcEndpointConnectionsSyncOverride: DescribeVpcEndpointConnectionsSyncType<ClientInvocationReportingType>?
    let describeVpcEndpointServiceConfigurationsAsyncOverride: DescribeVpcEndpointServiceConfigurationsAsyncType<ClientInvocationReportingType>?
    let describeVpcEndpointServiceConfigurationsSyncOverride: DescribeVpcEndpointServiceConfigurationsSyncType<ClientInvocationReportingType>?
    let describeVpcEndpointServicePermissionsAsyncOverride: DescribeVpcEndpointServicePermissionsAsyncType<ClientInvocationReportingType>?
    let describeVpcEndpointServicePermissionsSyncOverride: DescribeVpcEndpointServicePermissionsSyncType<ClientInvocationReportingType>?
    let describeVpcEndpointServicesAsyncOverride: DescribeVpcEndpointServicesAsyncType<ClientInvocationReportingType>?
    let describeVpcEndpointServicesSyncOverride: DescribeVpcEndpointServicesSyncType<ClientInvocationReportingType>?
    let describeVpcEndpointsAsyncOverride: DescribeVpcEndpointsAsyncType<ClientInvocationReportingType>?
    let describeVpcEndpointsSyncOverride: DescribeVpcEndpointsSyncType<ClientInvocationReportingType>?
    let describeVpcPeeringConnectionsAsyncOverride: DescribeVpcPeeringConnectionsAsyncType<ClientInvocationReportingType>?
    let describeVpcPeeringConnectionsSyncOverride: DescribeVpcPeeringConnectionsSyncType<ClientInvocationReportingType>?
    let describeVpcsAsyncOverride: DescribeVpcsAsyncType<ClientInvocationReportingType>?
    let describeVpcsSyncOverride: DescribeVpcsSyncType<ClientInvocationReportingType>?
    let describeVpnConnectionsAsyncOverride: DescribeVpnConnectionsAsyncType<ClientInvocationReportingType>?
    let describeVpnConnectionsSyncOverride: DescribeVpnConnectionsSyncType<ClientInvocationReportingType>?
    let describeVpnGatewaysAsyncOverride: DescribeVpnGatewaysAsyncType<ClientInvocationReportingType>?
    let describeVpnGatewaysSyncOverride: DescribeVpnGatewaysSyncType<ClientInvocationReportingType>?
    let detachClassicLinkVpcAsyncOverride: DetachClassicLinkVpcAsyncType<ClientInvocationReportingType>?
    let detachClassicLinkVpcSyncOverride: DetachClassicLinkVpcSyncType<ClientInvocationReportingType>?
    let detachInternetGatewayAsyncOverride: DetachInternetGatewayAsyncType<ClientInvocationReportingType>?
    let detachInternetGatewaySyncOverride: DetachInternetGatewaySyncType<ClientInvocationReportingType>?
    let detachNetworkInterfaceAsyncOverride: DetachNetworkInterfaceAsyncType<ClientInvocationReportingType>?
    let detachNetworkInterfaceSyncOverride: DetachNetworkInterfaceSyncType<ClientInvocationReportingType>?
    let detachVolumeAsyncOverride: DetachVolumeAsyncType<ClientInvocationReportingType>?
    let detachVolumeSyncOverride: DetachVolumeSyncType<ClientInvocationReportingType>?
    let detachVpnGatewayAsyncOverride: DetachVpnGatewayAsyncType<ClientInvocationReportingType>?
    let detachVpnGatewaySyncOverride: DetachVpnGatewaySyncType<ClientInvocationReportingType>?
    let disableEbsEncryptionByDefaultAsyncOverride: DisableEbsEncryptionByDefaultAsyncType<ClientInvocationReportingType>?
    let disableEbsEncryptionByDefaultSyncOverride: DisableEbsEncryptionByDefaultSyncType<ClientInvocationReportingType>?
    let disableFastSnapshotRestoresAsyncOverride: DisableFastSnapshotRestoresAsyncType<ClientInvocationReportingType>?
    let disableFastSnapshotRestoresSyncOverride: DisableFastSnapshotRestoresSyncType<ClientInvocationReportingType>?
    let disableTransitGatewayRouteTablePropagationAsyncOverride: DisableTransitGatewayRouteTablePropagationAsyncType<ClientInvocationReportingType>?
    let disableTransitGatewayRouteTablePropagationSyncOverride: DisableTransitGatewayRouteTablePropagationSyncType<ClientInvocationReportingType>?
    let disableVgwRoutePropagationAsyncOverride: DisableVgwRoutePropagationAsyncType<ClientInvocationReportingType>?
    let disableVgwRoutePropagationSyncOverride: DisableVgwRoutePropagationSyncType<ClientInvocationReportingType>?
    let disableVpcClassicLinkAsyncOverride: DisableVpcClassicLinkAsyncType<ClientInvocationReportingType>?
    let disableVpcClassicLinkSyncOverride: DisableVpcClassicLinkSyncType<ClientInvocationReportingType>?
    let disableVpcClassicLinkDnsSupportAsyncOverride: DisableVpcClassicLinkDnsSupportAsyncType<ClientInvocationReportingType>?
    let disableVpcClassicLinkDnsSupportSyncOverride: DisableVpcClassicLinkDnsSupportSyncType<ClientInvocationReportingType>?
    let disassociateAddressAsyncOverride: DisassociateAddressAsyncType<ClientInvocationReportingType>?
    let disassociateAddressSyncOverride: DisassociateAddressSyncType<ClientInvocationReportingType>?
    let disassociateClientVpnTargetNetworkAsyncOverride: DisassociateClientVpnTargetNetworkAsyncType<ClientInvocationReportingType>?
    let disassociateClientVpnTargetNetworkSyncOverride: DisassociateClientVpnTargetNetworkSyncType<ClientInvocationReportingType>?
    let disassociateIamInstanceProfileAsyncOverride: DisassociateIamInstanceProfileAsyncType<ClientInvocationReportingType>?
    let disassociateIamInstanceProfileSyncOverride: DisassociateIamInstanceProfileSyncType<ClientInvocationReportingType>?
    let disassociateRouteTableAsyncOverride: DisassociateRouteTableAsyncType<ClientInvocationReportingType>?
    let disassociateRouteTableSyncOverride: DisassociateRouteTableSyncType<ClientInvocationReportingType>?
    let disassociateSubnetCidrBlockAsyncOverride: DisassociateSubnetCidrBlockAsyncType<ClientInvocationReportingType>?
    let disassociateSubnetCidrBlockSyncOverride: DisassociateSubnetCidrBlockSyncType<ClientInvocationReportingType>?
    let disassociateTransitGatewayMulticastDomainAsyncOverride: DisassociateTransitGatewayMulticastDomainAsyncType<ClientInvocationReportingType>?
    let disassociateTransitGatewayMulticastDomainSyncOverride: DisassociateTransitGatewayMulticastDomainSyncType<ClientInvocationReportingType>?
    let disassociateTransitGatewayRouteTableAsyncOverride: DisassociateTransitGatewayRouteTableAsyncType<ClientInvocationReportingType>?
    let disassociateTransitGatewayRouteTableSyncOverride: DisassociateTransitGatewayRouteTableSyncType<ClientInvocationReportingType>?
    let disassociateVpcCidrBlockAsyncOverride: DisassociateVpcCidrBlockAsyncType<ClientInvocationReportingType>?
    let disassociateVpcCidrBlockSyncOverride: DisassociateVpcCidrBlockSyncType<ClientInvocationReportingType>?
    let enableEbsEncryptionByDefaultAsyncOverride: EnableEbsEncryptionByDefaultAsyncType<ClientInvocationReportingType>?
    let enableEbsEncryptionByDefaultSyncOverride: EnableEbsEncryptionByDefaultSyncType<ClientInvocationReportingType>?
    let enableFastSnapshotRestoresAsyncOverride: EnableFastSnapshotRestoresAsyncType<ClientInvocationReportingType>?
    let enableFastSnapshotRestoresSyncOverride: EnableFastSnapshotRestoresSyncType<ClientInvocationReportingType>?
    let enableTransitGatewayRouteTablePropagationAsyncOverride: EnableTransitGatewayRouteTablePropagationAsyncType<ClientInvocationReportingType>?
    let enableTransitGatewayRouteTablePropagationSyncOverride: EnableTransitGatewayRouteTablePropagationSyncType<ClientInvocationReportingType>?
    let enableVgwRoutePropagationAsyncOverride: EnableVgwRoutePropagationAsyncType<ClientInvocationReportingType>?
    let enableVgwRoutePropagationSyncOverride: EnableVgwRoutePropagationSyncType<ClientInvocationReportingType>?
    let enableVolumeIOAsyncOverride: EnableVolumeIOAsyncType<ClientInvocationReportingType>?
    let enableVolumeIOSyncOverride: EnableVolumeIOSyncType<ClientInvocationReportingType>?
    let enableVpcClassicLinkAsyncOverride: EnableVpcClassicLinkAsyncType<ClientInvocationReportingType>?
    let enableVpcClassicLinkSyncOverride: EnableVpcClassicLinkSyncType<ClientInvocationReportingType>?
    let enableVpcClassicLinkDnsSupportAsyncOverride: EnableVpcClassicLinkDnsSupportAsyncType<ClientInvocationReportingType>?
    let enableVpcClassicLinkDnsSupportSyncOverride: EnableVpcClassicLinkDnsSupportSyncType<ClientInvocationReportingType>?
    let exportClientVpnClientCertificateRevocationListAsyncOverride: ExportClientVpnClientCertificateRevocationListAsyncType<ClientInvocationReportingType>?
    let exportClientVpnClientCertificateRevocationListSyncOverride: ExportClientVpnClientCertificateRevocationListSyncType<ClientInvocationReportingType>?
    let exportClientVpnClientConfigurationAsyncOverride: ExportClientVpnClientConfigurationAsyncType<ClientInvocationReportingType>?
    let exportClientVpnClientConfigurationSyncOverride: ExportClientVpnClientConfigurationSyncType<ClientInvocationReportingType>?
    let exportImageAsyncOverride: ExportImageAsyncType<ClientInvocationReportingType>?
    let exportImageSyncOverride: ExportImageSyncType<ClientInvocationReportingType>?
    let exportTransitGatewayRoutesAsyncOverride: ExportTransitGatewayRoutesAsyncType<ClientInvocationReportingType>?
    let exportTransitGatewayRoutesSyncOverride: ExportTransitGatewayRoutesSyncType<ClientInvocationReportingType>?
    let getAssociatedIpv6PoolCidrsAsyncOverride: GetAssociatedIpv6PoolCidrsAsyncType<ClientInvocationReportingType>?
    let getAssociatedIpv6PoolCidrsSyncOverride: GetAssociatedIpv6PoolCidrsSyncType<ClientInvocationReportingType>?
    let getCapacityReservationUsageAsyncOverride: GetCapacityReservationUsageAsyncType<ClientInvocationReportingType>?
    let getCapacityReservationUsageSyncOverride: GetCapacityReservationUsageSyncType<ClientInvocationReportingType>?
    let getCoipPoolUsageAsyncOverride: GetCoipPoolUsageAsyncType<ClientInvocationReportingType>?
    let getCoipPoolUsageSyncOverride: GetCoipPoolUsageSyncType<ClientInvocationReportingType>?
    let getConsoleOutputAsyncOverride: GetConsoleOutputAsyncType<ClientInvocationReportingType>?
    let getConsoleOutputSyncOverride: GetConsoleOutputSyncType<ClientInvocationReportingType>?
    let getConsoleScreenshotAsyncOverride: GetConsoleScreenshotAsyncType<ClientInvocationReportingType>?
    let getConsoleScreenshotSyncOverride: GetConsoleScreenshotSyncType<ClientInvocationReportingType>?
    let getDefaultCreditSpecificationAsyncOverride: GetDefaultCreditSpecificationAsyncType<ClientInvocationReportingType>?
    let getDefaultCreditSpecificationSyncOverride: GetDefaultCreditSpecificationSyncType<ClientInvocationReportingType>?
    let getEbsDefaultKmsKeyIdAsyncOverride: GetEbsDefaultKmsKeyIdAsyncType<ClientInvocationReportingType>?
    let getEbsDefaultKmsKeyIdSyncOverride: GetEbsDefaultKmsKeyIdSyncType<ClientInvocationReportingType>?
    let getEbsEncryptionByDefaultAsyncOverride: GetEbsEncryptionByDefaultAsyncType<ClientInvocationReportingType>?
    let getEbsEncryptionByDefaultSyncOverride: GetEbsEncryptionByDefaultSyncType<ClientInvocationReportingType>?
    let getHostReservationPurchasePreviewAsyncOverride: GetHostReservationPurchasePreviewAsyncType<ClientInvocationReportingType>?
    let getHostReservationPurchasePreviewSyncOverride: GetHostReservationPurchasePreviewSyncType<ClientInvocationReportingType>?
    let getLaunchTemplateDataAsyncOverride: GetLaunchTemplateDataAsyncType<ClientInvocationReportingType>?
    let getLaunchTemplateDataSyncOverride: GetLaunchTemplateDataSyncType<ClientInvocationReportingType>?
    let getPasswordDataAsyncOverride: GetPasswordDataAsyncType<ClientInvocationReportingType>?
    let getPasswordDataSyncOverride: GetPasswordDataSyncType<ClientInvocationReportingType>?
    let getReservedInstancesExchangeQuoteAsyncOverride: GetReservedInstancesExchangeQuoteAsyncType<ClientInvocationReportingType>?
    let getReservedInstancesExchangeQuoteSyncOverride: GetReservedInstancesExchangeQuoteSyncType<ClientInvocationReportingType>?
    let getTransitGatewayAttachmentPropagationsAsyncOverride: GetTransitGatewayAttachmentPropagationsAsyncType<ClientInvocationReportingType>?
    let getTransitGatewayAttachmentPropagationsSyncOverride: GetTransitGatewayAttachmentPropagationsSyncType<ClientInvocationReportingType>?
    let getTransitGatewayMulticastDomainAssociationsAsyncOverride: GetTransitGatewayMulticastDomainAssociationsAsyncType<ClientInvocationReportingType>?
    let getTransitGatewayMulticastDomainAssociationsSyncOverride: GetTransitGatewayMulticastDomainAssociationsSyncType<ClientInvocationReportingType>?
    let getTransitGatewayRouteTableAssociationsAsyncOverride: GetTransitGatewayRouteTableAssociationsAsyncType<ClientInvocationReportingType>?
    let getTransitGatewayRouteTableAssociationsSyncOverride: GetTransitGatewayRouteTableAssociationsSyncType<ClientInvocationReportingType>?
    let getTransitGatewayRouteTablePropagationsAsyncOverride: GetTransitGatewayRouteTablePropagationsAsyncType<ClientInvocationReportingType>?
    let getTransitGatewayRouteTablePropagationsSyncOverride: GetTransitGatewayRouteTablePropagationsSyncType<ClientInvocationReportingType>?
    let importClientVpnClientCertificateRevocationListAsyncOverride: ImportClientVpnClientCertificateRevocationListAsyncType<ClientInvocationReportingType>?
    let importClientVpnClientCertificateRevocationListSyncOverride: ImportClientVpnClientCertificateRevocationListSyncType<ClientInvocationReportingType>?
    let importImageAsyncOverride: ImportImageAsyncType<ClientInvocationReportingType>?
    let importImageSyncOverride: ImportImageSyncType<ClientInvocationReportingType>?
    let importInstanceAsyncOverride: ImportInstanceAsyncType<ClientInvocationReportingType>?
    let importInstanceSyncOverride: ImportInstanceSyncType<ClientInvocationReportingType>?
    let importKeyPairAsyncOverride: ImportKeyPairAsyncType<ClientInvocationReportingType>?
    let importKeyPairSyncOverride: ImportKeyPairSyncType<ClientInvocationReportingType>?
    let importSnapshotAsyncOverride: ImportSnapshotAsyncType<ClientInvocationReportingType>?
    let importSnapshotSyncOverride: ImportSnapshotSyncType<ClientInvocationReportingType>?
    let importVolumeAsyncOverride: ImportVolumeAsyncType<ClientInvocationReportingType>?
    let importVolumeSyncOverride: ImportVolumeSyncType<ClientInvocationReportingType>?
    let modifyCapacityReservationAsyncOverride: ModifyCapacityReservationAsyncType<ClientInvocationReportingType>?
    let modifyCapacityReservationSyncOverride: ModifyCapacityReservationSyncType<ClientInvocationReportingType>?
    let modifyClientVpnEndpointAsyncOverride: ModifyClientVpnEndpointAsyncType<ClientInvocationReportingType>?
    let modifyClientVpnEndpointSyncOverride: ModifyClientVpnEndpointSyncType<ClientInvocationReportingType>?
    let modifyDefaultCreditSpecificationAsyncOverride: ModifyDefaultCreditSpecificationAsyncType<ClientInvocationReportingType>?
    let modifyDefaultCreditSpecificationSyncOverride: ModifyDefaultCreditSpecificationSyncType<ClientInvocationReportingType>?
    let modifyEbsDefaultKmsKeyIdAsyncOverride: ModifyEbsDefaultKmsKeyIdAsyncType<ClientInvocationReportingType>?
    let modifyEbsDefaultKmsKeyIdSyncOverride: ModifyEbsDefaultKmsKeyIdSyncType<ClientInvocationReportingType>?
    let modifyFleetAsyncOverride: ModifyFleetAsyncType<ClientInvocationReportingType>?
    let modifyFleetSyncOverride: ModifyFleetSyncType<ClientInvocationReportingType>?
    let modifyFpgaImageAttributeAsyncOverride: ModifyFpgaImageAttributeAsyncType<ClientInvocationReportingType>?
    let modifyFpgaImageAttributeSyncOverride: ModifyFpgaImageAttributeSyncType<ClientInvocationReportingType>?
    let modifyHostsAsyncOverride: ModifyHostsAsyncType<ClientInvocationReportingType>?
    let modifyHostsSyncOverride: ModifyHostsSyncType<ClientInvocationReportingType>?
    let modifyIdFormatAsyncOverride: ModifyIdFormatAsyncType<ClientInvocationReportingType>?
    let modifyIdFormatSyncOverride: ModifyIdFormatSyncType<ClientInvocationReportingType>?
    let modifyIdentityIdFormatAsyncOverride: ModifyIdentityIdFormatAsyncType<ClientInvocationReportingType>?
    let modifyIdentityIdFormatSyncOverride: ModifyIdentityIdFormatSyncType<ClientInvocationReportingType>?
    let modifyImageAttributeAsyncOverride: ModifyImageAttributeAsyncType<ClientInvocationReportingType>?
    let modifyImageAttributeSyncOverride: ModifyImageAttributeSyncType<ClientInvocationReportingType>?
    let modifyInstanceAttributeAsyncOverride: ModifyInstanceAttributeAsyncType<ClientInvocationReportingType>?
    let modifyInstanceAttributeSyncOverride: ModifyInstanceAttributeSyncType<ClientInvocationReportingType>?
    let modifyInstanceCapacityReservationAttributesAsyncOverride: ModifyInstanceCapacityReservationAttributesAsyncType<ClientInvocationReportingType>?
    let modifyInstanceCapacityReservationAttributesSyncOverride: ModifyInstanceCapacityReservationAttributesSyncType<ClientInvocationReportingType>?
    let modifyInstanceCreditSpecificationAsyncOverride: ModifyInstanceCreditSpecificationAsyncType<ClientInvocationReportingType>?
    let modifyInstanceCreditSpecificationSyncOverride: ModifyInstanceCreditSpecificationSyncType<ClientInvocationReportingType>?
    let modifyInstanceEventStartTimeAsyncOverride: ModifyInstanceEventStartTimeAsyncType<ClientInvocationReportingType>?
    let modifyInstanceEventStartTimeSyncOverride: ModifyInstanceEventStartTimeSyncType<ClientInvocationReportingType>?
    let modifyInstanceMetadataOptionsAsyncOverride: ModifyInstanceMetadataOptionsAsyncType<ClientInvocationReportingType>?
    let modifyInstanceMetadataOptionsSyncOverride: ModifyInstanceMetadataOptionsSyncType<ClientInvocationReportingType>?
    let modifyInstancePlacementAsyncOverride: ModifyInstancePlacementAsyncType<ClientInvocationReportingType>?
    let modifyInstancePlacementSyncOverride: ModifyInstancePlacementSyncType<ClientInvocationReportingType>?
    let modifyLaunchTemplateAsyncOverride: ModifyLaunchTemplateAsyncType<ClientInvocationReportingType>?
    let modifyLaunchTemplateSyncOverride: ModifyLaunchTemplateSyncType<ClientInvocationReportingType>?
    let modifyNetworkInterfaceAttributeAsyncOverride: ModifyNetworkInterfaceAttributeAsyncType<ClientInvocationReportingType>?
    let modifyNetworkInterfaceAttributeSyncOverride: ModifyNetworkInterfaceAttributeSyncType<ClientInvocationReportingType>?
    let modifyReservedInstancesAsyncOverride: ModifyReservedInstancesAsyncType<ClientInvocationReportingType>?
    let modifyReservedInstancesSyncOverride: ModifyReservedInstancesSyncType<ClientInvocationReportingType>?
    let modifySnapshotAttributeAsyncOverride: ModifySnapshotAttributeAsyncType<ClientInvocationReportingType>?
    let modifySnapshotAttributeSyncOverride: ModifySnapshotAttributeSyncType<ClientInvocationReportingType>?
    let modifySpotFleetRequestAsyncOverride: ModifySpotFleetRequestAsyncType<ClientInvocationReportingType>?
    let modifySpotFleetRequestSyncOverride: ModifySpotFleetRequestSyncType<ClientInvocationReportingType>?
    let modifySubnetAttributeAsyncOverride: ModifySubnetAttributeAsyncType<ClientInvocationReportingType>?
    let modifySubnetAttributeSyncOverride: ModifySubnetAttributeSyncType<ClientInvocationReportingType>?
    let modifyTrafficMirrorFilterNetworkServicesAsyncOverride: ModifyTrafficMirrorFilterNetworkServicesAsyncType<ClientInvocationReportingType>?
    let modifyTrafficMirrorFilterNetworkServicesSyncOverride: ModifyTrafficMirrorFilterNetworkServicesSyncType<ClientInvocationReportingType>?
    let modifyTrafficMirrorFilterRuleAsyncOverride: ModifyTrafficMirrorFilterRuleAsyncType<ClientInvocationReportingType>?
    let modifyTrafficMirrorFilterRuleSyncOverride: ModifyTrafficMirrorFilterRuleSyncType<ClientInvocationReportingType>?
    let modifyTrafficMirrorSessionAsyncOverride: ModifyTrafficMirrorSessionAsyncType<ClientInvocationReportingType>?
    let modifyTrafficMirrorSessionSyncOverride: ModifyTrafficMirrorSessionSyncType<ClientInvocationReportingType>?
    let modifyTransitGatewayVpcAttachmentAsyncOverride: ModifyTransitGatewayVpcAttachmentAsyncType<ClientInvocationReportingType>?
    let modifyTransitGatewayVpcAttachmentSyncOverride: ModifyTransitGatewayVpcAttachmentSyncType<ClientInvocationReportingType>?
    let modifyVolumeAsyncOverride: ModifyVolumeAsyncType<ClientInvocationReportingType>?
    let modifyVolumeSyncOverride: ModifyVolumeSyncType<ClientInvocationReportingType>?
    let modifyVolumeAttributeAsyncOverride: ModifyVolumeAttributeAsyncType<ClientInvocationReportingType>?
    let modifyVolumeAttributeSyncOverride: ModifyVolumeAttributeSyncType<ClientInvocationReportingType>?
    let modifyVpcAttributeAsyncOverride: ModifyVpcAttributeAsyncType<ClientInvocationReportingType>?
    let modifyVpcAttributeSyncOverride: ModifyVpcAttributeSyncType<ClientInvocationReportingType>?
    let modifyVpcEndpointAsyncOverride: ModifyVpcEndpointAsyncType<ClientInvocationReportingType>?
    let modifyVpcEndpointSyncOverride: ModifyVpcEndpointSyncType<ClientInvocationReportingType>?
    let modifyVpcEndpointConnectionNotificationAsyncOverride: ModifyVpcEndpointConnectionNotificationAsyncType<ClientInvocationReportingType>?
    let modifyVpcEndpointConnectionNotificationSyncOverride: ModifyVpcEndpointConnectionNotificationSyncType<ClientInvocationReportingType>?
    let modifyVpcEndpointServiceConfigurationAsyncOverride: ModifyVpcEndpointServiceConfigurationAsyncType<ClientInvocationReportingType>?
    let modifyVpcEndpointServiceConfigurationSyncOverride: ModifyVpcEndpointServiceConfigurationSyncType<ClientInvocationReportingType>?
    let modifyVpcEndpointServicePermissionsAsyncOverride: ModifyVpcEndpointServicePermissionsAsyncType<ClientInvocationReportingType>?
    let modifyVpcEndpointServicePermissionsSyncOverride: ModifyVpcEndpointServicePermissionsSyncType<ClientInvocationReportingType>?
    let modifyVpcPeeringConnectionOptionsAsyncOverride: ModifyVpcPeeringConnectionOptionsAsyncType<ClientInvocationReportingType>?
    let modifyVpcPeeringConnectionOptionsSyncOverride: ModifyVpcPeeringConnectionOptionsSyncType<ClientInvocationReportingType>?
    let modifyVpcTenancyAsyncOverride: ModifyVpcTenancyAsyncType<ClientInvocationReportingType>?
    let modifyVpcTenancySyncOverride: ModifyVpcTenancySyncType<ClientInvocationReportingType>?
    let modifyVpnConnectionAsyncOverride: ModifyVpnConnectionAsyncType<ClientInvocationReportingType>?
    let modifyVpnConnectionSyncOverride: ModifyVpnConnectionSyncType<ClientInvocationReportingType>?
    let modifyVpnTunnelCertificateAsyncOverride: ModifyVpnTunnelCertificateAsyncType<ClientInvocationReportingType>?
    let modifyVpnTunnelCertificateSyncOverride: ModifyVpnTunnelCertificateSyncType<ClientInvocationReportingType>?
    let modifyVpnTunnelOptionsAsyncOverride: ModifyVpnTunnelOptionsAsyncType<ClientInvocationReportingType>?
    let modifyVpnTunnelOptionsSyncOverride: ModifyVpnTunnelOptionsSyncType<ClientInvocationReportingType>?
    let monitorInstancesAsyncOverride: MonitorInstancesAsyncType<ClientInvocationReportingType>?
    let monitorInstancesSyncOverride: MonitorInstancesSyncType<ClientInvocationReportingType>?
    let moveAddressToVpcAsyncOverride: MoveAddressToVpcAsyncType<ClientInvocationReportingType>?
    let moveAddressToVpcSyncOverride: MoveAddressToVpcSyncType<ClientInvocationReportingType>?
    let provisionByoipCidrAsyncOverride: ProvisionByoipCidrAsyncType<ClientInvocationReportingType>?
    let provisionByoipCidrSyncOverride: ProvisionByoipCidrSyncType<ClientInvocationReportingType>?
    let purchaseHostReservationAsyncOverride: PurchaseHostReservationAsyncType<ClientInvocationReportingType>?
    let purchaseHostReservationSyncOverride: PurchaseHostReservationSyncType<ClientInvocationReportingType>?
    let purchaseReservedInstancesOfferingAsyncOverride: PurchaseReservedInstancesOfferingAsyncType<ClientInvocationReportingType>?
    let purchaseReservedInstancesOfferingSyncOverride: PurchaseReservedInstancesOfferingSyncType<ClientInvocationReportingType>?
    let purchaseScheduledInstancesAsyncOverride: PurchaseScheduledInstancesAsyncType<ClientInvocationReportingType>?
    let purchaseScheduledInstancesSyncOverride: PurchaseScheduledInstancesSyncType<ClientInvocationReportingType>?
    let rebootInstancesAsyncOverride: RebootInstancesAsyncType<ClientInvocationReportingType>?
    let rebootInstancesSyncOverride: RebootInstancesSyncType<ClientInvocationReportingType>?
    let registerImageAsyncOverride: RegisterImageAsyncType<ClientInvocationReportingType>?
    let registerImageSyncOverride: RegisterImageSyncType<ClientInvocationReportingType>?
    let registerTransitGatewayMulticastGroupMembersAsyncOverride: RegisterTransitGatewayMulticastGroupMembersAsyncType<ClientInvocationReportingType>?
    let registerTransitGatewayMulticastGroupMembersSyncOverride: RegisterTransitGatewayMulticastGroupMembersSyncType<ClientInvocationReportingType>?
    let registerTransitGatewayMulticastGroupSourcesAsyncOverride: RegisterTransitGatewayMulticastGroupSourcesAsyncType<ClientInvocationReportingType>?
    let registerTransitGatewayMulticastGroupSourcesSyncOverride: RegisterTransitGatewayMulticastGroupSourcesSyncType<ClientInvocationReportingType>?
    let rejectTransitGatewayPeeringAttachmentAsyncOverride: RejectTransitGatewayPeeringAttachmentAsyncType<ClientInvocationReportingType>?
    let rejectTransitGatewayPeeringAttachmentSyncOverride: RejectTransitGatewayPeeringAttachmentSyncType<ClientInvocationReportingType>?
    let rejectTransitGatewayVpcAttachmentAsyncOverride: RejectTransitGatewayVpcAttachmentAsyncType<ClientInvocationReportingType>?
    let rejectTransitGatewayVpcAttachmentSyncOverride: RejectTransitGatewayVpcAttachmentSyncType<ClientInvocationReportingType>?
    let rejectVpcEndpointConnectionsAsyncOverride: RejectVpcEndpointConnectionsAsyncType<ClientInvocationReportingType>?
    let rejectVpcEndpointConnectionsSyncOverride: RejectVpcEndpointConnectionsSyncType<ClientInvocationReportingType>?
    let rejectVpcPeeringConnectionAsyncOverride: RejectVpcPeeringConnectionAsyncType<ClientInvocationReportingType>?
    let rejectVpcPeeringConnectionSyncOverride: RejectVpcPeeringConnectionSyncType<ClientInvocationReportingType>?
    let releaseAddressAsyncOverride: ReleaseAddressAsyncType<ClientInvocationReportingType>?
    let releaseAddressSyncOverride: ReleaseAddressSyncType<ClientInvocationReportingType>?
    let releaseHostsAsyncOverride: ReleaseHostsAsyncType<ClientInvocationReportingType>?
    let releaseHostsSyncOverride: ReleaseHostsSyncType<ClientInvocationReportingType>?
    let replaceIamInstanceProfileAssociationAsyncOverride: ReplaceIamInstanceProfileAssociationAsyncType<ClientInvocationReportingType>?
    let replaceIamInstanceProfileAssociationSyncOverride: ReplaceIamInstanceProfileAssociationSyncType<ClientInvocationReportingType>?
    let replaceNetworkAclAssociationAsyncOverride: ReplaceNetworkAclAssociationAsyncType<ClientInvocationReportingType>?
    let replaceNetworkAclAssociationSyncOverride: ReplaceNetworkAclAssociationSyncType<ClientInvocationReportingType>?
    let replaceNetworkAclEntryAsyncOverride: ReplaceNetworkAclEntryAsyncType<ClientInvocationReportingType>?
    let replaceNetworkAclEntrySyncOverride: ReplaceNetworkAclEntrySyncType<ClientInvocationReportingType>?
    let replaceRouteAsyncOverride: ReplaceRouteAsyncType<ClientInvocationReportingType>?
    let replaceRouteSyncOverride: ReplaceRouteSyncType<ClientInvocationReportingType>?
    let replaceRouteTableAssociationAsyncOverride: ReplaceRouteTableAssociationAsyncType<ClientInvocationReportingType>?
    let replaceRouteTableAssociationSyncOverride: ReplaceRouteTableAssociationSyncType<ClientInvocationReportingType>?
    let replaceTransitGatewayRouteAsyncOverride: ReplaceTransitGatewayRouteAsyncType<ClientInvocationReportingType>?
    let replaceTransitGatewayRouteSyncOverride: ReplaceTransitGatewayRouteSyncType<ClientInvocationReportingType>?
    let reportInstanceStatusAsyncOverride: ReportInstanceStatusAsyncType<ClientInvocationReportingType>?
    let reportInstanceStatusSyncOverride: ReportInstanceStatusSyncType<ClientInvocationReportingType>?
    let requestSpotFleetAsyncOverride: RequestSpotFleetAsyncType<ClientInvocationReportingType>?
    let requestSpotFleetSyncOverride: RequestSpotFleetSyncType<ClientInvocationReportingType>?
    let requestSpotInstancesAsyncOverride: RequestSpotInstancesAsyncType<ClientInvocationReportingType>?
    let requestSpotInstancesSyncOverride: RequestSpotInstancesSyncType<ClientInvocationReportingType>?
    let resetEbsDefaultKmsKeyIdAsyncOverride: ResetEbsDefaultKmsKeyIdAsyncType<ClientInvocationReportingType>?
    let resetEbsDefaultKmsKeyIdSyncOverride: ResetEbsDefaultKmsKeyIdSyncType<ClientInvocationReportingType>?
    let resetFpgaImageAttributeAsyncOverride: ResetFpgaImageAttributeAsyncType<ClientInvocationReportingType>?
    let resetFpgaImageAttributeSyncOverride: ResetFpgaImageAttributeSyncType<ClientInvocationReportingType>?
    let resetImageAttributeAsyncOverride: ResetImageAttributeAsyncType<ClientInvocationReportingType>?
    let resetImageAttributeSyncOverride: ResetImageAttributeSyncType<ClientInvocationReportingType>?
    let resetInstanceAttributeAsyncOverride: ResetInstanceAttributeAsyncType<ClientInvocationReportingType>?
    let resetInstanceAttributeSyncOverride: ResetInstanceAttributeSyncType<ClientInvocationReportingType>?
    let resetNetworkInterfaceAttributeAsyncOverride: ResetNetworkInterfaceAttributeAsyncType<ClientInvocationReportingType>?
    let resetNetworkInterfaceAttributeSyncOverride: ResetNetworkInterfaceAttributeSyncType<ClientInvocationReportingType>?
    let resetSnapshotAttributeAsyncOverride: ResetSnapshotAttributeAsyncType<ClientInvocationReportingType>?
    let resetSnapshotAttributeSyncOverride: ResetSnapshotAttributeSyncType<ClientInvocationReportingType>?
    let restoreAddressToClassicAsyncOverride: RestoreAddressToClassicAsyncType<ClientInvocationReportingType>?
    let restoreAddressToClassicSyncOverride: RestoreAddressToClassicSyncType<ClientInvocationReportingType>?
    let revokeClientVpnIngressAsyncOverride: RevokeClientVpnIngressAsyncType<ClientInvocationReportingType>?
    let revokeClientVpnIngressSyncOverride: RevokeClientVpnIngressSyncType<ClientInvocationReportingType>?
    let revokeSecurityGroupEgressAsyncOverride: RevokeSecurityGroupEgressAsyncType<ClientInvocationReportingType>?
    let revokeSecurityGroupEgressSyncOverride: RevokeSecurityGroupEgressSyncType<ClientInvocationReportingType>?
    let revokeSecurityGroupIngressAsyncOverride: RevokeSecurityGroupIngressAsyncType<ClientInvocationReportingType>?
    let revokeSecurityGroupIngressSyncOverride: RevokeSecurityGroupIngressSyncType<ClientInvocationReportingType>?
    let runInstancesAsyncOverride: RunInstancesAsyncType<ClientInvocationReportingType>?
    let runInstancesSyncOverride: RunInstancesSyncType<ClientInvocationReportingType>?
    let runScheduledInstancesAsyncOverride: RunScheduledInstancesAsyncType<ClientInvocationReportingType>?
    let runScheduledInstancesSyncOverride: RunScheduledInstancesSyncType<ClientInvocationReportingType>?
    let searchLocalGatewayRoutesAsyncOverride: SearchLocalGatewayRoutesAsyncType<ClientInvocationReportingType>?
    let searchLocalGatewayRoutesSyncOverride: SearchLocalGatewayRoutesSyncType<ClientInvocationReportingType>?
    let searchTransitGatewayMulticastGroupsAsyncOverride: SearchTransitGatewayMulticastGroupsAsyncType<ClientInvocationReportingType>?
    let searchTransitGatewayMulticastGroupsSyncOverride: SearchTransitGatewayMulticastGroupsSyncType<ClientInvocationReportingType>?
    let searchTransitGatewayRoutesAsyncOverride: SearchTransitGatewayRoutesAsyncType<ClientInvocationReportingType>?
    let searchTransitGatewayRoutesSyncOverride: SearchTransitGatewayRoutesSyncType<ClientInvocationReportingType>?
    let sendDiagnosticInterruptAsyncOverride: SendDiagnosticInterruptAsyncType<ClientInvocationReportingType>?
    let sendDiagnosticInterruptSyncOverride: SendDiagnosticInterruptSyncType<ClientInvocationReportingType>?
    let startInstancesAsyncOverride: StartInstancesAsyncType<ClientInvocationReportingType>?
    let startInstancesSyncOverride: StartInstancesSyncType<ClientInvocationReportingType>?
    let startVpcEndpointServicePrivateDnsVerificationAsyncOverride: StartVpcEndpointServicePrivateDnsVerificationAsyncType<ClientInvocationReportingType>?
    let startVpcEndpointServicePrivateDnsVerificationSyncOverride: StartVpcEndpointServicePrivateDnsVerificationSyncType<ClientInvocationReportingType>?
    let stopInstancesAsyncOverride: StopInstancesAsyncType<ClientInvocationReportingType>?
    let stopInstancesSyncOverride: StopInstancesSyncType<ClientInvocationReportingType>?
    let terminateClientVpnConnectionsAsyncOverride: TerminateClientVpnConnectionsAsyncType<ClientInvocationReportingType>?
    let terminateClientVpnConnectionsSyncOverride: TerminateClientVpnConnectionsSyncType<ClientInvocationReportingType>?
    let terminateInstancesAsyncOverride: TerminateInstancesAsyncType<ClientInvocationReportingType>?
    let terminateInstancesSyncOverride: TerminateInstancesSyncType<ClientInvocationReportingType>?
    let unassignIpv6AddressesAsyncOverride: UnassignIpv6AddressesAsyncType<ClientInvocationReportingType>?
    let unassignIpv6AddressesSyncOverride: UnassignIpv6AddressesSyncType<ClientInvocationReportingType>?
    let unassignPrivateIpAddressesAsyncOverride: UnassignPrivateIpAddressesAsyncType<ClientInvocationReportingType>?
    let unassignPrivateIpAddressesSyncOverride: UnassignPrivateIpAddressesSyncType<ClientInvocationReportingType>?
    let unmonitorInstancesAsyncOverride: UnmonitorInstancesAsyncType<ClientInvocationReportingType>?
    let unmonitorInstancesSyncOverride: UnmonitorInstancesSyncType<ClientInvocationReportingType>?
    let updateSecurityGroupRuleDescriptionsEgressAsyncOverride: UpdateSecurityGroupRuleDescriptionsEgressAsyncType<ClientInvocationReportingType>?
    let updateSecurityGroupRuleDescriptionsEgressSyncOverride: UpdateSecurityGroupRuleDescriptionsEgressSyncType<ClientInvocationReportingType>?
    let updateSecurityGroupRuleDescriptionsIngressAsyncOverride: UpdateSecurityGroupRuleDescriptionsIngressAsyncType<ClientInvocationReportingType>?
    let updateSecurityGroupRuleDescriptionsIngressSyncOverride: UpdateSecurityGroupRuleDescriptionsIngressSyncType<ClientInvocationReportingType>?
    let withdrawByoipCidrAsyncOverride: WithdrawByoipCidrAsyncType<ClientInvocationReportingType>?
    let withdrawByoipCidrSyncOverride: WithdrawByoipCidrSyncType<ClientInvocationReportingType>?

    /**
     Initializer that creates an instance of this clients. The behavior of individual
     functions can be overridden by passing them to this initializer.
     */
    public init(
            acceptReservedInstancesExchangeQuoteAsync: AcceptReservedInstancesExchangeQuoteAsyncType<ClientInvocationReportingType>? = nil,
            acceptReservedInstancesExchangeQuoteSync: AcceptReservedInstancesExchangeQuoteSyncType<ClientInvocationReportingType>? = nil,
            acceptTransitGatewayPeeringAttachmentAsync: AcceptTransitGatewayPeeringAttachmentAsyncType<ClientInvocationReportingType>? = nil,
            acceptTransitGatewayPeeringAttachmentSync: AcceptTransitGatewayPeeringAttachmentSyncType<ClientInvocationReportingType>? = nil,
            acceptTransitGatewayVpcAttachmentAsync: AcceptTransitGatewayVpcAttachmentAsyncType<ClientInvocationReportingType>? = nil,
            acceptTransitGatewayVpcAttachmentSync: AcceptTransitGatewayVpcAttachmentSyncType<ClientInvocationReportingType>? = nil,
            acceptVpcEndpointConnectionsAsync: AcceptVpcEndpointConnectionsAsyncType<ClientInvocationReportingType>? = nil,
            acceptVpcEndpointConnectionsSync: AcceptVpcEndpointConnectionsSyncType<ClientInvocationReportingType>? = nil,
            acceptVpcPeeringConnectionAsync: AcceptVpcPeeringConnectionAsyncType<ClientInvocationReportingType>? = nil,
            acceptVpcPeeringConnectionSync: AcceptVpcPeeringConnectionSyncType<ClientInvocationReportingType>? = nil,
            advertiseByoipCidrAsync: AdvertiseByoipCidrAsyncType<ClientInvocationReportingType>? = nil,
            advertiseByoipCidrSync: AdvertiseByoipCidrSyncType<ClientInvocationReportingType>? = nil,
            allocateAddressAsync: AllocateAddressAsyncType<ClientInvocationReportingType>? = nil,
            allocateAddressSync: AllocateAddressSyncType<ClientInvocationReportingType>? = nil,
            allocateHostsAsync: AllocateHostsAsyncType<ClientInvocationReportingType>? = nil,
            allocateHostsSync: AllocateHostsSyncType<ClientInvocationReportingType>? = nil,
            applySecurityGroupsToClientVpnTargetNetworkAsync: ApplySecurityGroupsToClientVpnTargetNetworkAsyncType<ClientInvocationReportingType>? = nil,
            applySecurityGroupsToClientVpnTargetNetworkSync: ApplySecurityGroupsToClientVpnTargetNetworkSyncType<ClientInvocationReportingType>? = nil,
            assignIpv6AddressesAsync: AssignIpv6AddressesAsyncType<ClientInvocationReportingType>? = nil,
            assignIpv6AddressesSync: AssignIpv6AddressesSyncType<ClientInvocationReportingType>? = nil,
            assignPrivateIpAddressesAsync: AssignPrivateIpAddressesAsyncType<ClientInvocationReportingType>? = nil,
            assignPrivateIpAddressesSync: AssignPrivateIpAddressesSyncType<ClientInvocationReportingType>? = nil,
            associateAddressAsync: AssociateAddressAsyncType<ClientInvocationReportingType>? = nil,
            associateAddressSync: AssociateAddressSyncType<ClientInvocationReportingType>? = nil,
            associateClientVpnTargetNetworkAsync: AssociateClientVpnTargetNetworkAsyncType<ClientInvocationReportingType>? = nil,
            associateClientVpnTargetNetworkSync: AssociateClientVpnTargetNetworkSyncType<ClientInvocationReportingType>? = nil,
            associateDhcpOptionsAsync: AssociateDhcpOptionsAsyncType<ClientInvocationReportingType>? = nil,
            associateDhcpOptionsSync: AssociateDhcpOptionsSyncType<ClientInvocationReportingType>? = nil,
            associateIamInstanceProfileAsync: AssociateIamInstanceProfileAsyncType<ClientInvocationReportingType>? = nil,
            associateIamInstanceProfileSync: AssociateIamInstanceProfileSyncType<ClientInvocationReportingType>? = nil,
            associateRouteTableAsync: AssociateRouteTableAsyncType<ClientInvocationReportingType>? = nil,
            associateRouteTableSync: AssociateRouteTableSyncType<ClientInvocationReportingType>? = nil,
            associateSubnetCidrBlockAsync: AssociateSubnetCidrBlockAsyncType<ClientInvocationReportingType>? = nil,
            associateSubnetCidrBlockSync: AssociateSubnetCidrBlockSyncType<ClientInvocationReportingType>? = nil,
            associateTransitGatewayMulticastDomainAsync: AssociateTransitGatewayMulticastDomainAsyncType<ClientInvocationReportingType>? = nil,
            associateTransitGatewayMulticastDomainSync: AssociateTransitGatewayMulticastDomainSyncType<ClientInvocationReportingType>? = nil,
            associateTransitGatewayRouteTableAsync: AssociateTransitGatewayRouteTableAsyncType<ClientInvocationReportingType>? = nil,
            associateTransitGatewayRouteTableSync: AssociateTransitGatewayRouteTableSyncType<ClientInvocationReportingType>? = nil,
            associateVpcCidrBlockAsync: AssociateVpcCidrBlockAsyncType<ClientInvocationReportingType>? = nil,
            associateVpcCidrBlockSync: AssociateVpcCidrBlockSyncType<ClientInvocationReportingType>? = nil,
            attachClassicLinkVpcAsync: AttachClassicLinkVpcAsyncType<ClientInvocationReportingType>? = nil,
            attachClassicLinkVpcSync: AttachClassicLinkVpcSyncType<ClientInvocationReportingType>? = nil,
            attachInternetGatewayAsync: AttachInternetGatewayAsyncType<ClientInvocationReportingType>? = nil,
            attachInternetGatewaySync: AttachInternetGatewaySyncType<ClientInvocationReportingType>? = nil,
            attachNetworkInterfaceAsync: AttachNetworkInterfaceAsyncType<ClientInvocationReportingType>? = nil,
            attachNetworkInterfaceSync: AttachNetworkInterfaceSyncType<ClientInvocationReportingType>? = nil,
            attachVolumeAsync: AttachVolumeAsyncType<ClientInvocationReportingType>? = nil,
            attachVolumeSync: AttachVolumeSyncType<ClientInvocationReportingType>? = nil,
            attachVpnGatewayAsync: AttachVpnGatewayAsyncType<ClientInvocationReportingType>? = nil,
            attachVpnGatewaySync: AttachVpnGatewaySyncType<ClientInvocationReportingType>? = nil,
            authorizeClientVpnIngressAsync: AuthorizeClientVpnIngressAsyncType<ClientInvocationReportingType>? = nil,
            authorizeClientVpnIngressSync: AuthorizeClientVpnIngressSyncType<ClientInvocationReportingType>? = nil,
            authorizeSecurityGroupEgressAsync: AuthorizeSecurityGroupEgressAsyncType<ClientInvocationReportingType>? = nil,
            authorizeSecurityGroupEgressSync: AuthorizeSecurityGroupEgressSyncType<ClientInvocationReportingType>? = nil,
            authorizeSecurityGroupIngressAsync: AuthorizeSecurityGroupIngressAsyncType<ClientInvocationReportingType>? = nil,
            authorizeSecurityGroupIngressSync: AuthorizeSecurityGroupIngressSyncType<ClientInvocationReportingType>? = nil,
            bundleInstanceAsync: BundleInstanceAsyncType<ClientInvocationReportingType>? = nil,
            bundleInstanceSync: BundleInstanceSyncType<ClientInvocationReportingType>? = nil,
            cancelBundleTaskAsync: CancelBundleTaskAsyncType<ClientInvocationReportingType>? = nil,
            cancelBundleTaskSync: CancelBundleTaskSyncType<ClientInvocationReportingType>? = nil,
            cancelCapacityReservationAsync: CancelCapacityReservationAsyncType<ClientInvocationReportingType>? = nil,
            cancelCapacityReservationSync: CancelCapacityReservationSyncType<ClientInvocationReportingType>? = nil,
            cancelConversionTaskAsync: CancelConversionTaskAsyncType<ClientInvocationReportingType>? = nil,
            cancelConversionTaskSync: CancelConversionTaskSyncType<ClientInvocationReportingType>? = nil,
            cancelExportTaskAsync: CancelExportTaskAsyncType<ClientInvocationReportingType>? = nil,
            cancelExportTaskSync: CancelExportTaskSyncType<ClientInvocationReportingType>? = nil,
            cancelImportTaskAsync: CancelImportTaskAsyncType<ClientInvocationReportingType>? = nil,
            cancelImportTaskSync: CancelImportTaskSyncType<ClientInvocationReportingType>? = nil,
            cancelReservedInstancesListingAsync: CancelReservedInstancesListingAsyncType<ClientInvocationReportingType>? = nil,
            cancelReservedInstancesListingSync: CancelReservedInstancesListingSyncType<ClientInvocationReportingType>? = nil,
            cancelSpotFleetRequestsAsync: CancelSpotFleetRequestsAsyncType<ClientInvocationReportingType>? = nil,
            cancelSpotFleetRequestsSync: CancelSpotFleetRequestsSyncType<ClientInvocationReportingType>? = nil,
            cancelSpotInstanceRequestsAsync: CancelSpotInstanceRequestsAsyncType<ClientInvocationReportingType>? = nil,
            cancelSpotInstanceRequestsSync: CancelSpotInstanceRequestsSyncType<ClientInvocationReportingType>? = nil,
            confirmProductInstanceAsync: ConfirmProductInstanceAsyncType<ClientInvocationReportingType>? = nil,
            confirmProductInstanceSync: ConfirmProductInstanceSyncType<ClientInvocationReportingType>? = nil,
            copyFpgaImageAsync: CopyFpgaImageAsyncType<ClientInvocationReportingType>? = nil,
            copyFpgaImageSync: CopyFpgaImageSyncType<ClientInvocationReportingType>? = nil,
            copyImageAsync: CopyImageAsyncType<ClientInvocationReportingType>? = nil,
            copyImageSync: CopyImageSyncType<ClientInvocationReportingType>? = nil,
            copySnapshotAsync: CopySnapshotAsyncType<ClientInvocationReportingType>? = nil,
            copySnapshotSync: CopySnapshotSyncType<ClientInvocationReportingType>? = nil,
            createCapacityReservationAsync: CreateCapacityReservationAsyncType<ClientInvocationReportingType>? = nil,
            createCapacityReservationSync: CreateCapacityReservationSyncType<ClientInvocationReportingType>? = nil,
            createClientVpnEndpointAsync: CreateClientVpnEndpointAsyncType<ClientInvocationReportingType>? = nil,
            createClientVpnEndpointSync: CreateClientVpnEndpointSyncType<ClientInvocationReportingType>? = nil,
            createClientVpnRouteAsync: CreateClientVpnRouteAsyncType<ClientInvocationReportingType>? = nil,
            createClientVpnRouteSync: CreateClientVpnRouteSyncType<ClientInvocationReportingType>? = nil,
            createCustomerGatewayAsync: CreateCustomerGatewayAsyncType<ClientInvocationReportingType>? = nil,
            createCustomerGatewaySync: CreateCustomerGatewaySyncType<ClientInvocationReportingType>? = nil,
            createDefaultSubnetAsync: CreateDefaultSubnetAsyncType<ClientInvocationReportingType>? = nil,
            createDefaultSubnetSync: CreateDefaultSubnetSyncType<ClientInvocationReportingType>? = nil,
            createDefaultVpcAsync: CreateDefaultVpcAsyncType<ClientInvocationReportingType>? = nil,
            createDefaultVpcSync: CreateDefaultVpcSyncType<ClientInvocationReportingType>? = nil,
            createDhcpOptionsAsync: CreateDhcpOptionsAsyncType<ClientInvocationReportingType>? = nil,
            createDhcpOptionsSync: CreateDhcpOptionsSyncType<ClientInvocationReportingType>? = nil,
            createEgressOnlyInternetGatewayAsync: CreateEgressOnlyInternetGatewayAsyncType<ClientInvocationReportingType>? = nil,
            createEgressOnlyInternetGatewaySync: CreateEgressOnlyInternetGatewaySyncType<ClientInvocationReportingType>? = nil,
            createFleetAsync: CreateFleetAsyncType<ClientInvocationReportingType>? = nil,
            createFleetSync: CreateFleetSyncType<ClientInvocationReportingType>? = nil,
            createFlowLogsAsync: CreateFlowLogsAsyncType<ClientInvocationReportingType>? = nil,
            createFlowLogsSync: CreateFlowLogsSyncType<ClientInvocationReportingType>? = nil,
            createFpgaImageAsync: CreateFpgaImageAsyncType<ClientInvocationReportingType>? = nil,
            createFpgaImageSync: CreateFpgaImageSyncType<ClientInvocationReportingType>? = nil,
            createImageAsync: CreateImageAsyncType<ClientInvocationReportingType>? = nil,
            createImageSync: CreateImageSyncType<ClientInvocationReportingType>? = nil,
            createInstanceExportTaskAsync: CreateInstanceExportTaskAsyncType<ClientInvocationReportingType>? = nil,
            createInstanceExportTaskSync: CreateInstanceExportTaskSyncType<ClientInvocationReportingType>? = nil,
            createInternetGatewayAsync: CreateInternetGatewayAsyncType<ClientInvocationReportingType>? = nil,
            createInternetGatewaySync: CreateInternetGatewaySyncType<ClientInvocationReportingType>? = nil,
            createKeyPairAsync: CreateKeyPairAsyncType<ClientInvocationReportingType>? = nil,
            createKeyPairSync: CreateKeyPairSyncType<ClientInvocationReportingType>? = nil,
            createLaunchTemplateAsync: CreateLaunchTemplateAsyncType<ClientInvocationReportingType>? = nil,
            createLaunchTemplateSync: CreateLaunchTemplateSyncType<ClientInvocationReportingType>? = nil,
            createLaunchTemplateVersionAsync: CreateLaunchTemplateVersionAsyncType<ClientInvocationReportingType>? = nil,
            createLaunchTemplateVersionSync: CreateLaunchTemplateVersionSyncType<ClientInvocationReportingType>? = nil,
            createLocalGatewayRouteAsync: CreateLocalGatewayRouteAsyncType<ClientInvocationReportingType>? = nil,
            createLocalGatewayRouteSync: CreateLocalGatewayRouteSyncType<ClientInvocationReportingType>? = nil,
            createLocalGatewayRouteTableVpcAssociationAsync: CreateLocalGatewayRouteTableVpcAssociationAsyncType<ClientInvocationReportingType>? = nil,
            createLocalGatewayRouteTableVpcAssociationSync: CreateLocalGatewayRouteTableVpcAssociationSyncType<ClientInvocationReportingType>? = nil,
            createNatGatewayAsync: CreateNatGatewayAsyncType<ClientInvocationReportingType>? = nil,
            createNatGatewaySync: CreateNatGatewaySyncType<ClientInvocationReportingType>? = nil,
            createNetworkAclAsync: CreateNetworkAclAsyncType<ClientInvocationReportingType>? = nil,
            createNetworkAclSync: CreateNetworkAclSyncType<ClientInvocationReportingType>? = nil,
            createNetworkAclEntryAsync: CreateNetworkAclEntryAsyncType<ClientInvocationReportingType>? = nil,
            createNetworkAclEntrySync: CreateNetworkAclEntrySyncType<ClientInvocationReportingType>? = nil,
            createNetworkInterfaceAsync: CreateNetworkInterfaceAsyncType<ClientInvocationReportingType>? = nil,
            createNetworkInterfaceSync: CreateNetworkInterfaceSyncType<ClientInvocationReportingType>? = nil,
            createNetworkInterfacePermissionAsync: CreateNetworkInterfacePermissionAsyncType<ClientInvocationReportingType>? = nil,
            createNetworkInterfacePermissionSync: CreateNetworkInterfacePermissionSyncType<ClientInvocationReportingType>? = nil,
            createPlacementGroupAsync: CreatePlacementGroupAsyncType<ClientInvocationReportingType>? = nil,
            createPlacementGroupSync: CreatePlacementGroupSyncType<ClientInvocationReportingType>? = nil,
            createReservedInstancesListingAsync: CreateReservedInstancesListingAsyncType<ClientInvocationReportingType>? = nil,
            createReservedInstancesListingSync: CreateReservedInstancesListingSyncType<ClientInvocationReportingType>? = nil,
            createRouteAsync: CreateRouteAsyncType<ClientInvocationReportingType>? = nil,
            createRouteSync: CreateRouteSyncType<ClientInvocationReportingType>? = nil,
            createRouteTableAsync: CreateRouteTableAsyncType<ClientInvocationReportingType>? = nil,
            createRouteTableSync: CreateRouteTableSyncType<ClientInvocationReportingType>? = nil,
            createSecurityGroupAsync: CreateSecurityGroupAsyncType<ClientInvocationReportingType>? = nil,
            createSecurityGroupSync: CreateSecurityGroupSyncType<ClientInvocationReportingType>? = nil,
            createSnapshotAsync: CreateSnapshotAsyncType<ClientInvocationReportingType>? = nil,
            createSnapshotSync: CreateSnapshotSyncType<ClientInvocationReportingType>? = nil,
            createSnapshotsAsync: CreateSnapshotsAsyncType<ClientInvocationReportingType>? = nil,
            createSnapshotsSync: CreateSnapshotsSyncType<ClientInvocationReportingType>? = nil,
            createSpotDatafeedSubscriptionAsync: CreateSpotDatafeedSubscriptionAsyncType<ClientInvocationReportingType>? = nil,
            createSpotDatafeedSubscriptionSync: CreateSpotDatafeedSubscriptionSyncType<ClientInvocationReportingType>? = nil,
            createSubnetAsync: CreateSubnetAsyncType<ClientInvocationReportingType>? = nil,
            createSubnetSync: CreateSubnetSyncType<ClientInvocationReportingType>? = nil,
            createTagsAsync: CreateTagsAsyncType<ClientInvocationReportingType>? = nil,
            createTagsSync: CreateTagsSyncType<ClientInvocationReportingType>? = nil,
            createTrafficMirrorFilterAsync: CreateTrafficMirrorFilterAsyncType<ClientInvocationReportingType>? = nil,
            createTrafficMirrorFilterSync: CreateTrafficMirrorFilterSyncType<ClientInvocationReportingType>? = nil,
            createTrafficMirrorFilterRuleAsync: CreateTrafficMirrorFilterRuleAsyncType<ClientInvocationReportingType>? = nil,
            createTrafficMirrorFilterRuleSync: CreateTrafficMirrorFilterRuleSyncType<ClientInvocationReportingType>? = nil,
            createTrafficMirrorSessionAsync: CreateTrafficMirrorSessionAsyncType<ClientInvocationReportingType>? = nil,
            createTrafficMirrorSessionSync: CreateTrafficMirrorSessionSyncType<ClientInvocationReportingType>? = nil,
            createTrafficMirrorTargetAsync: CreateTrafficMirrorTargetAsyncType<ClientInvocationReportingType>? = nil,
            createTrafficMirrorTargetSync: CreateTrafficMirrorTargetSyncType<ClientInvocationReportingType>? = nil,
            createTransitGatewayAsync: CreateTransitGatewayAsyncType<ClientInvocationReportingType>? = nil,
            createTransitGatewaySync: CreateTransitGatewaySyncType<ClientInvocationReportingType>? = nil,
            createTransitGatewayMulticastDomainAsync: CreateTransitGatewayMulticastDomainAsyncType<ClientInvocationReportingType>? = nil,
            createTransitGatewayMulticastDomainSync: CreateTransitGatewayMulticastDomainSyncType<ClientInvocationReportingType>? = nil,
            createTransitGatewayPeeringAttachmentAsync: CreateTransitGatewayPeeringAttachmentAsyncType<ClientInvocationReportingType>? = nil,
            createTransitGatewayPeeringAttachmentSync: CreateTransitGatewayPeeringAttachmentSyncType<ClientInvocationReportingType>? = nil,
            createTransitGatewayRouteAsync: CreateTransitGatewayRouteAsyncType<ClientInvocationReportingType>? = nil,
            createTransitGatewayRouteSync: CreateTransitGatewayRouteSyncType<ClientInvocationReportingType>? = nil,
            createTransitGatewayRouteTableAsync: CreateTransitGatewayRouteTableAsyncType<ClientInvocationReportingType>? = nil,
            createTransitGatewayRouteTableSync: CreateTransitGatewayRouteTableSyncType<ClientInvocationReportingType>? = nil,
            createTransitGatewayVpcAttachmentAsync: CreateTransitGatewayVpcAttachmentAsyncType<ClientInvocationReportingType>? = nil,
            createTransitGatewayVpcAttachmentSync: CreateTransitGatewayVpcAttachmentSyncType<ClientInvocationReportingType>? = nil,
            createVolumeAsync: CreateVolumeAsyncType<ClientInvocationReportingType>? = nil,
            createVolumeSync: CreateVolumeSyncType<ClientInvocationReportingType>? = nil,
            createVpcAsync: CreateVpcAsyncType<ClientInvocationReportingType>? = nil,
            createVpcSync: CreateVpcSyncType<ClientInvocationReportingType>? = nil,
            createVpcEndpointAsync: CreateVpcEndpointAsyncType<ClientInvocationReportingType>? = nil,
            createVpcEndpointSync: CreateVpcEndpointSyncType<ClientInvocationReportingType>? = nil,
            createVpcEndpointConnectionNotificationAsync: CreateVpcEndpointConnectionNotificationAsyncType<ClientInvocationReportingType>? = nil,
            createVpcEndpointConnectionNotificationSync: CreateVpcEndpointConnectionNotificationSyncType<ClientInvocationReportingType>? = nil,
            createVpcEndpointServiceConfigurationAsync: CreateVpcEndpointServiceConfigurationAsyncType<ClientInvocationReportingType>? = nil,
            createVpcEndpointServiceConfigurationSync: CreateVpcEndpointServiceConfigurationSyncType<ClientInvocationReportingType>? = nil,
            createVpcPeeringConnectionAsync: CreateVpcPeeringConnectionAsyncType<ClientInvocationReportingType>? = nil,
            createVpcPeeringConnectionSync: CreateVpcPeeringConnectionSyncType<ClientInvocationReportingType>? = nil,
            createVpnConnectionAsync: CreateVpnConnectionAsyncType<ClientInvocationReportingType>? = nil,
            createVpnConnectionSync: CreateVpnConnectionSyncType<ClientInvocationReportingType>? = nil,
            createVpnConnectionRouteAsync: CreateVpnConnectionRouteAsyncType<ClientInvocationReportingType>? = nil,
            createVpnConnectionRouteSync: CreateVpnConnectionRouteSyncType<ClientInvocationReportingType>? = nil,
            createVpnGatewayAsync: CreateVpnGatewayAsyncType<ClientInvocationReportingType>? = nil,
            createVpnGatewaySync: CreateVpnGatewaySyncType<ClientInvocationReportingType>? = nil,
            deleteClientVpnEndpointAsync: DeleteClientVpnEndpointAsyncType<ClientInvocationReportingType>? = nil,
            deleteClientVpnEndpointSync: DeleteClientVpnEndpointSyncType<ClientInvocationReportingType>? = nil,
            deleteClientVpnRouteAsync: DeleteClientVpnRouteAsyncType<ClientInvocationReportingType>? = nil,
            deleteClientVpnRouteSync: DeleteClientVpnRouteSyncType<ClientInvocationReportingType>? = nil,
            deleteCustomerGatewayAsync: DeleteCustomerGatewayAsyncType<ClientInvocationReportingType>? = nil,
            deleteCustomerGatewaySync: DeleteCustomerGatewaySyncType<ClientInvocationReportingType>? = nil,
            deleteDhcpOptionsAsync: DeleteDhcpOptionsAsyncType<ClientInvocationReportingType>? = nil,
            deleteDhcpOptionsSync: DeleteDhcpOptionsSyncType<ClientInvocationReportingType>? = nil,
            deleteEgressOnlyInternetGatewayAsync: DeleteEgressOnlyInternetGatewayAsyncType<ClientInvocationReportingType>? = nil,
            deleteEgressOnlyInternetGatewaySync: DeleteEgressOnlyInternetGatewaySyncType<ClientInvocationReportingType>? = nil,
            deleteFleetsAsync: DeleteFleetsAsyncType<ClientInvocationReportingType>? = nil,
            deleteFleetsSync: DeleteFleetsSyncType<ClientInvocationReportingType>? = nil,
            deleteFlowLogsAsync: DeleteFlowLogsAsyncType<ClientInvocationReportingType>? = nil,
            deleteFlowLogsSync: DeleteFlowLogsSyncType<ClientInvocationReportingType>? = nil,
            deleteFpgaImageAsync: DeleteFpgaImageAsyncType<ClientInvocationReportingType>? = nil,
            deleteFpgaImageSync: DeleteFpgaImageSyncType<ClientInvocationReportingType>? = nil,
            deleteInternetGatewayAsync: DeleteInternetGatewayAsyncType<ClientInvocationReportingType>? = nil,
            deleteInternetGatewaySync: DeleteInternetGatewaySyncType<ClientInvocationReportingType>? = nil,
            deleteKeyPairAsync: DeleteKeyPairAsyncType<ClientInvocationReportingType>? = nil,
            deleteKeyPairSync: DeleteKeyPairSyncType<ClientInvocationReportingType>? = nil,
            deleteLaunchTemplateAsync: DeleteLaunchTemplateAsyncType<ClientInvocationReportingType>? = nil,
            deleteLaunchTemplateSync: DeleteLaunchTemplateSyncType<ClientInvocationReportingType>? = nil,
            deleteLaunchTemplateVersionsAsync: DeleteLaunchTemplateVersionsAsyncType<ClientInvocationReportingType>? = nil,
            deleteLaunchTemplateVersionsSync: DeleteLaunchTemplateVersionsSyncType<ClientInvocationReportingType>? = nil,
            deleteLocalGatewayRouteAsync: DeleteLocalGatewayRouteAsyncType<ClientInvocationReportingType>? = nil,
            deleteLocalGatewayRouteSync: DeleteLocalGatewayRouteSyncType<ClientInvocationReportingType>? = nil,
            deleteLocalGatewayRouteTableVpcAssociationAsync: DeleteLocalGatewayRouteTableVpcAssociationAsyncType<ClientInvocationReportingType>? = nil,
            deleteLocalGatewayRouteTableVpcAssociationSync: DeleteLocalGatewayRouteTableVpcAssociationSyncType<ClientInvocationReportingType>? = nil,
            deleteNatGatewayAsync: DeleteNatGatewayAsyncType<ClientInvocationReportingType>? = nil,
            deleteNatGatewaySync: DeleteNatGatewaySyncType<ClientInvocationReportingType>? = nil,
            deleteNetworkAclAsync: DeleteNetworkAclAsyncType<ClientInvocationReportingType>? = nil,
            deleteNetworkAclSync: DeleteNetworkAclSyncType<ClientInvocationReportingType>? = nil,
            deleteNetworkAclEntryAsync: DeleteNetworkAclEntryAsyncType<ClientInvocationReportingType>? = nil,
            deleteNetworkAclEntrySync: DeleteNetworkAclEntrySyncType<ClientInvocationReportingType>? = nil,
            deleteNetworkInterfaceAsync: DeleteNetworkInterfaceAsyncType<ClientInvocationReportingType>? = nil,
            deleteNetworkInterfaceSync: DeleteNetworkInterfaceSyncType<ClientInvocationReportingType>? = nil,
            deleteNetworkInterfacePermissionAsync: DeleteNetworkInterfacePermissionAsyncType<ClientInvocationReportingType>? = nil,
            deleteNetworkInterfacePermissionSync: DeleteNetworkInterfacePermissionSyncType<ClientInvocationReportingType>? = nil,
            deletePlacementGroupAsync: DeletePlacementGroupAsyncType<ClientInvocationReportingType>? = nil,
            deletePlacementGroupSync: DeletePlacementGroupSyncType<ClientInvocationReportingType>? = nil,
            deleteQueuedReservedInstancesAsync: DeleteQueuedReservedInstancesAsyncType<ClientInvocationReportingType>? = nil,
            deleteQueuedReservedInstancesSync: DeleteQueuedReservedInstancesSyncType<ClientInvocationReportingType>? = nil,
            deleteRouteAsync: DeleteRouteAsyncType<ClientInvocationReportingType>? = nil,
            deleteRouteSync: DeleteRouteSyncType<ClientInvocationReportingType>? = nil,
            deleteRouteTableAsync: DeleteRouteTableAsyncType<ClientInvocationReportingType>? = nil,
            deleteRouteTableSync: DeleteRouteTableSyncType<ClientInvocationReportingType>? = nil,
            deleteSecurityGroupAsync: DeleteSecurityGroupAsyncType<ClientInvocationReportingType>? = nil,
            deleteSecurityGroupSync: DeleteSecurityGroupSyncType<ClientInvocationReportingType>? = nil,
            deleteSnapshotAsync: DeleteSnapshotAsyncType<ClientInvocationReportingType>? = nil,
            deleteSnapshotSync: DeleteSnapshotSyncType<ClientInvocationReportingType>? = nil,
            deleteSpotDatafeedSubscriptionAsync: DeleteSpotDatafeedSubscriptionAsyncType<ClientInvocationReportingType>? = nil,
            deleteSpotDatafeedSubscriptionSync: DeleteSpotDatafeedSubscriptionSyncType<ClientInvocationReportingType>? = nil,
            deleteSubnetAsync: DeleteSubnetAsyncType<ClientInvocationReportingType>? = nil,
            deleteSubnetSync: DeleteSubnetSyncType<ClientInvocationReportingType>? = nil,
            deleteTagsAsync: DeleteTagsAsyncType<ClientInvocationReportingType>? = nil,
            deleteTagsSync: DeleteTagsSyncType<ClientInvocationReportingType>? = nil,
            deleteTrafficMirrorFilterAsync: DeleteTrafficMirrorFilterAsyncType<ClientInvocationReportingType>? = nil,
            deleteTrafficMirrorFilterSync: DeleteTrafficMirrorFilterSyncType<ClientInvocationReportingType>? = nil,
            deleteTrafficMirrorFilterRuleAsync: DeleteTrafficMirrorFilterRuleAsyncType<ClientInvocationReportingType>? = nil,
            deleteTrafficMirrorFilterRuleSync: DeleteTrafficMirrorFilterRuleSyncType<ClientInvocationReportingType>? = nil,
            deleteTrafficMirrorSessionAsync: DeleteTrafficMirrorSessionAsyncType<ClientInvocationReportingType>? = nil,
            deleteTrafficMirrorSessionSync: DeleteTrafficMirrorSessionSyncType<ClientInvocationReportingType>? = nil,
            deleteTrafficMirrorTargetAsync: DeleteTrafficMirrorTargetAsyncType<ClientInvocationReportingType>? = nil,
            deleteTrafficMirrorTargetSync: DeleteTrafficMirrorTargetSyncType<ClientInvocationReportingType>? = nil,
            deleteTransitGatewayAsync: DeleteTransitGatewayAsyncType<ClientInvocationReportingType>? = nil,
            deleteTransitGatewaySync: DeleteTransitGatewaySyncType<ClientInvocationReportingType>? = nil,
            deleteTransitGatewayMulticastDomainAsync: DeleteTransitGatewayMulticastDomainAsyncType<ClientInvocationReportingType>? = nil,
            deleteTransitGatewayMulticastDomainSync: DeleteTransitGatewayMulticastDomainSyncType<ClientInvocationReportingType>? = nil,
            deleteTransitGatewayPeeringAttachmentAsync: DeleteTransitGatewayPeeringAttachmentAsyncType<ClientInvocationReportingType>? = nil,
            deleteTransitGatewayPeeringAttachmentSync: DeleteTransitGatewayPeeringAttachmentSyncType<ClientInvocationReportingType>? = nil,
            deleteTransitGatewayRouteAsync: DeleteTransitGatewayRouteAsyncType<ClientInvocationReportingType>? = nil,
            deleteTransitGatewayRouteSync: DeleteTransitGatewayRouteSyncType<ClientInvocationReportingType>? = nil,
            deleteTransitGatewayRouteTableAsync: DeleteTransitGatewayRouteTableAsyncType<ClientInvocationReportingType>? = nil,
            deleteTransitGatewayRouteTableSync: DeleteTransitGatewayRouteTableSyncType<ClientInvocationReportingType>? = nil,
            deleteTransitGatewayVpcAttachmentAsync: DeleteTransitGatewayVpcAttachmentAsyncType<ClientInvocationReportingType>? = nil,
            deleteTransitGatewayVpcAttachmentSync: DeleteTransitGatewayVpcAttachmentSyncType<ClientInvocationReportingType>? = nil,
            deleteVolumeAsync: DeleteVolumeAsyncType<ClientInvocationReportingType>? = nil,
            deleteVolumeSync: DeleteVolumeSyncType<ClientInvocationReportingType>? = nil,
            deleteVpcAsync: DeleteVpcAsyncType<ClientInvocationReportingType>? = nil,
            deleteVpcSync: DeleteVpcSyncType<ClientInvocationReportingType>? = nil,
            deleteVpcEndpointConnectionNotificationsAsync: DeleteVpcEndpointConnectionNotificationsAsyncType<ClientInvocationReportingType>? = nil,
            deleteVpcEndpointConnectionNotificationsSync: DeleteVpcEndpointConnectionNotificationsSyncType<ClientInvocationReportingType>? = nil,
            deleteVpcEndpointServiceConfigurationsAsync: DeleteVpcEndpointServiceConfigurationsAsyncType<ClientInvocationReportingType>? = nil,
            deleteVpcEndpointServiceConfigurationsSync: DeleteVpcEndpointServiceConfigurationsSyncType<ClientInvocationReportingType>? = nil,
            deleteVpcEndpointsAsync: DeleteVpcEndpointsAsyncType<ClientInvocationReportingType>? = nil,
            deleteVpcEndpointsSync: DeleteVpcEndpointsSyncType<ClientInvocationReportingType>? = nil,
            deleteVpcPeeringConnectionAsync: DeleteVpcPeeringConnectionAsyncType<ClientInvocationReportingType>? = nil,
            deleteVpcPeeringConnectionSync: DeleteVpcPeeringConnectionSyncType<ClientInvocationReportingType>? = nil,
            deleteVpnConnectionAsync: DeleteVpnConnectionAsyncType<ClientInvocationReportingType>? = nil,
            deleteVpnConnectionSync: DeleteVpnConnectionSyncType<ClientInvocationReportingType>? = nil,
            deleteVpnConnectionRouteAsync: DeleteVpnConnectionRouteAsyncType<ClientInvocationReportingType>? = nil,
            deleteVpnConnectionRouteSync: DeleteVpnConnectionRouteSyncType<ClientInvocationReportingType>? = nil,
            deleteVpnGatewayAsync: DeleteVpnGatewayAsyncType<ClientInvocationReportingType>? = nil,
            deleteVpnGatewaySync: DeleteVpnGatewaySyncType<ClientInvocationReportingType>? = nil,
            deprovisionByoipCidrAsync: DeprovisionByoipCidrAsyncType<ClientInvocationReportingType>? = nil,
            deprovisionByoipCidrSync: DeprovisionByoipCidrSyncType<ClientInvocationReportingType>? = nil,
            deregisterImageAsync: DeregisterImageAsyncType<ClientInvocationReportingType>? = nil,
            deregisterImageSync: DeregisterImageSyncType<ClientInvocationReportingType>? = nil,
            deregisterTransitGatewayMulticastGroupMembersAsync: DeregisterTransitGatewayMulticastGroupMembersAsyncType<ClientInvocationReportingType>? = nil,
            deregisterTransitGatewayMulticastGroupMembersSync: DeregisterTransitGatewayMulticastGroupMembersSyncType<ClientInvocationReportingType>? = nil,
            deregisterTransitGatewayMulticastGroupSourcesAsync: DeregisterTransitGatewayMulticastGroupSourcesAsyncType<ClientInvocationReportingType>? = nil,
            deregisterTransitGatewayMulticastGroupSourcesSync: DeregisterTransitGatewayMulticastGroupSourcesSyncType<ClientInvocationReportingType>? = nil,
            describeAccountAttributesAsync: DescribeAccountAttributesAsyncType<ClientInvocationReportingType>? = nil,
            describeAccountAttributesSync: DescribeAccountAttributesSyncType<ClientInvocationReportingType>? = nil,
            describeAddressesAsync: DescribeAddressesAsyncType<ClientInvocationReportingType>? = nil,
            describeAddressesSync: DescribeAddressesSyncType<ClientInvocationReportingType>? = nil,
            describeAggregateIdFormatAsync: DescribeAggregateIdFormatAsyncType<ClientInvocationReportingType>? = nil,
            describeAggregateIdFormatSync: DescribeAggregateIdFormatSyncType<ClientInvocationReportingType>? = nil,
            describeAvailabilityZonesAsync: DescribeAvailabilityZonesAsyncType<ClientInvocationReportingType>? = nil,
            describeAvailabilityZonesSync: DescribeAvailabilityZonesSyncType<ClientInvocationReportingType>? = nil,
            describeBundleTasksAsync: DescribeBundleTasksAsyncType<ClientInvocationReportingType>? = nil,
            describeBundleTasksSync: DescribeBundleTasksSyncType<ClientInvocationReportingType>? = nil,
            describeByoipCidrsAsync: DescribeByoipCidrsAsyncType<ClientInvocationReportingType>? = nil,
            describeByoipCidrsSync: DescribeByoipCidrsSyncType<ClientInvocationReportingType>? = nil,
            describeCapacityReservationsAsync: DescribeCapacityReservationsAsyncType<ClientInvocationReportingType>? = nil,
            describeCapacityReservationsSync: DescribeCapacityReservationsSyncType<ClientInvocationReportingType>? = nil,
            describeClassicLinkInstancesAsync: DescribeClassicLinkInstancesAsyncType<ClientInvocationReportingType>? = nil,
            describeClassicLinkInstancesSync: DescribeClassicLinkInstancesSyncType<ClientInvocationReportingType>? = nil,
            describeClientVpnAuthorizationRulesAsync: DescribeClientVpnAuthorizationRulesAsyncType<ClientInvocationReportingType>? = nil,
            describeClientVpnAuthorizationRulesSync: DescribeClientVpnAuthorizationRulesSyncType<ClientInvocationReportingType>? = nil,
            describeClientVpnConnectionsAsync: DescribeClientVpnConnectionsAsyncType<ClientInvocationReportingType>? = nil,
            describeClientVpnConnectionsSync: DescribeClientVpnConnectionsSyncType<ClientInvocationReportingType>? = nil,
            describeClientVpnEndpointsAsync: DescribeClientVpnEndpointsAsyncType<ClientInvocationReportingType>? = nil,
            describeClientVpnEndpointsSync: DescribeClientVpnEndpointsSyncType<ClientInvocationReportingType>? = nil,
            describeClientVpnRoutesAsync: DescribeClientVpnRoutesAsyncType<ClientInvocationReportingType>? = nil,
            describeClientVpnRoutesSync: DescribeClientVpnRoutesSyncType<ClientInvocationReportingType>? = nil,
            describeClientVpnTargetNetworksAsync: DescribeClientVpnTargetNetworksAsyncType<ClientInvocationReportingType>? = nil,
            describeClientVpnTargetNetworksSync: DescribeClientVpnTargetNetworksSyncType<ClientInvocationReportingType>? = nil,
            describeCoipPoolsAsync: DescribeCoipPoolsAsyncType<ClientInvocationReportingType>? = nil,
            describeCoipPoolsSync: DescribeCoipPoolsSyncType<ClientInvocationReportingType>? = nil,
            describeConversionTasksAsync: DescribeConversionTasksAsyncType<ClientInvocationReportingType>? = nil,
            describeConversionTasksSync: DescribeConversionTasksSyncType<ClientInvocationReportingType>? = nil,
            describeCustomerGatewaysAsync: DescribeCustomerGatewaysAsyncType<ClientInvocationReportingType>? = nil,
            describeCustomerGatewaysSync: DescribeCustomerGatewaysSyncType<ClientInvocationReportingType>? = nil,
            describeDhcpOptionsAsync: DescribeDhcpOptionsAsyncType<ClientInvocationReportingType>? = nil,
            describeDhcpOptionsSync: DescribeDhcpOptionsSyncType<ClientInvocationReportingType>? = nil,
            describeEgressOnlyInternetGatewaysAsync: DescribeEgressOnlyInternetGatewaysAsyncType<ClientInvocationReportingType>? = nil,
            describeEgressOnlyInternetGatewaysSync: DescribeEgressOnlyInternetGatewaysSyncType<ClientInvocationReportingType>? = nil,
            describeElasticGpusAsync: DescribeElasticGpusAsyncType<ClientInvocationReportingType>? = nil,
            describeElasticGpusSync: DescribeElasticGpusSyncType<ClientInvocationReportingType>? = nil,
            describeExportImageTasksAsync: DescribeExportImageTasksAsyncType<ClientInvocationReportingType>? = nil,
            describeExportImageTasksSync: DescribeExportImageTasksSyncType<ClientInvocationReportingType>? = nil,
            describeExportTasksAsync: DescribeExportTasksAsyncType<ClientInvocationReportingType>? = nil,
            describeExportTasksSync: DescribeExportTasksSyncType<ClientInvocationReportingType>? = nil,
            describeFastSnapshotRestoresAsync: DescribeFastSnapshotRestoresAsyncType<ClientInvocationReportingType>? = nil,
            describeFastSnapshotRestoresSync: DescribeFastSnapshotRestoresSyncType<ClientInvocationReportingType>? = nil,
            describeFleetHistoryAsync: DescribeFleetHistoryAsyncType<ClientInvocationReportingType>? = nil,
            describeFleetHistorySync: DescribeFleetHistorySyncType<ClientInvocationReportingType>? = nil,
            describeFleetInstancesAsync: DescribeFleetInstancesAsyncType<ClientInvocationReportingType>? = nil,
            describeFleetInstancesSync: DescribeFleetInstancesSyncType<ClientInvocationReportingType>? = nil,
            describeFleetsAsync: DescribeFleetsAsyncType<ClientInvocationReportingType>? = nil,
            describeFleetsSync: DescribeFleetsSyncType<ClientInvocationReportingType>? = nil,
            describeFlowLogsAsync: DescribeFlowLogsAsyncType<ClientInvocationReportingType>? = nil,
            describeFlowLogsSync: DescribeFlowLogsSyncType<ClientInvocationReportingType>? = nil,
            describeFpgaImageAttributeAsync: DescribeFpgaImageAttributeAsyncType<ClientInvocationReportingType>? = nil,
            describeFpgaImageAttributeSync: DescribeFpgaImageAttributeSyncType<ClientInvocationReportingType>? = nil,
            describeFpgaImagesAsync: DescribeFpgaImagesAsyncType<ClientInvocationReportingType>? = nil,
            describeFpgaImagesSync: DescribeFpgaImagesSyncType<ClientInvocationReportingType>? = nil,
            describeHostReservationOfferingsAsync: DescribeHostReservationOfferingsAsyncType<ClientInvocationReportingType>? = nil,
            describeHostReservationOfferingsSync: DescribeHostReservationOfferingsSyncType<ClientInvocationReportingType>? = nil,
            describeHostReservationsAsync: DescribeHostReservationsAsyncType<ClientInvocationReportingType>? = nil,
            describeHostReservationsSync: DescribeHostReservationsSyncType<ClientInvocationReportingType>? = nil,
            describeHostsAsync: DescribeHostsAsyncType<ClientInvocationReportingType>? = nil,
            describeHostsSync: DescribeHostsSyncType<ClientInvocationReportingType>? = nil,
            describeIamInstanceProfileAssociationsAsync: DescribeIamInstanceProfileAssociationsAsyncType<ClientInvocationReportingType>? = nil,
            describeIamInstanceProfileAssociationsSync: DescribeIamInstanceProfileAssociationsSyncType<ClientInvocationReportingType>? = nil,
            describeIdFormatAsync: DescribeIdFormatAsyncType<ClientInvocationReportingType>? = nil,
            describeIdFormatSync: DescribeIdFormatSyncType<ClientInvocationReportingType>? = nil,
            describeIdentityIdFormatAsync: DescribeIdentityIdFormatAsyncType<ClientInvocationReportingType>? = nil,
            describeIdentityIdFormatSync: DescribeIdentityIdFormatSyncType<ClientInvocationReportingType>? = nil,
            describeImageAttributeAsync: DescribeImageAttributeAsyncType<ClientInvocationReportingType>? = nil,
            describeImageAttributeSync: DescribeImageAttributeSyncType<ClientInvocationReportingType>? = nil,
            describeImagesAsync: DescribeImagesAsyncType<ClientInvocationReportingType>? = nil,
            describeImagesSync: DescribeImagesSyncType<ClientInvocationReportingType>? = nil,
            describeImportImageTasksAsync: DescribeImportImageTasksAsyncType<ClientInvocationReportingType>? = nil,
            describeImportImageTasksSync: DescribeImportImageTasksSyncType<ClientInvocationReportingType>? = nil,
            describeImportSnapshotTasksAsync: DescribeImportSnapshotTasksAsyncType<ClientInvocationReportingType>? = nil,
            describeImportSnapshotTasksSync: DescribeImportSnapshotTasksSyncType<ClientInvocationReportingType>? = nil,
            describeInstanceAttributeAsync: DescribeInstanceAttributeAsyncType<ClientInvocationReportingType>? = nil,
            describeInstanceAttributeSync: DescribeInstanceAttributeSyncType<ClientInvocationReportingType>? = nil,
            describeInstanceCreditSpecificationsAsync: DescribeInstanceCreditSpecificationsAsyncType<ClientInvocationReportingType>? = nil,
            describeInstanceCreditSpecificationsSync: DescribeInstanceCreditSpecificationsSyncType<ClientInvocationReportingType>? = nil,
            describeInstanceStatusAsync: DescribeInstanceStatusAsyncType<ClientInvocationReportingType>? = nil,
            describeInstanceStatusSync: DescribeInstanceStatusSyncType<ClientInvocationReportingType>? = nil,
            describeInstanceTypeOfferingsAsync: DescribeInstanceTypeOfferingsAsyncType<ClientInvocationReportingType>? = nil,
            describeInstanceTypeOfferingsSync: DescribeInstanceTypeOfferingsSyncType<ClientInvocationReportingType>? = nil,
            describeInstanceTypesAsync: DescribeInstanceTypesAsyncType<ClientInvocationReportingType>? = nil,
            describeInstanceTypesSync: DescribeInstanceTypesSyncType<ClientInvocationReportingType>? = nil,
            describeInstancesAsync: DescribeInstancesAsyncType<ClientInvocationReportingType>? = nil,
            describeInstancesSync: DescribeInstancesSyncType<ClientInvocationReportingType>? = nil,
            describeInternetGatewaysAsync: DescribeInternetGatewaysAsyncType<ClientInvocationReportingType>? = nil,
            describeInternetGatewaysSync: DescribeInternetGatewaysSyncType<ClientInvocationReportingType>? = nil,
            describeIpv6PoolsAsync: DescribeIpv6PoolsAsyncType<ClientInvocationReportingType>? = nil,
            describeIpv6PoolsSync: DescribeIpv6PoolsSyncType<ClientInvocationReportingType>? = nil,
            describeKeyPairsAsync: DescribeKeyPairsAsyncType<ClientInvocationReportingType>? = nil,
            describeKeyPairsSync: DescribeKeyPairsSyncType<ClientInvocationReportingType>? = nil,
            describeLaunchTemplateVersionsAsync: DescribeLaunchTemplateVersionsAsyncType<ClientInvocationReportingType>? = nil,
            describeLaunchTemplateVersionsSync: DescribeLaunchTemplateVersionsSyncType<ClientInvocationReportingType>? = nil,
            describeLaunchTemplatesAsync: DescribeLaunchTemplatesAsyncType<ClientInvocationReportingType>? = nil,
            describeLaunchTemplatesSync: DescribeLaunchTemplatesSyncType<ClientInvocationReportingType>? = nil,
            describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsync: DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsyncType<ClientInvocationReportingType>? = nil,
            describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsSync: DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsSyncType<ClientInvocationReportingType>? = nil,
            describeLocalGatewayRouteTableVpcAssociationsAsync: DescribeLocalGatewayRouteTableVpcAssociationsAsyncType<ClientInvocationReportingType>? = nil,
            describeLocalGatewayRouteTableVpcAssociationsSync: DescribeLocalGatewayRouteTableVpcAssociationsSyncType<ClientInvocationReportingType>? = nil,
            describeLocalGatewayRouteTablesAsync: DescribeLocalGatewayRouteTablesAsyncType<ClientInvocationReportingType>? = nil,
            describeLocalGatewayRouteTablesSync: DescribeLocalGatewayRouteTablesSyncType<ClientInvocationReportingType>? = nil,
            describeLocalGatewayVirtualInterfaceGroupsAsync: DescribeLocalGatewayVirtualInterfaceGroupsAsyncType<ClientInvocationReportingType>? = nil,
            describeLocalGatewayVirtualInterfaceGroupsSync: DescribeLocalGatewayVirtualInterfaceGroupsSyncType<ClientInvocationReportingType>? = nil,
            describeLocalGatewayVirtualInterfacesAsync: DescribeLocalGatewayVirtualInterfacesAsyncType<ClientInvocationReportingType>? = nil,
            describeLocalGatewayVirtualInterfacesSync: DescribeLocalGatewayVirtualInterfacesSyncType<ClientInvocationReportingType>? = nil,
            describeLocalGatewaysAsync: DescribeLocalGatewaysAsyncType<ClientInvocationReportingType>? = nil,
            describeLocalGatewaysSync: DescribeLocalGatewaysSyncType<ClientInvocationReportingType>? = nil,
            describeMovingAddressesAsync: DescribeMovingAddressesAsyncType<ClientInvocationReportingType>? = nil,
            describeMovingAddressesSync: DescribeMovingAddressesSyncType<ClientInvocationReportingType>? = nil,
            describeNatGatewaysAsync: DescribeNatGatewaysAsyncType<ClientInvocationReportingType>? = nil,
            describeNatGatewaysSync: DescribeNatGatewaysSyncType<ClientInvocationReportingType>? = nil,
            describeNetworkAclsAsync: DescribeNetworkAclsAsyncType<ClientInvocationReportingType>? = nil,
            describeNetworkAclsSync: DescribeNetworkAclsSyncType<ClientInvocationReportingType>? = nil,
            describeNetworkInterfaceAttributeAsync: DescribeNetworkInterfaceAttributeAsyncType<ClientInvocationReportingType>? = nil,
            describeNetworkInterfaceAttributeSync: DescribeNetworkInterfaceAttributeSyncType<ClientInvocationReportingType>? = nil,
            describeNetworkInterfacePermissionsAsync: DescribeNetworkInterfacePermissionsAsyncType<ClientInvocationReportingType>? = nil,
            describeNetworkInterfacePermissionsSync: DescribeNetworkInterfacePermissionsSyncType<ClientInvocationReportingType>? = nil,
            describeNetworkInterfacesAsync: DescribeNetworkInterfacesAsyncType<ClientInvocationReportingType>? = nil,
            describeNetworkInterfacesSync: DescribeNetworkInterfacesSyncType<ClientInvocationReportingType>? = nil,
            describePlacementGroupsAsync: DescribePlacementGroupsAsyncType<ClientInvocationReportingType>? = nil,
            describePlacementGroupsSync: DescribePlacementGroupsSyncType<ClientInvocationReportingType>? = nil,
            describePrefixListsAsync: DescribePrefixListsAsyncType<ClientInvocationReportingType>? = nil,
            describePrefixListsSync: DescribePrefixListsSyncType<ClientInvocationReportingType>? = nil,
            describePrincipalIdFormatAsync: DescribePrincipalIdFormatAsyncType<ClientInvocationReportingType>? = nil,
            describePrincipalIdFormatSync: DescribePrincipalIdFormatSyncType<ClientInvocationReportingType>? = nil,
            describePublicIpv4PoolsAsync: DescribePublicIpv4PoolsAsyncType<ClientInvocationReportingType>? = nil,
            describePublicIpv4PoolsSync: DescribePublicIpv4PoolsSyncType<ClientInvocationReportingType>? = nil,
            describeRegionsAsync: DescribeRegionsAsyncType<ClientInvocationReportingType>? = nil,
            describeRegionsSync: DescribeRegionsSyncType<ClientInvocationReportingType>? = nil,
            describeReservedInstancesAsync: DescribeReservedInstancesAsyncType<ClientInvocationReportingType>? = nil,
            describeReservedInstancesSync: DescribeReservedInstancesSyncType<ClientInvocationReportingType>? = nil,
            describeReservedInstancesListingsAsync: DescribeReservedInstancesListingsAsyncType<ClientInvocationReportingType>? = nil,
            describeReservedInstancesListingsSync: DescribeReservedInstancesListingsSyncType<ClientInvocationReportingType>? = nil,
            describeReservedInstancesModificationsAsync: DescribeReservedInstancesModificationsAsyncType<ClientInvocationReportingType>? = nil,
            describeReservedInstancesModificationsSync: DescribeReservedInstancesModificationsSyncType<ClientInvocationReportingType>? = nil,
            describeReservedInstancesOfferingsAsync: DescribeReservedInstancesOfferingsAsyncType<ClientInvocationReportingType>? = nil,
            describeReservedInstancesOfferingsSync: DescribeReservedInstancesOfferingsSyncType<ClientInvocationReportingType>? = nil,
            describeRouteTablesAsync: DescribeRouteTablesAsyncType<ClientInvocationReportingType>? = nil,
            describeRouteTablesSync: DescribeRouteTablesSyncType<ClientInvocationReportingType>? = nil,
            describeScheduledInstanceAvailabilityAsync: DescribeScheduledInstanceAvailabilityAsyncType<ClientInvocationReportingType>? = nil,
            describeScheduledInstanceAvailabilitySync: DescribeScheduledInstanceAvailabilitySyncType<ClientInvocationReportingType>? = nil,
            describeScheduledInstancesAsync: DescribeScheduledInstancesAsyncType<ClientInvocationReportingType>? = nil,
            describeScheduledInstancesSync: DescribeScheduledInstancesSyncType<ClientInvocationReportingType>? = nil,
            describeSecurityGroupReferencesAsync: DescribeSecurityGroupReferencesAsyncType<ClientInvocationReportingType>? = nil,
            describeSecurityGroupReferencesSync: DescribeSecurityGroupReferencesSyncType<ClientInvocationReportingType>? = nil,
            describeSecurityGroupsAsync: DescribeSecurityGroupsAsyncType<ClientInvocationReportingType>? = nil,
            describeSecurityGroupsSync: DescribeSecurityGroupsSyncType<ClientInvocationReportingType>? = nil,
            describeSnapshotAttributeAsync: DescribeSnapshotAttributeAsyncType<ClientInvocationReportingType>? = nil,
            describeSnapshotAttributeSync: DescribeSnapshotAttributeSyncType<ClientInvocationReportingType>? = nil,
            describeSnapshotsAsync: DescribeSnapshotsAsyncType<ClientInvocationReportingType>? = nil,
            describeSnapshotsSync: DescribeSnapshotsSyncType<ClientInvocationReportingType>? = nil,
            describeSpotDatafeedSubscriptionAsync: DescribeSpotDatafeedSubscriptionAsyncType<ClientInvocationReportingType>? = nil,
            describeSpotDatafeedSubscriptionSync: DescribeSpotDatafeedSubscriptionSyncType<ClientInvocationReportingType>? = nil,
            describeSpotFleetInstancesAsync: DescribeSpotFleetInstancesAsyncType<ClientInvocationReportingType>? = nil,
            describeSpotFleetInstancesSync: DescribeSpotFleetInstancesSyncType<ClientInvocationReportingType>? = nil,
            describeSpotFleetRequestHistoryAsync: DescribeSpotFleetRequestHistoryAsyncType<ClientInvocationReportingType>? = nil,
            describeSpotFleetRequestHistorySync: DescribeSpotFleetRequestHistorySyncType<ClientInvocationReportingType>? = nil,
            describeSpotFleetRequestsAsync: DescribeSpotFleetRequestsAsyncType<ClientInvocationReportingType>? = nil,
            describeSpotFleetRequestsSync: DescribeSpotFleetRequestsSyncType<ClientInvocationReportingType>? = nil,
            describeSpotInstanceRequestsAsync: DescribeSpotInstanceRequestsAsyncType<ClientInvocationReportingType>? = nil,
            describeSpotInstanceRequestsSync: DescribeSpotInstanceRequestsSyncType<ClientInvocationReportingType>? = nil,
            describeSpotPriceHistoryAsync: DescribeSpotPriceHistoryAsyncType<ClientInvocationReportingType>? = nil,
            describeSpotPriceHistorySync: DescribeSpotPriceHistorySyncType<ClientInvocationReportingType>? = nil,
            describeStaleSecurityGroupsAsync: DescribeStaleSecurityGroupsAsyncType<ClientInvocationReportingType>? = nil,
            describeStaleSecurityGroupsSync: DescribeStaleSecurityGroupsSyncType<ClientInvocationReportingType>? = nil,
            describeSubnetsAsync: DescribeSubnetsAsyncType<ClientInvocationReportingType>? = nil,
            describeSubnetsSync: DescribeSubnetsSyncType<ClientInvocationReportingType>? = nil,
            describeTagsAsync: DescribeTagsAsyncType<ClientInvocationReportingType>? = nil,
            describeTagsSync: DescribeTagsSyncType<ClientInvocationReportingType>? = nil,
            describeTrafficMirrorFiltersAsync: DescribeTrafficMirrorFiltersAsyncType<ClientInvocationReportingType>? = nil,
            describeTrafficMirrorFiltersSync: DescribeTrafficMirrorFiltersSyncType<ClientInvocationReportingType>? = nil,
            describeTrafficMirrorSessionsAsync: DescribeTrafficMirrorSessionsAsyncType<ClientInvocationReportingType>? = nil,
            describeTrafficMirrorSessionsSync: DescribeTrafficMirrorSessionsSyncType<ClientInvocationReportingType>? = nil,
            describeTrafficMirrorTargetsAsync: DescribeTrafficMirrorTargetsAsyncType<ClientInvocationReportingType>? = nil,
            describeTrafficMirrorTargetsSync: DescribeTrafficMirrorTargetsSyncType<ClientInvocationReportingType>? = nil,
            describeTransitGatewayAttachmentsAsync: DescribeTransitGatewayAttachmentsAsyncType<ClientInvocationReportingType>? = nil,
            describeTransitGatewayAttachmentsSync: DescribeTransitGatewayAttachmentsSyncType<ClientInvocationReportingType>? = nil,
            describeTransitGatewayMulticastDomainsAsync: DescribeTransitGatewayMulticastDomainsAsyncType<ClientInvocationReportingType>? = nil,
            describeTransitGatewayMulticastDomainsSync: DescribeTransitGatewayMulticastDomainsSyncType<ClientInvocationReportingType>? = nil,
            describeTransitGatewayPeeringAttachmentsAsync: DescribeTransitGatewayPeeringAttachmentsAsyncType<ClientInvocationReportingType>? = nil,
            describeTransitGatewayPeeringAttachmentsSync: DescribeTransitGatewayPeeringAttachmentsSyncType<ClientInvocationReportingType>? = nil,
            describeTransitGatewayRouteTablesAsync: DescribeTransitGatewayRouteTablesAsyncType<ClientInvocationReportingType>? = nil,
            describeTransitGatewayRouteTablesSync: DescribeTransitGatewayRouteTablesSyncType<ClientInvocationReportingType>? = nil,
            describeTransitGatewayVpcAttachmentsAsync: DescribeTransitGatewayVpcAttachmentsAsyncType<ClientInvocationReportingType>? = nil,
            describeTransitGatewayVpcAttachmentsSync: DescribeTransitGatewayVpcAttachmentsSyncType<ClientInvocationReportingType>? = nil,
            describeTransitGatewaysAsync: DescribeTransitGatewaysAsyncType<ClientInvocationReportingType>? = nil,
            describeTransitGatewaysSync: DescribeTransitGatewaysSyncType<ClientInvocationReportingType>? = nil,
            describeVolumeAttributeAsync: DescribeVolumeAttributeAsyncType<ClientInvocationReportingType>? = nil,
            describeVolumeAttributeSync: DescribeVolumeAttributeSyncType<ClientInvocationReportingType>? = nil,
            describeVolumeStatusAsync: DescribeVolumeStatusAsyncType<ClientInvocationReportingType>? = nil,
            describeVolumeStatusSync: DescribeVolumeStatusSyncType<ClientInvocationReportingType>? = nil,
            describeVolumesAsync: DescribeVolumesAsyncType<ClientInvocationReportingType>? = nil,
            describeVolumesSync: DescribeVolumesSyncType<ClientInvocationReportingType>? = nil,
            describeVolumesModificationsAsync: DescribeVolumesModificationsAsyncType<ClientInvocationReportingType>? = nil,
            describeVolumesModificationsSync: DescribeVolumesModificationsSyncType<ClientInvocationReportingType>? = nil,
            describeVpcAttributeAsync: DescribeVpcAttributeAsyncType<ClientInvocationReportingType>? = nil,
            describeVpcAttributeSync: DescribeVpcAttributeSyncType<ClientInvocationReportingType>? = nil,
            describeVpcClassicLinkAsync: DescribeVpcClassicLinkAsyncType<ClientInvocationReportingType>? = nil,
            describeVpcClassicLinkSync: DescribeVpcClassicLinkSyncType<ClientInvocationReportingType>? = nil,
            describeVpcClassicLinkDnsSupportAsync: DescribeVpcClassicLinkDnsSupportAsyncType<ClientInvocationReportingType>? = nil,
            describeVpcClassicLinkDnsSupportSync: DescribeVpcClassicLinkDnsSupportSyncType<ClientInvocationReportingType>? = nil,
            describeVpcEndpointConnectionNotificationsAsync: DescribeVpcEndpointConnectionNotificationsAsyncType<ClientInvocationReportingType>? = nil,
            describeVpcEndpointConnectionNotificationsSync: DescribeVpcEndpointConnectionNotificationsSyncType<ClientInvocationReportingType>? = nil,
            describeVpcEndpointConnectionsAsync: DescribeVpcEndpointConnectionsAsyncType<ClientInvocationReportingType>? = nil,
            describeVpcEndpointConnectionsSync: DescribeVpcEndpointConnectionsSyncType<ClientInvocationReportingType>? = nil,
            describeVpcEndpointServiceConfigurationsAsync: DescribeVpcEndpointServiceConfigurationsAsyncType<ClientInvocationReportingType>? = nil,
            describeVpcEndpointServiceConfigurationsSync: DescribeVpcEndpointServiceConfigurationsSyncType<ClientInvocationReportingType>? = nil,
            describeVpcEndpointServicePermissionsAsync: DescribeVpcEndpointServicePermissionsAsyncType<ClientInvocationReportingType>? = nil,
            describeVpcEndpointServicePermissionsSync: DescribeVpcEndpointServicePermissionsSyncType<ClientInvocationReportingType>? = nil,
            describeVpcEndpointServicesAsync: DescribeVpcEndpointServicesAsyncType<ClientInvocationReportingType>? = nil,
            describeVpcEndpointServicesSync: DescribeVpcEndpointServicesSyncType<ClientInvocationReportingType>? = nil,
            describeVpcEndpointsAsync: DescribeVpcEndpointsAsyncType<ClientInvocationReportingType>? = nil,
            describeVpcEndpointsSync: DescribeVpcEndpointsSyncType<ClientInvocationReportingType>? = nil,
            describeVpcPeeringConnectionsAsync: DescribeVpcPeeringConnectionsAsyncType<ClientInvocationReportingType>? = nil,
            describeVpcPeeringConnectionsSync: DescribeVpcPeeringConnectionsSyncType<ClientInvocationReportingType>? = nil,
            describeVpcsAsync: DescribeVpcsAsyncType<ClientInvocationReportingType>? = nil,
            describeVpcsSync: DescribeVpcsSyncType<ClientInvocationReportingType>? = nil,
            describeVpnConnectionsAsync: DescribeVpnConnectionsAsyncType<ClientInvocationReportingType>? = nil,
            describeVpnConnectionsSync: DescribeVpnConnectionsSyncType<ClientInvocationReportingType>? = nil,
            describeVpnGatewaysAsync: DescribeVpnGatewaysAsyncType<ClientInvocationReportingType>? = nil,
            describeVpnGatewaysSync: DescribeVpnGatewaysSyncType<ClientInvocationReportingType>? = nil,
            detachClassicLinkVpcAsync: DetachClassicLinkVpcAsyncType<ClientInvocationReportingType>? = nil,
            detachClassicLinkVpcSync: DetachClassicLinkVpcSyncType<ClientInvocationReportingType>? = nil,
            detachInternetGatewayAsync: DetachInternetGatewayAsyncType<ClientInvocationReportingType>? = nil,
            detachInternetGatewaySync: DetachInternetGatewaySyncType<ClientInvocationReportingType>? = nil,
            detachNetworkInterfaceAsync: DetachNetworkInterfaceAsyncType<ClientInvocationReportingType>? = nil,
            detachNetworkInterfaceSync: DetachNetworkInterfaceSyncType<ClientInvocationReportingType>? = nil,
            detachVolumeAsync: DetachVolumeAsyncType<ClientInvocationReportingType>? = nil,
            detachVolumeSync: DetachVolumeSyncType<ClientInvocationReportingType>? = nil,
            detachVpnGatewayAsync: DetachVpnGatewayAsyncType<ClientInvocationReportingType>? = nil,
            detachVpnGatewaySync: DetachVpnGatewaySyncType<ClientInvocationReportingType>? = nil,
            disableEbsEncryptionByDefaultAsync: DisableEbsEncryptionByDefaultAsyncType<ClientInvocationReportingType>? = nil,
            disableEbsEncryptionByDefaultSync: DisableEbsEncryptionByDefaultSyncType<ClientInvocationReportingType>? = nil,
            disableFastSnapshotRestoresAsync: DisableFastSnapshotRestoresAsyncType<ClientInvocationReportingType>? = nil,
            disableFastSnapshotRestoresSync: DisableFastSnapshotRestoresSyncType<ClientInvocationReportingType>? = nil,
            disableTransitGatewayRouteTablePropagationAsync: DisableTransitGatewayRouteTablePropagationAsyncType<ClientInvocationReportingType>? = nil,
            disableTransitGatewayRouteTablePropagationSync: DisableTransitGatewayRouteTablePropagationSyncType<ClientInvocationReportingType>? = nil,
            disableVgwRoutePropagationAsync: DisableVgwRoutePropagationAsyncType<ClientInvocationReportingType>? = nil,
            disableVgwRoutePropagationSync: DisableVgwRoutePropagationSyncType<ClientInvocationReportingType>? = nil,
            disableVpcClassicLinkAsync: DisableVpcClassicLinkAsyncType<ClientInvocationReportingType>? = nil,
            disableVpcClassicLinkSync: DisableVpcClassicLinkSyncType<ClientInvocationReportingType>? = nil,
            disableVpcClassicLinkDnsSupportAsync: DisableVpcClassicLinkDnsSupportAsyncType<ClientInvocationReportingType>? = nil,
            disableVpcClassicLinkDnsSupportSync: DisableVpcClassicLinkDnsSupportSyncType<ClientInvocationReportingType>? = nil,
            disassociateAddressAsync: DisassociateAddressAsyncType<ClientInvocationReportingType>? = nil,
            disassociateAddressSync: DisassociateAddressSyncType<ClientInvocationReportingType>? = nil,
            disassociateClientVpnTargetNetworkAsync: DisassociateClientVpnTargetNetworkAsyncType<ClientInvocationReportingType>? = nil,
            disassociateClientVpnTargetNetworkSync: DisassociateClientVpnTargetNetworkSyncType<ClientInvocationReportingType>? = nil,
            disassociateIamInstanceProfileAsync: DisassociateIamInstanceProfileAsyncType<ClientInvocationReportingType>? = nil,
            disassociateIamInstanceProfileSync: DisassociateIamInstanceProfileSyncType<ClientInvocationReportingType>? = nil,
            disassociateRouteTableAsync: DisassociateRouteTableAsyncType<ClientInvocationReportingType>? = nil,
            disassociateRouteTableSync: DisassociateRouteTableSyncType<ClientInvocationReportingType>? = nil,
            disassociateSubnetCidrBlockAsync: DisassociateSubnetCidrBlockAsyncType<ClientInvocationReportingType>? = nil,
            disassociateSubnetCidrBlockSync: DisassociateSubnetCidrBlockSyncType<ClientInvocationReportingType>? = nil,
            disassociateTransitGatewayMulticastDomainAsync: DisassociateTransitGatewayMulticastDomainAsyncType<ClientInvocationReportingType>? = nil,
            disassociateTransitGatewayMulticastDomainSync: DisassociateTransitGatewayMulticastDomainSyncType<ClientInvocationReportingType>? = nil,
            disassociateTransitGatewayRouteTableAsync: DisassociateTransitGatewayRouteTableAsyncType<ClientInvocationReportingType>? = nil,
            disassociateTransitGatewayRouteTableSync: DisassociateTransitGatewayRouteTableSyncType<ClientInvocationReportingType>? = nil,
            disassociateVpcCidrBlockAsync: DisassociateVpcCidrBlockAsyncType<ClientInvocationReportingType>? = nil,
            disassociateVpcCidrBlockSync: DisassociateVpcCidrBlockSyncType<ClientInvocationReportingType>? = nil,
            enableEbsEncryptionByDefaultAsync: EnableEbsEncryptionByDefaultAsyncType<ClientInvocationReportingType>? = nil,
            enableEbsEncryptionByDefaultSync: EnableEbsEncryptionByDefaultSyncType<ClientInvocationReportingType>? = nil,
            enableFastSnapshotRestoresAsync: EnableFastSnapshotRestoresAsyncType<ClientInvocationReportingType>? = nil,
            enableFastSnapshotRestoresSync: EnableFastSnapshotRestoresSyncType<ClientInvocationReportingType>? = nil,
            enableTransitGatewayRouteTablePropagationAsync: EnableTransitGatewayRouteTablePropagationAsyncType<ClientInvocationReportingType>? = nil,
            enableTransitGatewayRouteTablePropagationSync: EnableTransitGatewayRouteTablePropagationSyncType<ClientInvocationReportingType>? = nil,
            enableVgwRoutePropagationAsync: EnableVgwRoutePropagationAsyncType<ClientInvocationReportingType>? = nil,
            enableVgwRoutePropagationSync: EnableVgwRoutePropagationSyncType<ClientInvocationReportingType>? = nil,
            enableVolumeIOAsync: EnableVolumeIOAsyncType<ClientInvocationReportingType>? = nil,
            enableVolumeIOSync: EnableVolumeIOSyncType<ClientInvocationReportingType>? = nil,
            enableVpcClassicLinkAsync: EnableVpcClassicLinkAsyncType<ClientInvocationReportingType>? = nil,
            enableVpcClassicLinkSync: EnableVpcClassicLinkSyncType<ClientInvocationReportingType>? = nil,
            enableVpcClassicLinkDnsSupportAsync: EnableVpcClassicLinkDnsSupportAsyncType<ClientInvocationReportingType>? = nil,
            enableVpcClassicLinkDnsSupportSync: EnableVpcClassicLinkDnsSupportSyncType<ClientInvocationReportingType>? = nil,
            exportClientVpnClientCertificateRevocationListAsync: ExportClientVpnClientCertificateRevocationListAsyncType<ClientInvocationReportingType>? = nil,
            exportClientVpnClientCertificateRevocationListSync: ExportClientVpnClientCertificateRevocationListSyncType<ClientInvocationReportingType>? = nil,
            exportClientVpnClientConfigurationAsync: ExportClientVpnClientConfigurationAsyncType<ClientInvocationReportingType>? = nil,
            exportClientVpnClientConfigurationSync: ExportClientVpnClientConfigurationSyncType<ClientInvocationReportingType>? = nil,
            exportImageAsync: ExportImageAsyncType<ClientInvocationReportingType>? = nil,
            exportImageSync: ExportImageSyncType<ClientInvocationReportingType>? = nil,
            exportTransitGatewayRoutesAsync: ExportTransitGatewayRoutesAsyncType<ClientInvocationReportingType>? = nil,
            exportTransitGatewayRoutesSync: ExportTransitGatewayRoutesSyncType<ClientInvocationReportingType>? = nil,
            getAssociatedIpv6PoolCidrsAsync: GetAssociatedIpv6PoolCidrsAsyncType<ClientInvocationReportingType>? = nil,
            getAssociatedIpv6PoolCidrsSync: GetAssociatedIpv6PoolCidrsSyncType<ClientInvocationReportingType>? = nil,
            getCapacityReservationUsageAsync: GetCapacityReservationUsageAsyncType<ClientInvocationReportingType>? = nil,
            getCapacityReservationUsageSync: GetCapacityReservationUsageSyncType<ClientInvocationReportingType>? = nil,
            getCoipPoolUsageAsync: GetCoipPoolUsageAsyncType<ClientInvocationReportingType>? = nil,
            getCoipPoolUsageSync: GetCoipPoolUsageSyncType<ClientInvocationReportingType>? = nil,
            getConsoleOutputAsync: GetConsoleOutputAsyncType<ClientInvocationReportingType>? = nil,
            getConsoleOutputSync: GetConsoleOutputSyncType<ClientInvocationReportingType>? = nil,
            getConsoleScreenshotAsync: GetConsoleScreenshotAsyncType<ClientInvocationReportingType>? = nil,
            getConsoleScreenshotSync: GetConsoleScreenshotSyncType<ClientInvocationReportingType>? = nil,
            getDefaultCreditSpecificationAsync: GetDefaultCreditSpecificationAsyncType<ClientInvocationReportingType>? = nil,
            getDefaultCreditSpecificationSync: GetDefaultCreditSpecificationSyncType<ClientInvocationReportingType>? = nil,
            getEbsDefaultKmsKeyIdAsync: GetEbsDefaultKmsKeyIdAsyncType<ClientInvocationReportingType>? = nil,
            getEbsDefaultKmsKeyIdSync: GetEbsDefaultKmsKeyIdSyncType<ClientInvocationReportingType>? = nil,
            getEbsEncryptionByDefaultAsync: GetEbsEncryptionByDefaultAsyncType<ClientInvocationReportingType>? = nil,
            getEbsEncryptionByDefaultSync: GetEbsEncryptionByDefaultSyncType<ClientInvocationReportingType>? = nil,
            getHostReservationPurchasePreviewAsync: GetHostReservationPurchasePreviewAsyncType<ClientInvocationReportingType>? = nil,
            getHostReservationPurchasePreviewSync: GetHostReservationPurchasePreviewSyncType<ClientInvocationReportingType>? = nil,
            getLaunchTemplateDataAsync: GetLaunchTemplateDataAsyncType<ClientInvocationReportingType>? = nil,
            getLaunchTemplateDataSync: GetLaunchTemplateDataSyncType<ClientInvocationReportingType>? = nil,
            getPasswordDataAsync: GetPasswordDataAsyncType<ClientInvocationReportingType>? = nil,
            getPasswordDataSync: GetPasswordDataSyncType<ClientInvocationReportingType>? = nil,
            getReservedInstancesExchangeQuoteAsync: GetReservedInstancesExchangeQuoteAsyncType<ClientInvocationReportingType>? = nil,
            getReservedInstancesExchangeQuoteSync: GetReservedInstancesExchangeQuoteSyncType<ClientInvocationReportingType>? = nil,
            getTransitGatewayAttachmentPropagationsAsync: GetTransitGatewayAttachmentPropagationsAsyncType<ClientInvocationReportingType>? = nil,
            getTransitGatewayAttachmentPropagationsSync: GetTransitGatewayAttachmentPropagationsSyncType<ClientInvocationReportingType>? = nil,
            getTransitGatewayMulticastDomainAssociationsAsync: GetTransitGatewayMulticastDomainAssociationsAsyncType<ClientInvocationReportingType>? = nil,
            getTransitGatewayMulticastDomainAssociationsSync: GetTransitGatewayMulticastDomainAssociationsSyncType<ClientInvocationReportingType>? = nil,
            getTransitGatewayRouteTableAssociationsAsync: GetTransitGatewayRouteTableAssociationsAsyncType<ClientInvocationReportingType>? = nil,
            getTransitGatewayRouteTableAssociationsSync: GetTransitGatewayRouteTableAssociationsSyncType<ClientInvocationReportingType>? = nil,
            getTransitGatewayRouteTablePropagationsAsync: GetTransitGatewayRouteTablePropagationsAsyncType<ClientInvocationReportingType>? = nil,
            getTransitGatewayRouteTablePropagationsSync: GetTransitGatewayRouteTablePropagationsSyncType<ClientInvocationReportingType>? = nil,
            importClientVpnClientCertificateRevocationListAsync: ImportClientVpnClientCertificateRevocationListAsyncType<ClientInvocationReportingType>? = nil,
            importClientVpnClientCertificateRevocationListSync: ImportClientVpnClientCertificateRevocationListSyncType<ClientInvocationReportingType>? = nil,
            importImageAsync: ImportImageAsyncType<ClientInvocationReportingType>? = nil,
            importImageSync: ImportImageSyncType<ClientInvocationReportingType>? = nil,
            importInstanceAsync: ImportInstanceAsyncType<ClientInvocationReportingType>? = nil,
            importInstanceSync: ImportInstanceSyncType<ClientInvocationReportingType>? = nil,
            importKeyPairAsync: ImportKeyPairAsyncType<ClientInvocationReportingType>? = nil,
            importKeyPairSync: ImportKeyPairSyncType<ClientInvocationReportingType>? = nil,
            importSnapshotAsync: ImportSnapshotAsyncType<ClientInvocationReportingType>? = nil,
            importSnapshotSync: ImportSnapshotSyncType<ClientInvocationReportingType>? = nil,
            importVolumeAsync: ImportVolumeAsyncType<ClientInvocationReportingType>? = nil,
            importVolumeSync: ImportVolumeSyncType<ClientInvocationReportingType>? = nil,
            modifyCapacityReservationAsync: ModifyCapacityReservationAsyncType<ClientInvocationReportingType>? = nil,
            modifyCapacityReservationSync: ModifyCapacityReservationSyncType<ClientInvocationReportingType>? = nil,
            modifyClientVpnEndpointAsync: ModifyClientVpnEndpointAsyncType<ClientInvocationReportingType>? = nil,
            modifyClientVpnEndpointSync: ModifyClientVpnEndpointSyncType<ClientInvocationReportingType>? = nil,
            modifyDefaultCreditSpecificationAsync: ModifyDefaultCreditSpecificationAsyncType<ClientInvocationReportingType>? = nil,
            modifyDefaultCreditSpecificationSync: ModifyDefaultCreditSpecificationSyncType<ClientInvocationReportingType>? = nil,
            modifyEbsDefaultKmsKeyIdAsync: ModifyEbsDefaultKmsKeyIdAsyncType<ClientInvocationReportingType>? = nil,
            modifyEbsDefaultKmsKeyIdSync: ModifyEbsDefaultKmsKeyIdSyncType<ClientInvocationReportingType>? = nil,
            modifyFleetAsync: ModifyFleetAsyncType<ClientInvocationReportingType>? = nil,
            modifyFleetSync: ModifyFleetSyncType<ClientInvocationReportingType>? = nil,
            modifyFpgaImageAttributeAsync: ModifyFpgaImageAttributeAsyncType<ClientInvocationReportingType>? = nil,
            modifyFpgaImageAttributeSync: ModifyFpgaImageAttributeSyncType<ClientInvocationReportingType>? = nil,
            modifyHostsAsync: ModifyHostsAsyncType<ClientInvocationReportingType>? = nil,
            modifyHostsSync: ModifyHostsSyncType<ClientInvocationReportingType>? = nil,
            modifyIdFormatAsync: ModifyIdFormatAsyncType<ClientInvocationReportingType>? = nil,
            modifyIdFormatSync: ModifyIdFormatSyncType<ClientInvocationReportingType>? = nil,
            modifyIdentityIdFormatAsync: ModifyIdentityIdFormatAsyncType<ClientInvocationReportingType>? = nil,
            modifyIdentityIdFormatSync: ModifyIdentityIdFormatSyncType<ClientInvocationReportingType>? = nil,
            modifyImageAttributeAsync: ModifyImageAttributeAsyncType<ClientInvocationReportingType>? = nil,
            modifyImageAttributeSync: ModifyImageAttributeSyncType<ClientInvocationReportingType>? = nil,
            modifyInstanceAttributeAsync: ModifyInstanceAttributeAsyncType<ClientInvocationReportingType>? = nil,
            modifyInstanceAttributeSync: ModifyInstanceAttributeSyncType<ClientInvocationReportingType>? = nil,
            modifyInstanceCapacityReservationAttributesAsync: ModifyInstanceCapacityReservationAttributesAsyncType<ClientInvocationReportingType>? = nil,
            modifyInstanceCapacityReservationAttributesSync: ModifyInstanceCapacityReservationAttributesSyncType<ClientInvocationReportingType>? = nil,
            modifyInstanceCreditSpecificationAsync: ModifyInstanceCreditSpecificationAsyncType<ClientInvocationReportingType>? = nil,
            modifyInstanceCreditSpecificationSync: ModifyInstanceCreditSpecificationSyncType<ClientInvocationReportingType>? = nil,
            modifyInstanceEventStartTimeAsync: ModifyInstanceEventStartTimeAsyncType<ClientInvocationReportingType>? = nil,
            modifyInstanceEventStartTimeSync: ModifyInstanceEventStartTimeSyncType<ClientInvocationReportingType>? = nil,
            modifyInstanceMetadataOptionsAsync: ModifyInstanceMetadataOptionsAsyncType<ClientInvocationReportingType>? = nil,
            modifyInstanceMetadataOptionsSync: ModifyInstanceMetadataOptionsSyncType<ClientInvocationReportingType>? = nil,
            modifyInstancePlacementAsync: ModifyInstancePlacementAsyncType<ClientInvocationReportingType>? = nil,
            modifyInstancePlacementSync: ModifyInstancePlacementSyncType<ClientInvocationReportingType>? = nil,
            modifyLaunchTemplateAsync: ModifyLaunchTemplateAsyncType<ClientInvocationReportingType>? = nil,
            modifyLaunchTemplateSync: ModifyLaunchTemplateSyncType<ClientInvocationReportingType>? = nil,
            modifyNetworkInterfaceAttributeAsync: ModifyNetworkInterfaceAttributeAsyncType<ClientInvocationReportingType>? = nil,
            modifyNetworkInterfaceAttributeSync: ModifyNetworkInterfaceAttributeSyncType<ClientInvocationReportingType>? = nil,
            modifyReservedInstancesAsync: ModifyReservedInstancesAsyncType<ClientInvocationReportingType>? = nil,
            modifyReservedInstancesSync: ModifyReservedInstancesSyncType<ClientInvocationReportingType>? = nil,
            modifySnapshotAttributeAsync: ModifySnapshotAttributeAsyncType<ClientInvocationReportingType>? = nil,
            modifySnapshotAttributeSync: ModifySnapshotAttributeSyncType<ClientInvocationReportingType>? = nil,
            modifySpotFleetRequestAsync: ModifySpotFleetRequestAsyncType<ClientInvocationReportingType>? = nil,
            modifySpotFleetRequestSync: ModifySpotFleetRequestSyncType<ClientInvocationReportingType>? = nil,
            modifySubnetAttributeAsync: ModifySubnetAttributeAsyncType<ClientInvocationReportingType>? = nil,
            modifySubnetAttributeSync: ModifySubnetAttributeSyncType<ClientInvocationReportingType>? = nil,
            modifyTrafficMirrorFilterNetworkServicesAsync: ModifyTrafficMirrorFilterNetworkServicesAsyncType<ClientInvocationReportingType>? = nil,
            modifyTrafficMirrorFilterNetworkServicesSync: ModifyTrafficMirrorFilterNetworkServicesSyncType<ClientInvocationReportingType>? = nil,
            modifyTrafficMirrorFilterRuleAsync: ModifyTrafficMirrorFilterRuleAsyncType<ClientInvocationReportingType>? = nil,
            modifyTrafficMirrorFilterRuleSync: ModifyTrafficMirrorFilterRuleSyncType<ClientInvocationReportingType>? = nil,
            modifyTrafficMirrorSessionAsync: ModifyTrafficMirrorSessionAsyncType<ClientInvocationReportingType>? = nil,
            modifyTrafficMirrorSessionSync: ModifyTrafficMirrorSessionSyncType<ClientInvocationReportingType>? = nil,
            modifyTransitGatewayVpcAttachmentAsync: ModifyTransitGatewayVpcAttachmentAsyncType<ClientInvocationReportingType>? = nil,
            modifyTransitGatewayVpcAttachmentSync: ModifyTransitGatewayVpcAttachmentSyncType<ClientInvocationReportingType>? = nil,
            modifyVolumeAsync: ModifyVolumeAsyncType<ClientInvocationReportingType>? = nil,
            modifyVolumeSync: ModifyVolumeSyncType<ClientInvocationReportingType>? = nil,
            modifyVolumeAttributeAsync: ModifyVolumeAttributeAsyncType<ClientInvocationReportingType>? = nil,
            modifyVolumeAttributeSync: ModifyVolumeAttributeSyncType<ClientInvocationReportingType>? = nil,
            modifyVpcAttributeAsync: ModifyVpcAttributeAsyncType<ClientInvocationReportingType>? = nil,
            modifyVpcAttributeSync: ModifyVpcAttributeSyncType<ClientInvocationReportingType>? = nil,
            modifyVpcEndpointAsync: ModifyVpcEndpointAsyncType<ClientInvocationReportingType>? = nil,
            modifyVpcEndpointSync: ModifyVpcEndpointSyncType<ClientInvocationReportingType>? = nil,
            modifyVpcEndpointConnectionNotificationAsync: ModifyVpcEndpointConnectionNotificationAsyncType<ClientInvocationReportingType>? = nil,
            modifyVpcEndpointConnectionNotificationSync: ModifyVpcEndpointConnectionNotificationSyncType<ClientInvocationReportingType>? = nil,
            modifyVpcEndpointServiceConfigurationAsync: ModifyVpcEndpointServiceConfigurationAsyncType<ClientInvocationReportingType>? = nil,
            modifyVpcEndpointServiceConfigurationSync: ModifyVpcEndpointServiceConfigurationSyncType<ClientInvocationReportingType>? = nil,
            modifyVpcEndpointServicePermissionsAsync: ModifyVpcEndpointServicePermissionsAsyncType<ClientInvocationReportingType>? = nil,
            modifyVpcEndpointServicePermissionsSync: ModifyVpcEndpointServicePermissionsSyncType<ClientInvocationReportingType>? = nil,
            modifyVpcPeeringConnectionOptionsAsync: ModifyVpcPeeringConnectionOptionsAsyncType<ClientInvocationReportingType>? = nil,
            modifyVpcPeeringConnectionOptionsSync: ModifyVpcPeeringConnectionOptionsSyncType<ClientInvocationReportingType>? = nil,
            modifyVpcTenancyAsync: ModifyVpcTenancyAsyncType<ClientInvocationReportingType>? = nil,
            modifyVpcTenancySync: ModifyVpcTenancySyncType<ClientInvocationReportingType>? = nil,
            modifyVpnConnectionAsync: ModifyVpnConnectionAsyncType<ClientInvocationReportingType>? = nil,
            modifyVpnConnectionSync: ModifyVpnConnectionSyncType<ClientInvocationReportingType>? = nil,
            modifyVpnTunnelCertificateAsync: ModifyVpnTunnelCertificateAsyncType<ClientInvocationReportingType>? = nil,
            modifyVpnTunnelCertificateSync: ModifyVpnTunnelCertificateSyncType<ClientInvocationReportingType>? = nil,
            modifyVpnTunnelOptionsAsync: ModifyVpnTunnelOptionsAsyncType<ClientInvocationReportingType>? = nil,
            modifyVpnTunnelOptionsSync: ModifyVpnTunnelOptionsSyncType<ClientInvocationReportingType>? = nil,
            monitorInstancesAsync: MonitorInstancesAsyncType<ClientInvocationReportingType>? = nil,
            monitorInstancesSync: MonitorInstancesSyncType<ClientInvocationReportingType>? = nil,
            moveAddressToVpcAsync: MoveAddressToVpcAsyncType<ClientInvocationReportingType>? = nil,
            moveAddressToVpcSync: MoveAddressToVpcSyncType<ClientInvocationReportingType>? = nil,
            provisionByoipCidrAsync: ProvisionByoipCidrAsyncType<ClientInvocationReportingType>? = nil,
            provisionByoipCidrSync: ProvisionByoipCidrSyncType<ClientInvocationReportingType>? = nil,
            purchaseHostReservationAsync: PurchaseHostReservationAsyncType<ClientInvocationReportingType>? = nil,
            purchaseHostReservationSync: PurchaseHostReservationSyncType<ClientInvocationReportingType>? = nil,
            purchaseReservedInstancesOfferingAsync: PurchaseReservedInstancesOfferingAsyncType<ClientInvocationReportingType>? = nil,
            purchaseReservedInstancesOfferingSync: PurchaseReservedInstancesOfferingSyncType<ClientInvocationReportingType>? = nil,
            purchaseScheduledInstancesAsync: PurchaseScheduledInstancesAsyncType<ClientInvocationReportingType>? = nil,
            purchaseScheduledInstancesSync: PurchaseScheduledInstancesSyncType<ClientInvocationReportingType>? = nil,
            rebootInstancesAsync: RebootInstancesAsyncType<ClientInvocationReportingType>? = nil,
            rebootInstancesSync: RebootInstancesSyncType<ClientInvocationReportingType>? = nil,
            registerImageAsync: RegisterImageAsyncType<ClientInvocationReportingType>? = nil,
            registerImageSync: RegisterImageSyncType<ClientInvocationReportingType>? = nil,
            registerTransitGatewayMulticastGroupMembersAsync: RegisterTransitGatewayMulticastGroupMembersAsyncType<ClientInvocationReportingType>? = nil,
            registerTransitGatewayMulticastGroupMembersSync: RegisterTransitGatewayMulticastGroupMembersSyncType<ClientInvocationReportingType>? = nil,
            registerTransitGatewayMulticastGroupSourcesAsync: RegisterTransitGatewayMulticastGroupSourcesAsyncType<ClientInvocationReportingType>? = nil,
            registerTransitGatewayMulticastGroupSourcesSync: RegisterTransitGatewayMulticastGroupSourcesSyncType<ClientInvocationReportingType>? = nil,
            rejectTransitGatewayPeeringAttachmentAsync: RejectTransitGatewayPeeringAttachmentAsyncType<ClientInvocationReportingType>? = nil,
            rejectTransitGatewayPeeringAttachmentSync: RejectTransitGatewayPeeringAttachmentSyncType<ClientInvocationReportingType>? = nil,
            rejectTransitGatewayVpcAttachmentAsync: RejectTransitGatewayVpcAttachmentAsyncType<ClientInvocationReportingType>? = nil,
            rejectTransitGatewayVpcAttachmentSync: RejectTransitGatewayVpcAttachmentSyncType<ClientInvocationReportingType>? = nil,
            rejectVpcEndpointConnectionsAsync: RejectVpcEndpointConnectionsAsyncType<ClientInvocationReportingType>? = nil,
            rejectVpcEndpointConnectionsSync: RejectVpcEndpointConnectionsSyncType<ClientInvocationReportingType>? = nil,
            rejectVpcPeeringConnectionAsync: RejectVpcPeeringConnectionAsyncType<ClientInvocationReportingType>? = nil,
            rejectVpcPeeringConnectionSync: RejectVpcPeeringConnectionSyncType<ClientInvocationReportingType>? = nil,
            releaseAddressAsync: ReleaseAddressAsyncType<ClientInvocationReportingType>? = nil,
            releaseAddressSync: ReleaseAddressSyncType<ClientInvocationReportingType>? = nil,
            releaseHostsAsync: ReleaseHostsAsyncType<ClientInvocationReportingType>? = nil,
            releaseHostsSync: ReleaseHostsSyncType<ClientInvocationReportingType>? = nil,
            replaceIamInstanceProfileAssociationAsync: ReplaceIamInstanceProfileAssociationAsyncType<ClientInvocationReportingType>? = nil,
            replaceIamInstanceProfileAssociationSync: ReplaceIamInstanceProfileAssociationSyncType<ClientInvocationReportingType>? = nil,
            replaceNetworkAclAssociationAsync: ReplaceNetworkAclAssociationAsyncType<ClientInvocationReportingType>? = nil,
            replaceNetworkAclAssociationSync: ReplaceNetworkAclAssociationSyncType<ClientInvocationReportingType>? = nil,
            replaceNetworkAclEntryAsync: ReplaceNetworkAclEntryAsyncType<ClientInvocationReportingType>? = nil,
            replaceNetworkAclEntrySync: ReplaceNetworkAclEntrySyncType<ClientInvocationReportingType>? = nil,
            replaceRouteAsync: ReplaceRouteAsyncType<ClientInvocationReportingType>? = nil,
            replaceRouteSync: ReplaceRouteSyncType<ClientInvocationReportingType>? = nil,
            replaceRouteTableAssociationAsync: ReplaceRouteTableAssociationAsyncType<ClientInvocationReportingType>? = nil,
            replaceRouteTableAssociationSync: ReplaceRouteTableAssociationSyncType<ClientInvocationReportingType>? = nil,
            replaceTransitGatewayRouteAsync: ReplaceTransitGatewayRouteAsyncType<ClientInvocationReportingType>? = nil,
            replaceTransitGatewayRouteSync: ReplaceTransitGatewayRouteSyncType<ClientInvocationReportingType>? = nil,
            reportInstanceStatusAsync: ReportInstanceStatusAsyncType<ClientInvocationReportingType>? = nil,
            reportInstanceStatusSync: ReportInstanceStatusSyncType<ClientInvocationReportingType>? = nil,
            requestSpotFleetAsync: RequestSpotFleetAsyncType<ClientInvocationReportingType>? = nil,
            requestSpotFleetSync: RequestSpotFleetSyncType<ClientInvocationReportingType>? = nil,
            requestSpotInstancesAsync: RequestSpotInstancesAsyncType<ClientInvocationReportingType>? = nil,
            requestSpotInstancesSync: RequestSpotInstancesSyncType<ClientInvocationReportingType>? = nil,
            resetEbsDefaultKmsKeyIdAsync: ResetEbsDefaultKmsKeyIdAsyncType<ClientInvocationReportingType>? = nil,
            resetEbsDefaultKmsKeyIdSync: ResetEbsDefaultKmsKeyIdSyncType<ClientInvocationReportingType>? = nil,
            resetFpgaImageAttributeAsync: ResetFpgaImageAttributeAsyncType<ClientInvocationReportingType>? = nil,
            resetFpgaImageAttributeSync: ResetFpgaImageAttributeSyncType<ClientInvocationReportingType>? = nil,
            resetImageAttributeAsync: ResetImageAttributeAsyncType<ClientInvocationReportingType>? = nil,
            resetImageAttributeSync: ResetImageAttributeSyncType<ClientInvocationReportingType>? = nil,
            resetInstanceAttributeAsync: ResetInstanceAttributeAsyncType<ClientInvocationReportingType>? = nil,
            resetInstanceAttributeSync: ResetInstanceAttributeSyncType<ClientInvocationReportingType>? = nil,
            resetNetworkInterfaceAttributeAsync: ResetNetworkInterfaceAttributeAsyncType<ClientInvocationReportingType>? = nil,
            resetNetworkInterfaceAttributeSync: ResetNetworkInterfaceAttributeSyncType<ClientInvocationReportingType>? = nil,
            resetSnapshotAttributeAsync: ResetSnapshotAttributeAsyncType<ClientInvocationReportingType>? = nil,
            resetSnapshotAttributeSync: ResetSnapshotAttributeSyncType<ClientInvocationReportingType>? = nil,
            restoreAddressToClassicAsync: RestoreAddressToClassicAsyncType<ClientInvocationReportingType>? = nil,
            restoreAddressToClassicSync: RestoreAddressToClassicSyncType<ClientInvocationReportingType>? = nil,
            revokeClientVpnIngressAsync: RevokeClientVpnIngressAsyncType<ClientInvocationReportingType>? = nil,
            revokeClientVpnIngressSync: RevokeClientVpnIngressSyncType<ClientInvocationReportingType>? = nil,
            revokeSecurityGroupEgressAsync: RevokeSecurityGroupEgressAsyncType<ClientInvocationReportingType>? = nil,
            revokeSecurityGroupEgressSync: RevokeSecurityGroupEgressSyncType<ClientInvocationReportingType>? = nil,
            revokeSecurityGroupIngressAsync: RevokeSecurityGroupIngressAsyncType<ClientInvocationReportingType>? = nil,
            revokeSecurityGroupIngressSync: RevokeSecurityGroupIngressSyncType<ClientInvocationReportingType>? = nil,
            runInstancesAsync: RunInstancesAsyncType<ClientInvocationReportingType>? = nil,
            runInstancesSync: RunInstancesSyncType<ClientInvocationReportingType>? = nil,
            runScheduledInstancesAsync: RunScheduledInstancesAsyncType<ClientInvocationReportingType>? = nil,
            runScheduledInstancesSync: RunScheduledInstancesSyncType<ClientInvocationReportingType>? = nil,
            searchLocalGatewayRoutesAsync: SearchLocalGatewayRoutesAsyncType<ClientInvocationReportingType>? = nil,
            searchLocalGatewayRoutesSync: SearchLocalGatewayRoutesSyncType<ClientInvocationReportingType>? = nil,
            searchTransitGatewayMulticastGroupsAsync: SearchTransitGatewayMulticastGroupsAsyncType<ClientInvocationReportingType>? = nil,
            searchTransitGatewayMulticastGroupsSync: SearchTransitGatewayMulticastGroupsSyncType<ClientInvocationReportingType>? = nil,
            searchTransitGatewayRoutesAsync: SearchTransitGatewayRoutesAsyncType<ClientInvocationReportingType>? = nil,
            searchTransitGatewayRoutesSync: SearchTransitGatewayRoutesSyncType<ClientInvocationReportingType>? = nil,
            sendDiagnosticInterruptAsync: SendDiagnosticInterruptAsyncType<ClientInvocationReportingType>? = nil,
            sendDiagnosticInterruptSync: SendDiagnosticInterruptSyncType<ClientInvocationReportingType>? = nil,
            startInstancesAsync: StartInstancesAsyncType<ClientInvocationReportingType>? = nil,
            startInstancesSync: StartInstancesSyncType<ClientInvocationReportingType>? = nil,
            startVpcEndpointServicePrivateDnsVerificationAsync: StartVpcEndpointServicePrivateDnsVerificationAsyncType<ClientInvocationReportingType>? = nil,
            startVpcEndpointServicePrivateDnsVerificationSync: StartVpcEndpointServicePrivateDnsVerificationSyncType<ClientInvocationReportingType>? = nil,
            stopInstancesAsync: StopInstancesAsyncType<ClientInvocationReportingType>? = nil,
            stopInstancesSync: StopInstancesSyncType<ClientInvocationReportingType>? = nil,
            terminateClientVpnConnectionsAsync: TerminateClientVpnConnectionsAsyncType<ClientInvocationReportingType>? = nil,
            terminateClientVpnConnectionsSync: TerminateClientVpnConnectionsSyncType<ClientInvocationReportingType>? = nil,
            terminateInstancesAsync: TerminateInstancesAsyncType<ClientInvocationReportingType>? = nil,
            terminateInstancesSync: TerminateInstancesSyncType<ClientInvocationReportingType>? = nil,
            unassignIpv6AddressesAsync: UnassignIpv6AddressesAsyncType<ClientInvocationReportingType>? = nil,
            unassignIpv6AddressesSync: UnassignIpv6AddressesSyncType<ClientInvocationReportingType>? = nil,
            unassignPrivateIpAddressesAsync: UnassignPrivateIpAddressesAsyncType<ClientInvocationReportingType>? = nil,
            unassignPrivateIpAddressesSync: UnassignPrivateIpAddressesSyncType<ClientInvocationReportingType>? = nil,
            unmonitorInstancesAsync: UnmonitorInstancesAsyncType<ClientInvocationReportingType>? = nil,
            unmonitorInstancesSync: UnmonitorInstancesSyncType<ClientInvocationReportingType>? = nil,
            updateSecurityGroupRuleDescriptionsEgressAsync: UpdateSecurityGroupRuleDescriptionsEgressAsyncType<ClientInvocationReportingType>? = nil,
            updateSecurityGroupRuleDescriptionsEgressSync: UpdateSecurityGroupRuleDescriptionsEgressSyncType<ClientInvocationReportingType>? = nil,
            updateSecurityGroupRuleDescriptionsIngressAsync: UpdateSecurityGroupRuleDescriptionsIngressAsyncType<ClientInvocationReportingType>? = nil,
            updateSecurityGroupRuleDescriptionsIngressSync: UpdateSecurityGroupRuleDescriptionsIngressSyncType<ClientInvocationReportingType>? = nil,
            withdrawByoipCidrAsync: WithdrawByoipCidrAsyncType<ClientInvocationReportingType>? = nil,
            withdrawByoipCidrSync: WithdrawByoipCidrSyncType<ClientInvocationReportingType>? = nil) {
        self.acceptReservedInstancesExchangeQuoteAsyncOverride = acceptReservedInstancesExchangeQuoteAsync
        self.acceptReservedInstancesExchangeQuoteSyncOverride = acceptReservedInstancesExchangeQuoteSync
        self.acceptTransitGatewayPeeringAttachmentAsyncOverride = acceptTransitGatewayPeeringAttachmentAsync
        self.acceptTransitGatewayPeeringAttachmentSyncOverride = acceptTransitGatewayPeeringAttachmentSync
        self.acceptTransitGatewayVpcAttachmentAsyncOverride = acceptTransitGatewayVpcAttachmentAsync
        self.acceptTransitGatewayVpcAttachmentSyncOverride = acceptTransitGatewayVpcAttachmentSync
        self.acceptVpcEndpointConnectionsAsyncOverride = acceptVpcEndpointConnectionsAsync
        self.acceptVpcEndpointConnectionsSyncOverride = acceptVpcEndpointConnectionsSync
        self.acceptVpcPeeringConnectionAsyncOverride = acceptVpcPeeringConnectionAsync
        self.acceptVpcPeeringConnectionSyncOverride = acceptVpcPeeringConnectionSync
        self.advertiseByoipCidrAsyncOverride = advertiseByoipCidrAsync
        self.advertiseByoipCidrSyncOverride = advertiseByoipCidrSync
        self.allocateAddressAsyncOverride = allocateAddressAsync
        self.allocateAddressSyncOverride = allocateAddressSync
        self.allocateHostsAsyncOverride = allocateHostsAsync
        self.allocateHostsSyncOverride = allocateHostsSync
        self.applySecurityGroupsToClientVpnTargetNetworkAsyncOverride = applySecurityGroupsToClientVpnTargetNetworkAsync
        self.applySecurityGroupsToClientVpnTargetNetworkSyncOverride = applySecurityGroupsToClientVpnTargetNetworkSync
        self.assignIpv6AddressesAsyncOverride = assignIpv6AddressesAsync
        self.assignIpv6AddressesSyncOverride = assignIpv6AddressesSync
        self.assignPrivateIpAddressesAsyncOverride = assignPrivateIpAddressesAsync
        self.assignPrivateIpAddressesSyncOverride = assignPrivateIpAddressesSync
        self.associateAddressAsyncOverride = associateAddressAsync
        self.associateAddressSyncOverride = associateAddressSync
        self.associateClientVpnTargetNetworkAsyncOverride = associateClientVpnTargetNetworkAsync
        self.associateClientVpnTargetNetworkSyncOverride = associateClientVpnTargetNetworkSync
        self.associateDhcpOptionsAsyncOverride = associateDhcpOptionsAsync
        self.associateDhcpOptionsSyncOverride = associateDhcpOptionsSync
        self.associateIamInstanceProfileAsyncOverride = associateIamInstanceProfileAsync
        self.associateIamInstanceProfileSyncOverride = associateIamInstanceProfileSync
        self.associateRouteTableAsyncOverride = associateRouteTableAsync
        self.associateRouteTableSyncOverride = associateRouteTableSync
        self.associateSubnetCidrBlockAsyncOverride = associateSubnetCidrBlockAsync
        self.associateSubnetCidrBlockSyncOverride = associateSubnetCidrBlockSync
        self.associateTransitGatewayMulticastDomainAsyncOverride = associateTransitGatewayMulticastDomainAsync
        self.associateTransitGatewayMulticastDomainSyncOverride = associateTransitGatewayMulticastDomainSync
        self.associateTransitGatewayRouteTableAsyncOverride = associateTransitGatewayRouteTableAsync
        self.associateTransitGatewayRouteTableSyncOverride = associateTransitGatewayRouteTableSync
        self.associateVpcCidrBlockAsyncOverride = associateVpcCidrBlockAsync
        self.associateVpcCidrBlockSyncOverride = associateVpcCidrBlockSync
        self.attachClassicLinkVpcAsyncOverride = attachClassicLinkVpcAsync
        self.attachClassicLinkVpcSyncOverride = attachClassicLinkVpcSync
        self.attachInternetGatewayAsyncOverride = attachInternetGatewayAsync
        self.attachInternetGatewaySyncOverride = attachInternetGatewaySync
        self.attachNetworkInterfaceAsyncOverride = attachNetworkInterfaceAsync
        self.attachNetworkInterfaceSyncOverride = attachNetworkInterfaceSync
        self.attachVolumeAsyncOverride = attachVolumeAsync
        self.attachVolumeSyncOverride = attachVolumeSync
        self.attachVpnGatewayAsyncOverride = attachVpnGatewayAsync
        self.attachVpnGatewaySyncOverride = attachVpnGatewaySync
        self.authorizeClientVpnIngressAsyncOverride = authorizeClientVpnIngressAsync
        self.authorizeClientVpnIngressSyncOverride = authorizeClientVpnIngressSync
        self.authorizeSecurityGroupEgressAsyncOverride = authorizeSecurityGroupEgressAsync
        self.authorizeSecurityGroupEgressSyncOverride = authorizeSecurityGroupEgressSync
        self.authorizeSecurityGroupIngressAsyncOverride = authorizeSecurityGroupIngressAsync
        self.authorizeSecurityGroupIngressSyncOverride = authorizeSecurityGroupIngressSync
        self.bundleInstanceAsyncOverride = bundleInstanceAsync
        self.bundleInstanceSyncOverride = bundleInstanceSync
        self.cancelBundleTaskAsyncOverride = cancelBundleTaskAsync
        self.cancelBundleTaskSyncOverride = cancelBundleTaskSync
        self.cancelCapacityReservationAsyncOverride = cancelCapacityReservationAsync
        self.cancelCapacityReservationSyncOverride = cancelCapacityReservationSync
        self.cancelConversionTaskAsyncOverride = cancelConversionTaskAsync
        self.cancelConversionTaskSyncOverride = cancelConversionTaskSync
        self.cancelExportTaskAsyncOverride = cancelExportTaskAsync
        self.cancelExportTaskSyncOverride = cancelExportTaskSync
        self.cancelImportTaskAsyncOverride = cancelImportTaskAsync
        self.cancelImportTaskSyncOverride = cancelImportTaskSync
        self.cancelReservedInstancesListingAsyncOverride = cancelReservedInstancesListingAsync
        self.cancelReservedInstancesListingSyncOverride = cancelReservedInstancesListingSync
        self.cancelSpotFleetRequestsAsyncOverride = cancelSpotFleetRequestsAsync
        self.cancelSpotFleetRequestsSyncOverride = cancelSpotFleetRequestsSync
        self.cancelSpotInstanceRequestsAsyncOverride = cancelSpotInstanceRequestsAsync
        self.cancelSpotInstanceRequestsSyncOverride = cancelSpotInstanceRequestsSync
        self.confirmProductInstanceAsyncOverride = confirmProductInstanceAsync
        self.confirmProductInstanceSyncOverride = confirmProductInstanceSync
        self.copyFpgaImageAsyncOverride = copyFpgaImageAsync
        self.copyFpgaImageSyncOverride = copyFpgaImageSync
        self.copyImageAsyncOverride = copyImageAsync
        self.copyImageSyncOverride = copyImageSync
        self.copySnapshotAsyncOverride = copySnapshotAsync
        self.copySnapshotSyncOverride = copySnapshotSync
        self.createCapacityReservationAsyncOverride = createCapacityReservationAsync
        self.createCapacityReservationSyncOverride = createCapacityReservationSync
        self.createClientVpnEndpointAsyncOverride = createClientVpnEndpointAsync
        self.createClientVpnEndpointSyncOverride = createClientVpnEndpointSync
        self.createClientVpnRouteAsyncOverride = createClientVpnRouteAsync
        self.createClientVpnRouteSyncOverride = createClientVpnRouteSync
        self.createCustomerGatewayAsyncOverride = createCustomerGatewayAsync
        self.createCustomerGatewaySyncOverride = createCustomerGatewaySync
        self.createDefaultSubnetAsyncOverride = createDefaultSubnetAsync
        self.createDefaultSubnetSyncOverride = createDefaultSubnetSync
        self.createDefaultVpcAsyncOverride = createDefaultVpcAsync
        self.createDefaultVpcSyncOverride = createDefaultVpcSync
        self.createDhcpOptionsAsyncOverride = createDhcpOptionsAsync
        self.createDhcpOptionsSyncOverride = createDhcpOptionsSync
        self.createEgressOnlyInternetGatewayAsyncOverride = createEgressOnlyInternetGatewayAsync
        self.createEgressOnlyInternetGatewaySyncOverride = createEgressOnlyInternetGatewaySync
        self.createFleetAsyncOverride = createFleetAsync
        self.createFleetSyncOverride = createFleetSync
        self.createFlowLogsAsyncOverride = createFlowLogsAsync
        self.createFlowLogsSyncOverride = createFlowLogsSync
        self.createFpgaImageAsyncOverride = createFpgaImageAsync
        self.createFpgaImageSyncOverride = createFpgaImageSync
        self.createImageAsyncOverride = createImageAsync
        self.createImageSyncOverride = createImageSync
        self.createInstanceExportTaskAsyncOverride = createInstanceExportTaskAsync
        self.createInstanceExportTaskSyncOverride = createInstanceExportTaskSync
        self.createInternetGatewayAsyncOverride = createInternetGatewayAsync
        self.createInternetGatewaySyncOverride = createInternetGatewaySync
        self.createKeyPairAsyncOverride = createKeyPairAsync
        self.createKeyPairSyncOverride = createKeyPairSync
        self.createLaunchTemplateAsyncOverride = createLaunchTemplateAsync
        self.createLaunchTemplateSyncOverride = createLaunchTemplateSync
        self.createLaunchTemplateVersionAsyncOverride = createLaunchTemplateVersionAsync
        self.createLaunchTemplateVersionSyncOverride = createLaunchTemplateVersionSync
        self.createLocalGatewayRouteAsyncOverride = createLocalGatewayRouteAsync
        self.createLocalGatewayRouteSyncOverride = createLocalGatewayRouteSync
        self.createLocalGatewayRouteTableVpcAssociationAsyncOverride = createLocalGatewayRouteTableVpcAssociationAsync
        self.createLocalGatewayRouteTableVpcAssociationSyncOverride = createLocalGatewayRouteTableVpcAssociationSync
        self.createNatGatewayAsyncOverride = createNatGatewayAsync
        self.createNatGatewaySyncOverride = createNatGatewaySync
        self.createNetworkAclAsyncOverride = createNetworkAclAsync
        self.createNetworkAclSyncOverride = createNetworkAclSync
        self.createNetworkAclEntryAsyncOverride = createNetworkAclEntryAsync
        self.createNetworkAclEntrySyncOverride = createNetworkAclEntrySync
        self.createNetworkInterfaceAsyncOverride = createNetworkInterfaceAsync
        self.createNetworkInterfaceSyncOverride = createNetworkInterfaceSync
        self.createNetworkInterfacePermissionAsyncOverride = createNetworkInterfacePermissionAsync
        self.createNetworkInterfacePermissionSyncOverride = createNetworkInterfacePermissionSync
        self.createPlacementGroupAsyncOverride = createPlacementGroupAsync
        self.createPlacementGroupSyncOverride = createPlacementGroupSync
        self.createReservedInstancesListingAsyncOverride = createReservedInstancesListingAsync
        self.createReservedInstancesListingSyncOverride = createReservedInstancesListingSync
        self.createRouteAsyncOverride = createRouteAsync
        self.createRouteSyncOverride = createRouteSync
        self.createRouteTableAsyncOverride = createRouteTableAsync
        self.createRouteTableSyncOverride = createRouteTableSync
        self.createSecurityGroupAsyncOverride = createSecurityGroupAsync
        self.createSecurityGroupSyncOverride = createSecurityGroupSync
        self.createSnapshotAsyncOverride = createSnapshotAsync
        self.createSnapshotSyncOverride = createSnapshotSync
        self.createSnapshotsAsyncOverride = createSnapshotsAsync
        self.createSnapshotsSyncOverride = createSnapshotsSync
        self.createSpotDatafeedSubscriptionAsyncOverride = createSpotDatafeedSubscriptionAsync
        self.createSpotDatafeedSubscriptionSyncOverride = createSpotDatafeedSubscriptionSync
        self.createSubnetAsyncOverride = createSubnetAsync
        self.createSubnetSyncOverride = createSubnetSync
        self.createTagsAsyncOverride = createTagsAsync
        self.createTagsSyncOverride = createTagsSync
        self.createTrafficMirrorFilterAsyncOverride = createTrafficMirrorFilterAsync
        self.createTrafficMirrorFilterSyncOverride = createTrafficMirrorFilterSync
        self.createTrafficMirrorFilterRuleAsyncOverride = createTrafficMirrorFilterRuleAsync
        self.createTrafficMirrorFilterRuleSyncOverride = createTrafficMirrorFilterRuleSync
        self.createTrafficMirrorSessionAsyncOverride = createTrafficMirrorSessionAsync
        self.createTrafficMirrorSessionSyncOverride = createTrafficMirrorSessionSync
        self.createTrafficMirrorTargetAsyncOverride = createTrafficMirrorTargetAsync
        self.createTrafficMirrorTargetSyncOverride = createTrafficMirrorTargetSync
        self.createTransitGatewayAsyncOverride = createTransitGatewayAsync
        self.createTransitGatewaySyncOverride = createTransitGatewaySync
        self.createTransitGatewayMulticastDomainAsyncOverride = createTransitGatewayMulticastDomainAsync
        self.createTransitGatewayMulticastDomainSyncOverride = createTransitGatewayMulticastDomainSync
        self.createTransitGatewayPeeringAttachmentAsyncOverride = createTransitGatewayPeeringAttachmentAsync
        self.createTransitGatewayPeeringAttachmentSyncOverride = createTransitGatewayPeeringAttachmentSync
        self.createTransitGatewayRouteAsyncOverride = createTransitGatewayRouteAsync
        self.createTransitGatewayRouteSyncOverride = createTransitGatewayRouteSync
        self.createTransitGatewayRouteTableAsyncOverride = createTransitGatewayRouteTableAsync
        self.createTransitGatewayRouteTableSyncOverride = createTransitGatewayRouteTableSync
        self.createTransitGatewayVpcAttachmentAsyncOverride = createTransitGatewayVpcAttachmentAsync
        self.createTransitGatewayVpcAttachmentSyncOverride = createTransitGatewayVpcAttachmentSync
        self.createVolumeAsyncOverride = createVolumeAsync
        self.createVolumeSyncOverride = createVolumeSync
        self.createVpcAsyncOverride = createVpcAsync
        self.createVpcSyncOverride = createVpcSync
        self.createVpcEndpointAsyncOverride = createVpcEndpointAsync
        self.createVpcEndpointSyncOverride = createVpcEndpointSync
        self.createVpcEndpointConnectionNotificationAsyncOverride = createVpcEndpointConnectionNotificationAsync
        self.createVpcEndpointConnectionNotificationSyncOverride = createVpcEndpointConnectionNotificationSync
        self.createVpcEndpointServiceConfigurationAsyncOverride = createVpcEndpointServiceConfigurationAsync
        self.createVpcEndpointServiceConfigurationSyncOverride = createVpcEndpointServiceConfigurationSync
        self.createVpcPeeringConnectionAsyncOverride = createVpcPeeringConnectionAsync
        self.createVpcPeeringConnectionSyncOverride = createVpcPeeringConnectionSync
        self.createVpnConnectionAsyncOverride = createVpnConnectionAsync
        self.createVpnConnectionSyncOverride = createVpnConnectionSync
        self.createVpnConnectionRouteAsyncOverride = createVpnConnectionRouteAsync
        self.createVpnConnectionRouteSyncOverride = createVpnConnectionRouteSync
        self.createVpnGatewayAsyncOverride = createVpnGatewayAsync
        self.createVpnGatewaySyncOverride = createVpnGatewaySync
        self.deleteClientVpnEndpointAsyncOverride = deleteClientVpnEndpointAsync
        self.deleteClientVpnEndpointSyncOverride = deleteClientVpnEndpointSync
        self.deleteClientVpnRouteAsyncOverride = deleteClientVpnRouteAsync
        self.deleteClientVpnRouteSyncOverride = deleteClientVpnRouteSync
        self.deleteCustomerGatewayAsyncOverride = deleteCustomerGatewayAsync
        self.deleteCustomerGatewaySyncOverride = deleteCustomerGatewaySync
        self.deleteDhcpOptionsAsyncOverride = deleteDhcpOptionsAsync
        self.deleteDhcpOptionsSyncOverride = deleteDhcpOptionsSync
        self.deleteEgressOnlyInternetGatewayAsyncOverride = deleteEgressOnlyInternetGatewayAsync
        self.deleteEgressOnlyInternetGatewaySyncOverride = deleteEgressOnlyInternetGatewaySync
        self.deleteFleetsAsyncOverride = deleteFleetsAsync
        self.deleteFleetsSyncOverride = deleteFleetsSync
        self.deleteFlowLogsAsyncOverride = deleteFlowLogsAsync
        self.deleteFlowLogsSyncOverride = deleteFlowLogsSync
        self.deleteFpgaImageAsyncOverride = deleteFpgaImageAsync
        self.deleteFpgaImageSyncOverride = deleteFpgaImageSync
        self.deleteInternetGatewayAsyncOverride = deleteInternetGatewayAsync
        self.deleteInternetGatewaySyncOverride = deleteInternetGatewaySync
        self.deleteKeyPairAsyncOverride = deleteKeyPairAsync
        self.deleteKeyPairSyncOverride = deleteKeyPairSync
        self.deleteLaunchTemplateAsyncOverride = deleteLaunchTemplateAsync
        self.deleteLaunchTemplateSyncOverride = deleteLaunchTemplateSync
        self.deleteLaunchTemplateVersionsAsyncOverride = deleteLaunchTemplateVersionsAsync
        self.deleteLaunchTemplateVersionsSyncOverride = deleteLaunchTemplateVersionsSync
        self.deleteLocalGatewayRouteAsyncOverride = deleteLocalGatewayRouteAsync
        self.deleteLocalGatewayRouteSyncOverride = deleteLocalGatewayRouteSync
        self.deleteLocalGatewayRouteTableVpcAssociationAsyncOverride = deleteLocalGatewayRouteTableVpcAssociationAsync
        self.deleteLocalGatewayRouteTableVpcAssociationSyncOverride = deleteLocalGatewayRouteTableVpcAssociationSync
        self.deleteNatGatewayAsyncOverride = deleteNatGatewayAsync
        self.deleteNatGatewaySyncOverride = deleteNatGatewaySync
        self.deleteNetworkAclAsyncOverride = deleteNetworkAclAsync
        self.deleteNetworkAclSyncOverride = deleteNetworkAclSync
        self.deleteNetworkAclEntryAsyncOverride = deleteNetworkAclEntryAsync
        self.deleteNetworkAclEntrySyncOverride = deleteNetworkAclEntrySync
        self.deleteNetworkInterfaceAsyncOverride = deleteNetworkInterfaceAsync
        self.deleteNetworkInterfaceSyncOverride = deleteNetworkInterfaceSync
        self.deleteNetworkInterfacePermissionAsyncOverride = deleteNetworkInterfacePermissionAsync
        self.deleteNetworkInterfacePermissionSyncOverride = deleteNetworkInterfacePermissionSync
        self.deletePlacementGroupAsyncOverride = deletePlacementGroupAsync
        self.deletePlacementGroupSyncOverride = deletePlacementGroupSync
        self.deleteQueuedReservedInstancesAsyncOverride = deleteQueuedReservedInstancesAsync
        self.deleteQueuedReservedInstancesSyncOverride = deleteQueuedReservedInstancesSync
        self.deleteRouteAsyncOverride = deleteRouteAsync
        self.deleteRouteSyncOverride = deleteRouteSync
        self.deleteRouteTableAsyncOverride = deleteRouteTableAsync
        self.deleteRouteTableSyncOverride = deleteRouteTableSync
        self.deleteSecurityGroupAsyncOverride = deleteSecurityGroupAsync
        self.deleteSecurityGroupSyncOverride = deleteSecurityGroupSync
        self.deleteSnapshotAsyncOverride = deleteSnapshotAsync
        self.deleteSnapshotSyncOverride = deleteSnapshotSync
        self.deleteSpotDatafeedSubscriptionAsyncOverride = deleteSpotDatafeedSubscriptionAsync
        self.deleteSpotDatafeedSubscriptionSyncOverride = deleteSpotDatafeedSubscriptionSync
        self.deleteSubnetAsyncOverride = deleteSubnetAsync
        self.deleteSubnetSyncOverride = deleteSubnetSync
        self.deleteTagsAsyncOverride = deleteTagsAsync
        self.deleteTagsSyncOverride = deleteTagsSync
        self.deleteTrafficMirrorFilterAsyncOverride = deleteTrafficMirrorFilterAsync
        self.deleteTrafficMirrorFilterSyncOverride = deleteTrafficMirrorFilterSync
        self.deleteTrafficMirrorFilterRuleAsyncOverride = deleteTrafficMirrorFilterRuleAsync
        self.deleteTrafficMirrorFilterRuleSyncOverride = deleteTrafficMirrorFilterRuleSync
        self.deleteTrafficMirrorSessionAsyncOverride = deleteTrafficMirrorSessionAsync
        self.deleteTrafficMirrorSessionSyncOverride = deleteTrafficMirrorSessionSync
        self.deleteTrafficMirrorTargetAsyncOverride = deleteTrafficMirrorTargetAsync
        self.deleteTrafficMirrorTargetSyncOverride = deleteTrafficMirrorTargetSync
        self.deleteTransitGatewayAsyncOverride = deleteTransitGatewayAsync
        self.deleteTransitGatewaySyncOverride = deleteTransitGatewaySync
        self.deleteTransitGatewayMulticastDomainAsyncOverride = deleteTransitGatewayMulticastDomainAsync
        self.deleteTransitGatewayMulticastDomainSyncOverride = deleteTransitGatewayMulticastDomainSync
        self.deleteTransitGatewayPeeringAttachmentAsyncOverride = deleteTransitGatewayPeeringAttachmentAsync
        self.deleteTransitGatewayPeeringAttachmentSyncOverride = deleteTransitGatewayPeeringAttachmentSync
        self.deleteTransitGatewayRouteAsyncOverride = deleteTransitGatewayRouteAsync
        self.deleteTransitGatewayRouteSyncOverride = deleteTransitGatewayRouteSync
        self.deleteTransitGatewayRouteTableAsyncOverride = deleteTransitGatewayRouteTableAsync
        self.deleteTransitGatewayRouteTableSyncOverride = deleteTransitGatewayRouteTableSync
        self.deleteTransitGatewayVpcAttachmentAsyncOverride = deleteTransitGatewayVpcAttachmentAsync
        self.deleteTransitGatewayVpcAttachmentSyncOverride = deleteTransitGatewayVpcAttachmentSync
        self.deleteVolumeAsyncOverride = deleteVolumeAsync
        self.deleteVolumeSyncOverride = deleteVolumeSync
        self.deleteVpcAsyncOverride = deleteVpcAsync
        self.deleteVpcSyncOverride = deleteVpcSync
        self.deleteVpcEndpointConnectionNotificationsAsyncOverride = deleteVpcEndpointConnectionNotificationsAsync
        self.deleteVpcEndpointConnectionNotificationsSyncOverride = deleteVpcEndpointConnectionNotificationsSync
        self.deleteVpcEndpointServiceConfigurationsAsyncOverride = deleteVpcEndpointServiceConfigurationsAsync
        self.deleteVpcEndpointServiceConfigurationsSyncOverride = deleteVpcEndpointServiceConfigurationsSync
        self.deleteVpcEndpointsAsyncOverride = deleteVpcEndpointsAsync
        self.deleteVpcEndpointsSyncOverride = deleteVpcEndpointsSync
        self.deleteVpcPeeringConnectionAsyncOverride = deleteVpcPeeringConnectionAsync
        self.deleteVpcPeeringConnectionSyncOverride = deleteVpcPeeringConnectionSync
        self.deleteVpnConnectionAsyncOverride = deleteVpnConnectionAsync
        self.deleteVpnConnectionSyncOverride = deleteVpnConnectionSync
        self.deleteVpnConnectionRouteAsyncOverride = deleteVpnConnectionRouteAsync
        self.deleteVpnConnectionRouteSyncOverride = deleteVpnConnectionRouteSync
        self.deleteVpnGatewayAsyncOverride = deleteVpnGatewayAsync
        self.deleteVpnGatewaySyncOverride = deleteVpnGatewaySync
        self.deprovisionByoipCidrAsyncOverride = deprovisionByoipCidrAsync
        self.deprovisionByoipCidrSyncOverride = deprovisionByoipCidrSync
        self.deregisterImageAsyncOverride = deregisterImageAsync
        self.deregisterImageSyncOverride = deregisterImageSync
        self.deregisterTransitGatewayMulticastGroupMembersAsyncOverride = deregisterTransitGatewayMulticastGroupMembersAsync
        self.deregisterTransitGatewayMulticastGroupMembersSyncOverride = deregisterTransitGatewayMulticastGroupMembersSync
        self.deregisterTransitGatewayMulticastGroupSourcesAsyncOverride = deregisterTransitGatewayMulticastGroupSourcesAsync
        self.deregisterTransitGatewayMulticastGroupSourcesSyncOverride = deregisterTransitGatewayMulticastGroupSourcesSync
        self.describeAccountAttributesAsyncOverride = describeAccountAttributesAsync
        self.describeAccountAttributesSyncOverride = describeAccountAttributesSync
        self.describeAddressesAsyncOverride = describeAddressesAsync
        self.describeAddressesSyncOverride = describeAddressesSync
        self.describeAggregateIdFormatAsyncOverride = describeAggregateIdFormatAsync
        self.describeAggregateIdFormatSyncOverride = describeAggregateIdFormatSync
        self.describeAvailabilityZonesAsyncOverride = describeAvailabilityZonesAsync
        self.describeAvailabilityZonesSyncOverride = describeAvailabilityZonesSync
        self.describeBundleTasksAsyncOverride = describeBundleTasksAsync
        self.describeBundleTasksSyncOverride = describeBundleTasksSync
        self.describeByoipCidrsAsyncOverride = describeByoipCidrsAsync
        self.describeByoipCidrsSyncOverride = describeByoipCidrsSync
        self.describeCapacityReservationsAsyncOverride = describeCapacityReservationsAsync
        self.describeCapacityReservationsSyncOverride = describeCapacityReservationsSync
        self.describeClassicLinkInstancesAsyncOverride = describeClassicLinkInstancesAsync
        self.describeClassicLinkInstancesSyncOverride = describeClassicLinkInstancesSync
        self.describeClientVpnAuthorizationRulesAsyncOverride = describeClientVpnAuthorizationRulesAsync
        self.describeClientVpnAuthorizationRulesSyncOverride = describeClientVpnAuthorizationRulesSync
        self.describeClientVpnConnectionsAsyncOverride = describeClientVpnConnectionsAsync
        self.describeClientVpnConnectionsSyncOverride = describeClientVpnConnectionsSync
        self.describeClientVpnEndpointsAsyncOverride = describeClientVpnEndpointsAsync
        self.describeClientVpnEndpointsSyncOverride = describeClientVpnEndpointsSync
        self.describeClientVpnRoutesAsyncOverride = describeClientVpnRoutesAsync
        self.describeClientVpnRoutesSyncOverride = describeClientVpnRoutesSync
        self.describeClientVpnTargetNetworksAsyncOverride = describeClientVpnTargetNetworksAsync
        self.describeClientVpnTargetNetworksSyncOverride = describeClientVpnTargetNetworksSync
        self.describeCoipPoolsAsyncOverride = describeCoipPoolsAsync
        self.describeCoipPoolsSyncOverride = describeCoipPoolsSync
        self.describeConversionTasksAsyncOverride = describeConversionTasksAsync
        self.describeConversionTasksSyncOverride = describeConversionTasksSync
        self.describeCustomerGatewaysAsyncOverride = describeCustomerGatewaysAsync
        self.describeCustomerGatewaysSyncOverride = describeCustomerGatewaysSync
        self.describeDhcpOptionsAsyncOverride = describeDhcpOptionsAsync
        self.describeDhcpOptionsSyncOverride = describeDhcpOptionsSync
        self.describeEgressOnlyInternetGatewaysAsyncOverride = describeEgressOnlyInternetGatewaysAsync
        self.describeEgressOnlyInternetGatewaysSyncOverride = describeEgressOnlyInternetGatewaysSync
        self.describeElasticGpusAsyncOverride = describeElasticGpusAsync
        self.describeElasticGpusSyncOverride = describeElasticGpusSync
        self.describeExportImageTasksAsyncOverride = describeExportImageTasksAsync
        self.describeExportImageTasksSyncOverride = describeExportImageTasksSync
        self.describeExportTasksAsyncOverride = describeExportTasksAsync
        self.describeExportTasksSyncOverride = describeExportTasksSync
        self.describeFastSnapshotRestoresAsyncOverride = describeFastSnapshotRestoresAsync
        self.describeFastSnapshotRestoresSyncOverride = describeFastSnapshotRestoresSync
        self.describeFleetHistoryAsyncOverride = describeFleetHistoryAsync
        self.describeFleetHistorySyncOverride = describeFleetHistorySync
        self.describeFleetInstancesAsyncOverride = describeFleetInstancesAsync
        self.describeFleetInstancesSyncOverride = describeFleetInstancesSync
        self.describeFleetsAsyncOverride = describeFleetsAsync
        self.describeFleetsSyncOverride = describeFleetsSync
        self.describeFlowLogsAsyncOverride = describeFlowLogsAsync
        self.describeFlowLogsSyncOverride = describeFlowLogsSync
        self.describeFpgaImageAttributeAsyncOverride = describeFpgaImageAttributeAsync
        self.describeFpgaImageAttributeSyncOverride = describeFpgaImageAttributeSync
        self.describeFpgaImagesAsyncOverride = describeFpgaImagesAsync
        self.describeFpgaImagesSyncOverride = describeFpgaImagesSync
        self.describeHostReservationOfferingsAsyncOverride = describeHostReservationOfferingsAsync
        self.describeHostReservationOfferingsSyncOverride = describeHostReservationOfferingsSync
        self.describeHostReservationsAsyncOverride = describeHostReservationsAsync
        self.describeHostReservationsSyncOverride = describeHostReservationsSync
        self.describeHostsAsyncOverride = describeHostsAsync
        self.describeHostsSyncOverride = describeHostsSync
        self.describeIamInstanceProfileAssociationsAsyncOverride = describeIamInstanceProfileAssociationsAsync
        self.describeIamInstanceProfileAssociationsSyncOverride = describeIamInstanceProfileAssociationsSync
        self.describeIdFormatAsyncOverride = describeIdFormatAsync
        self.describeIdFormatSyncOverride = describeIdFormatSync
        self.describeIdentityIdFormatAsyncOverride = describeIdentityIdFormatAsync
        self.describeIdentityIdFormatSyncOverride = describeIdentityIdFormatSync
        self.describeImageAttributeAsyncOverride = describeImageAttributeAsync
        self.describeImageAttributeSyncOverride = describeImageAttributeSync
        self.describeImagesAsyncOverride = describeImagesAsync
        self.describeImagesSyncOverride = describeImagesSync
        self.describeImportImageTasksAsyncOverride = describeImportImageTasksAsync
        self.describeImportImageTasksSyncOverride = describeImportImageTasksSync
        self.describeImportSnapshotTasksAsyncOverride = describeImportSnapshotTasksAsync
        self.describeImportSnapshotTasksSyncOverride = describeImportSnapshotTasksSync
        self.describeInstanceAttributeAsyncOverride = describeInstanceAttributeAsync
        self.describeInstanceAttributeSyncOverride = describeInstanceAttributeSync
        self.describeInstanceCreditSpecificationsAsyncOverride = describeInstanceCreditSpecificationsAsync
        self.describeInstanceCreditSpecificationsSyncOverride = describeInstanceCreditSpecificationsSync
        self.describeInstanceStatusAsyncOverride = describeInstanceStatusAsync
        self.describeInstanceStatusSyncOverride = describeInstanceStatusSync
        self.describeInstanceTypeOfferingsAsyncOverride = describeInstanceTypeOfferingsAsync
        self.describeInstanceTypeOfferingsSyncOverride = describeInstanceTypeOfferingsSync
        self.describeInstanceTypesAsyncOverride = describeInstanceTypesAsync
        self.describeInstanceTypesSyncOverride = describeInstanceTypesSync
        self.describeInstancesAsyncOverride = describeInstancesAsync
        self.describeInstancesSyncOverride = describeInstancesSync
        self.describeInternetGatewaysAsyncOverride = describeInternetGatewaysAsync
        self.describeInternetGatewaysSyncOverride = describeInternetGatewaysSync
        self.describeIpv6PoolsAsyncOverride = describeIpv6PoolsAsync
        self.describeIpv6PoolsSyncOverride = describeIpv6PoolsSync
        self.describeKeyPairsAsyncOverride = describeKeyPairsAsync
        self.describeKeyPairsSyncOverride = describeKeyPairsSync
        self.describeLaunchTemplateVersionsAsyncOverride = describeLaunchTemplateVersionsAsync
        self.describeLaunchTemplateVersionsSyncOverride = describeLaunchTemplateVersionsSync
        self.describeLaunchTemplatesAsyncOverride = describeLaunchTemplatesAsync
        self.describeLaunchTemplatesSyncOverride = describeLaunchTemplatesSync
        self.describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsyncOverride = describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsync
        self.describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsSyncOverride = describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsSync
        self.describeLocalGatewayRouteTableVpcAssociationsAsyncOverride = describeLocalGatewayRouteTableVpcAssociationsAsync
        self.describeLocalGatewayRouteTableVpcAssociationsSyncOverride = describeLocalGatewayRouteTableVpcAssociationsSync
        self.describeLocalGatewayRouteTablesAsyncOverride = describeLocalGatewayRouteTablesAsync
        self.describeLocalGatewayRouteTablesSyncOverride = describeLocalGatewayRouteTablesSync
        self.describeLocalGatewayVirtualInterfaceGroupsAsyncOverride = describeLocalGatewayVirtualInterfaceGroupsAsync
        self.describeLocalGatewayVirtualInterfaceGroupsSyncOverride = describeLocalGatewayVirtualInterfaceGroupsSync
        self.describeLocalGatewayVirtualInterfacesAsyncOverride = describeLocalGatewayVirtualInterfacesAsync
        self.describeLocalGatewayVirtualInterfacesSyncOverride = describeLocalGatewayVirtualInterfacesSync
        self.describeLocalGatewaysAsyncOverride = describeLocalGatewaysAsync
        self.describeLocalGatewaysSyncOverride = describeLocalGatewaysSync
        self.describeMovingAddressesAsyncOverride = describeMovingAddressesAsync
        self.describeMovingAddressesSyncOverride = describeMovingAddressesSync
        self.describeNatGatewaysAsyncOverride = describeNatGatewaysAsync
        self.describeNatGatewaysSyncOverride = describeNatGatewaysSync
        self.describeNetworkAclsAsyncOverride = describeNetworkAclsAsync
        self.describeNetworkAclsSyncOverride = describeNetworkAclsSync
        self.describeNetworkInterfaceAttributeAsyncOverride = describeNetworkInterfaceAttributeAsync
        self.describeNetworkInterfaceAttributeSyncOverride = describeNetworkInterfaceAttributeSync
        self.describeNetworkInterfacePermissionsAsyncOverride = describeNetworkInterfacePermissionsAsync
        self.describeNetworkInterfacePermissionsSyncOverride = describeNetworkInterfacePermissionsSync
        self.describeNetworkInterfacesAsyncOverride = describeNetworkInterfacesAsync
        self.describeNetworkInterfacesSyncOverride = describeNetworkInterfacesSync
        self.describePlacementGroupsAsyncOverride = describePlacementGroupsAsync
        self.describePlacementGroupsSyncOverride = describePlacementGroupsSync
        self.describePrefixListsAsyncOverride = describePrefixListsAsync
        self.describePrefixListsSyncOverride = describePrefixListsSync
        self.describePrincipalIdFormatAsyncOverride = describePrincipalIdFormatAsync
        self.describePrincipalIdFormatSyncOverride = describePrincipalIdFormatSync
        self.describePublicIpv4PoolsAsyncOverride = describePublicIpv4PoolsAsync
        self.describePublicIpv4PoolsSyncOverride = describePublicIpv4PoolsSync
        self.describeRegionsAsyncOverride = describeRegionsAsync
        self.describeRegionsSyncOverride = describeRegionsSync
        self.describeReservedInstancesAsyncOverride = describeReservedInstancesAsync
        self.describeReservedInstancesSyncOverride = describeReservedInstancesSync
        self.describeReservedInstancesListingsAsyncOverride = describeReservedInstancesListingsAsync
        self.describeReservedInstancesListingsSyncOverride = describeReservedInstancesListingsSync
        self.describeReservedInstancesModificationsAsyncOverride = describeReservedInstancesModificationsAsync
        self.describeReservedInstancesModificationsSyncOverride = describeReservedInstancesModificationsSync
        self.describeReservedInstancesOfferingsAsyncOverride = describeReservedInstancesOfferingsAsync
        self.describeReservedInstancesOfferingsSyncOverride = describeReservedInstancesOfferingsSync
        self.describeRouteTablesAsyncOverride = describeRouteTablesAsync
        self.describeRouteTablesSyncOverride = describeRouteTablesSync
        self.describeScheduledInstanceAvailabilityAsyncOverride = describeScheduledInstanceAvailabilityAsync
        self.describeScheduledInstanceAvailabilitySyncOverride = describeScheduledInstanceAvailabilitySync
        self.describeScheduledInstancesAsyncOverride = describeScheduledInstancesAsync
        self.describeScheduledInstancesSyncOverride = describeScheduledInstancesSync
        self.describeSecurityGroupReferencesAsyncOverride = describeSecurityGroupReferencesAsync
        self.describeSecurityGroupReferencesSyncOverride = describeSecurityGroupReferencesSync
        self.describeSecurityGroupsAsyncOverride = describeSecurityGroupsAsync
        self.describeSecurityGroupsSyncOverride = describeSecurityGroupsSync
        self.describeSnapshotAttributeAsyncOverride = describeSnapshotAttributeAsync
        self.describeSnapshotAttributeSyncOverride = describeSnapshotAttributeSync
        self.describeSnapshotsAsyncOverride = describeSnapshotsAsync
        self.describeSnapshotsSyncOverride = describeSnapshotsSync
        self.describeSpotDatafeedSubscriptionAsyncOverride = describeSpotDatafeedSubscriptionAsync
        self.describeSpotDatafeedSubscriptionSyncOverride = describeSpotDatafeedSubscriptionSync
        self.describeSpotFleetInstancesAsyncOverride = describeSpotFleetInstancesAsync
        self.describeSpotFleetInstancesSyncOverride = describeSpotFleetInstancesSync
        self.describeSpotFleetRequestHistoryAsyncOverride = describeSpotFleetRequestHistoryAsync
        self.describeSpotFleetRequestHistorySyncOverride = describeSpotFleetRequestHistorySync
        self.describeSpotFleetRequestsAsyncOverride = describeSpotFleetRequestsAsync
        self.describeSpotFleetRequestsSyncOverride = describeSpotFleetRequestsSync
        self.describeSpotInstanceRequestsAsyncOverride = describeSpotInstanceRequestsAsync
        self.describeSpotInstanceRequestsSyncOverride = describeSpotInstanceRequestsSync
        self.describeSpotPriceHistoryAsyncOverride = describeSpotPriceHistoryAsync
        self.describeSpotPriceHistorySyncOverride = describeSpotPriceHistorySync
        self.describeStaleSecurityGroupsAsyncOverride = describeStaleSecurityGroupsAsync
        self.describeStaleSecurityGroupsSyncOverride = describeStaleSecurityGroupsSync
        self.describeSubnetsAsyncOverride = describeSubnetsAsync
        self.describeSubnetsSyncOverride = describeSubnetsSync
        self.describeTagsAsyncOverride = describeTagsAsync
        self.describeTagsSyncOverride = describeTagsSync
        self.describeTrafficMirrorFiltersAsyncOverride = describeTrafficMirrorFiltersAsync
        self.describeTrafficMirrorFiltersSyncOverride = describeTrafficMirrorFiltersSync
        self.describeTrafficMirrorSessionsAsyncOverride = describeTrafficMirrorSessionsAsync
        self.describeTrafficMirrorSessionsSyncOverride = describeTrafficMirrorSessionsSync
        self.describeTrafficMirrorTargetsAsyncOverride = describeTrafficMirrorTargetsAsync
        self.describeTrafficMirrorTargetsSyncOverride = describeTrafficMirrorTargetsSync
        self.describeTransitGatewayAttachmentsAsyncOverride = describeTransitGatewayAttachmentsAsync
        self.describeTransitGatewayAttachmentsSyncOverride = describeTransitGatewayAttachmentsSync
        self.describeTransitGatewayMulticastDomainsAsyncOverride = describeTransitGatewayMulticastDomainsAsync
        self.describeTransitGatewayMulticastDomainsSyncOverride = describeTransitGatewayMulticastDomainsSync
        self.describeTransitGatewayPeeringAttachmentsAsyncOverride = describeTransitGatewayPeeringAttachmentsAsync
        self.describeTransitGatewayPeeringAttachmentsSyncOverride = describeTransitGatewayPeeringAttachmentsSync
        self.describeTransitGatewayRouteTablesAsyncOverride = describeTransitGatewayRouteTablesAsync
        self.describeTransitGatewayRouteTablesSyncOverride = describeTransitGatewayRouteTablesSync
        self.describeTransitGatewayVpcAttachmentsAsyncOverride = describeTransitGatewayVpcAttachmentsAsync
        self.describeTransitGatewayVpcAttachmentsSyncOverride = describeTransitGatewayVpcAttachmentsSync
        self.describeTransitGatewaysAsyncOverride = describeTransitGatewaysAsync
        self.describeTransitGatewaysSyncOverride = describeTransitGatewaysSync
        self.describeVolumeAttributeAsyncOverride = describeVolumeAttributeAsync
        self.describeVolumeAttributeSyncOverride = describeVolumeAttributeSync
        self.describeVolumeStatusAsyncOverride = describeVolumeStatusAsync
        self.describeVolumeStatusSyncOverride = describeVolumeStatusSync
        self.describeVolumesAsyncOverride = describeVolumesAsync
        self.describeVolumesSyncOverride = describeVolumesSync
        self.describeVolumesModificationsAsyncOverride = describeVolumesModificationsAsync
        self.describeVolumesModificationsSyncOverride = describeVolumesModificationsSync
        self.describeVpcAttributeAsyncOverride = describeVpcAttributeAsync
        self.describeVpcAttributeSyncOverride = describeVpcAttributeSync
        self.describeVpcClassicLinkAsyncOverride = describeVpcClassicLinkAsync
        self.describeVpcClassicLinkSyncOverride = describeVpcClassicLinkSync
        self.describeVpcClassicLinkDnsSupportAsyncOverride = describeVpcClassicLinkDnsSupportAsync
        self.describeVpcClassicLinkDnsSupportSyncOverride = describeVpcClassicLinkDnsSupportSync
        self.describeVpcEndpointConnectionNotificationsAsyncOverride = describeVpcEndpointConnectionNotificationsAsync
        self.describeVpcEndpointConnectionNotificationsSyncOverride = describeVpcEndpointConnectionNotificationsSync
        self.describeVpcEndpointConnectionsAsyncOverride = describeVpcEndpointConnectionsAsync
        self.describeVpcEndpointConnectionsSyncOverride = describeVpcEndpointConnectionsSync
        self.describeVpcEndpointServiceConfigurationsAsyncOverride = describeVpcEndpointServiceConfigurationsAsync
        self.describeVpcEndpointServiceConfigurationsSyncOverride = describeVpcEndpointServiceConfigurationsSync
        self.describeVpcEndpointServicePermissionsAsyncOverride = describeVpcEndpointServicePermissionsAsync
        self.describeVpcEndpointServicePermissionsSyncOverride = describeVpcEndpointServicePermissionsSync
        self.describeVpcEndpointServicesAsyncOverride = describeVpcEndpointServicesAsync
        self.describeVpcEndpointServicesSyncOverride = describeVpcEndpointServicesSync
        self.describeVpcEndpointsAsyncOverride = describeVpcEndpointsAsync
        self.describeVpcEndpointsSyncOverride = describeVpcEndpointsSync
        self.describeVpcPeeringConnectionsAsyncOverride = describeVpcPeeringConnectionsAsync
        self.describeVpcPeeringConnectionsSyncOverride = describeVpcPeeringConnectionsSync
        self.describeVpcsAsyncOverride = describeVpcsAsync
        self.describeVpcsSyncOverride = describeVpcsSync
        self.describeVpnConnectionsAsyncOverride = describeVpnConnectionsAsync
        self.describeVpnConnectionsSyncOverride = describeVpnConnectionsSync
        self.describeVpnGatewaysAsyncOverride = describeVpnGatewaysAsync
        self.describeVpnGatewaysSyncOverride = describeVpnGatewaysSync
        self.detachClassicLinkVpcAsyncOverride = detachClassicLinkVpcAsync
        self.detachClassicLinkVpcSyncOverride = detachClassicLinkVpcSync
        self.detachInternetGatewayAsyncOverride = detachInternetGatewayAsync
        self.detachInternetGatewaySyncOverride = detachInternetGatewaySync
        self.detachNetworkInterfaceAsyncOverride = detachNetworkInterfaceAsync
        self.detachNetworkInterfaceSyncOverride = detachNetworkInterfaceSync
        self.detachVolumeAsyncOverride = detachVolumeAsync
        self.detachVolumeSyncOverride = detachVolumeSync
        self.detachVpnGatewayAsyncOverride = detachVpnGatewayAsync
        self.detachVpnGatewaySyncOverride = detachVpnGatewaySync
        self.disableEbsEncryptionByDefaultAsyncOverride = disableEbsEncryptionByDefaultAsync
        self.disableEbsEncryptionByDefaultSyncOverride = disableEbsEncryptionByDefaultSync
        self.disableFastSnapshotRestoresAsyncOverride = disableFastSnapshotRestoresAsync
        self.disableFastSnapshotRestoresSyncOverride = disableFastSnapshotRestoresSync
        self.disableTransitGatewayRouteTablePropagationAsyncOverride = disableTransitGatewayRouteTablePropagationAsync
        self.disableTransitGatewayRouteTablePropagationSyncOverride = disableTransitGatewayRouteTablePropagationSync
        self.disableVgwRoutePropagationAsyncOverride = disableVgwRoutePropagationAsync
        self.disableVgwRoutePropagationSyncOverride = disableVgwRoutePropagationSync
        self.disableVpcClassicLinkAsyncOverride = disableVpcClassicLinkAsync
        self.disableVpcClassicLinkSyncOverride = disableVpcClassicLinkSync
        self.disableVpcClassicLinkDnsSupportAsyncOverride = disableVpcClassicLinkDnsSupportAsync
        self.disableVpcClassicLinkDnsSupportSyncOverride = disableVpcClassicLinkDnsSupportSync
        self.disassociateAddressAsyncOverride = disassociateAddressAsync
        self.disassociateAddressSyncOverride = disassociateAddressSync
        self.disassociateClientVpnTargetNetworkAsyncOverride = disassociateClientVpnTargetNetworkAsync
        self.disassociateClientVpnTargetNetworkSyncOverride = disassociateClientVpnTargetNetworkSync
        self.disassociateIamInstanceProfileAsyncOverride = disassociateIamInstanceProfileAsync
        self.disassociateIamInstanceProfileSyncOverride = disassociateIamInstanceProfileSync
        self.disassociateRouteTableAsyncOverride = disassociateRouteTableAsync
        self.disassociateRouteTableSyncOverride = disassociateRouteTableSync
        self.disassociateSubnetCidrBlockAsyncOverride = disassociateSubnetCidrBlockAsync
        self.disassociateSubnetCidrBlockSyncOverride = disassociateSubnetCidrBlockSync
        self.disassociateTransitGatewayMulticastDomainAsyncOverride = disassociateTransitGatewayMulticastDomainAsync
        self.disassociateTransitGatewayMulticastDomainSyncOverride = disassociateTransitGatewayMulticastDomainSync
        self.disassociateTransitGatewayRouteTableAsyncOverride = disassociateTransitGatewayRouteTableAsync
        self.disassociateTransitGatewayRouteTableSyncOverride = disassociateTransitGatewayRouteTableSync
        self.disassociateVpcCidrBlockAsyncOverride = disassociateVpcCidrBlockAsync
        self.disassociateVpcCidrBlockSyncOverride = disassociateVpcCidrBlockSync
        self.enableEbsEncryptionByDefaultAsyncOverride = enableEbsEncryptionByDefaultAsync
        self.enableEbsEncryptionByDefaultSyncOverride = enableEbsEncryptionByDefaultSync
        self.enableFastSnapshotRestoresAsyncOverride = enableFastSnapshotRestoresAsync
        self.enableFastSnapshotRestoresSyncOverride = enableFastSnapshotRestoresSync
        self.enableTransitGatewayRouteTablePropagationAsyncOverride = enableTransitGatewayRouteTablePropagationAsync
        self.enableTransitGatewayRouteTablePropagationSyncOverride = enableTransitGatewayRouteTablePropagationSync
        self.enableVgwRoutePropagationAsyncOverride = enableVgwRoutePropagationAsync
        self.enableVgwRoutePropagationSyncOverride = enableVgwRoutePropagationSync
        self.enableVolumeIOAsyncOverride = enableVolumeIOAsync
        self.enableVolumeIOSyncOverride = enableVolumeIOSync
        self.enableVpcClassicLinkAsyncOverride = enableVpcClassicLinkAsync
        self.enableVpcClassicLinkSyncOverride = enableVpcClassicLinkSync
        self.enableVpcClassicLinkDnsSupportAsyncOverride = enableVpcClassicLinkDnsSupportAsync
        self.enableVpcClassicLinkDnsSupportSyncOverride = enableVpcClassicLinkDnsSupportSync
        self.exportClientVpnClientCertificateRevocationListAsyncOverride = exportClientVpnClientCertificateRevocationListAsync
        self.exportClientVpnClientCertificateRevocationListSyncOverride = exportClientVpnClientCertificateRevocationListSync
        self.exportClientVpnClientConfigurationAsyncOverride = exportClientVpnClientConfigurationAsync
        self.exportClientVpnClientConfigurationSyncOverride = exportClientVpnClientConfigurationSync
        self.exportImageAsyncOverride = exportImageAsync
        self.exportImageSyncOverride = exportImageSync
        self.exportTransitGatewayRoutesAsyncOverride = exportTransitGatewayRoutesAsync
        self.exportTransitGatewayRoutesSyncOverride = exportTransitGatewayRoutesSync
        self.getAssociatedIpv6PoolCidrsAsyncOverride = getAssociatedIpv6PoolCidrsAsync
        self.getAssociatedIpv6PoolCidrsSyncOverride = getAssociatedIpv6PoolCidrsSync
        self.getCapacityReservationUsageAsyncOverride = getCapacityReservationUsageAsync
        self.getCapacityReservationUsageSyncOverride = getCapacityReservationUsageSync
        self.getCoipPoolUsageAsyncOverride = getCoipPoolUsageAsync
        self.getCoipPoolUsageSyncOverride = getCoipPoolUsageSync
        self.getConsoleOutputAsyncOverride = getConsoleOutputAsync
        self.getConsoleOutputSyncOverride = getConsoleOutputSync
        self.getConsoleScreenshotAsyncOverride = getConsoleScreenshotAsync
        self.getConsoleScreenshotSyncOverride = getConsoleScreenshotSync
        self.getDefaultCreditSpecificationAsyncOverride = getDefaultCreditSpecificationAsync
        self.getDefaultCreditSpecificationSyncOverride = getDefaultCreditSpecificationSync
        self.getEbsDefaultKmsKeyIdAsyncOverride = getEbsDefaultKmsKeyIdAsync
        self.getEbsDefaultKmsKeyIdSyncOverride = getEbsDefaultKmsKeyIdSync
        self.getEbsEncryptionByDefaultAsyncOverride = getEbsEncryptionByDefaultAsync
        self.getEbsEncryptionByDefaultSyncOverride = getEbsEncryptionByDefaultSync
        self.getHostReservationPurchasePreviewAsyncOverride = getHostReservationPurchasePreviewAsync
        self.getHostReservationPurchasePreviewSyncOverride = getHostReservationPurchasePreviewSync
        self.getLaunchTemplateDataAsyncOverride = getLaunchTemplateDataAsync
        self.getLaunchTemplateDataSyncOverride = getLaunchTemplateDataSync
        self.getPasswordDataAsyncOverride = getPasswordDataAsync
        self.getPasswordDataSyncOverride = getPasswordDataSync
        self.getReservedInstancesExchangeQuoteAsyncOverride = getReservedInstancesExchangeQuoteAsync
        self.getReservedInstancesExchangeQuoteSyncOverride = getReservedInstancesExchangeQuoteSync
        self.getTransitGatewayAttachmentPropagationsAsyncOverride = getTransitGatewayAttachmentPropagationsAsync
        self.getTransitGatewayAttachmentPropagationsSyncOverride = getTransitGatewayAttachmentPropagationsSync
        self.getTransitGatewayMulticastDomainAssociationsAsyncOverride = getTransitGatewayMulticastDomainAssociationsAsync
        self.getTransitGatewayMulticastDomainAssociationsSyncOverride = getTransitGatewayMulticastDomainAssociationsSync
        self.getTransitGatewayRouteTableAssociationsAsyncOverride = getTransitGatewayRouteTableAssociationsAsync
        self.getTransitGatewayRouteTableAssociationsSyncOverride = getTransitGatewayRouteTableAssociationsSync
        self.getTransitGatewayRouteTablePropagationsAsyncOverride = getTransitGatewayRouteTablePropagationsAsync
        self.getTransitGatewayRouteTablePropagationsSyncOverride = getTransitGatewayRouteTablePropagationsSync
        self.importClientVpnClientCertificateRevocationListAsyncOverride = importClientVpnClientCertificateRevocationListAsync
        self.importClientVpnClientCertificateRevocationListSyncOverride = importClientVpnClientCertificateRevocationListSync
        self.importImageAsyncOverride = importImageAsync
        self.importImageSyncOverride = importImageSync
        self.importInstanceAsyncOverride = importInstanceAsync
        self.importInstanceSyncOverride = importInstanceSync
        self.importKeyPairAsyncOverride = importKeyPairAsync
        self.importKeyPairSyncOverride = importKeyPairSync
        self.importSnapshotAsyncOverride = importSnapshotAsync
        self.importSnapshotSyncOverride = importSnapshotSync
        self.importVolumeAsyncOverride = importVolumeAsync
        self.importVolumeSyncOverride = importVolumeSync
        self.modifyCapacityReservationAsyncOverride = modifyCapacityReservationAsync
        self.modifyCapacityReservationSyncOverride = modifyCapacityReservationSync
        self.modifyClientVpnEndpointAsyncOverride = modifyClientVpnEndpointAsync
        self.modifyClientVpnEndpointSyncOverride = modifyClientVpnEndpointSync
        self.modifyDefaultCreditSpecificationAsyncOverride = modifyDefaultCreditSpecificationAsync
        self.modifyDefaultCreditSpecificationSyncOverride = modifyDefaultCreditSpecificationSync
        self.modifyEbsDefaultKmsKeyIdAsyncOverride = modifyEbsDefaultKmsKeyIdAsync
        self.modifyEbsDefaultKmsKeyIdSyncOverride = modifyEbsDefaultKmsKeyIdSync
        self.modifyFleetAsyncOverride = modifyFleetAsync
        self.modifyFleetSyncOverride = modifyFleetSync
        self.modifyFpgaImageAttributeAsyncOverride = modifyFpgaImageAttributeAsync
        self.modifyFpgaImageAttributeSyncOverride = modifyFpgaImageAttributeSync
        self.modifyHostsAsyncOverride = modifyHostsAsync
        self.modifyHostsSyncOverride = modifyHostsSync
        self.modifyIdFormatAsyncOverride = modifyIdFormatAsync
        self.modifyIdFormatSyncOverride = modifyIdFormatSync
        self.modifyIdentityIdFormatAsyncOverride = modifyIdentityIdFormatAsync
        self.modifyIdentityIdFormatSyncOverride = modifyIdentityIdFormatSync
        self.modifyImageAttributeAsyncOverride = modifyImageAttributeAsync
        self.modifyImageAttributeSyncOverride = modifyImageAttributeSync
        self.modifyInstanceAttributeAsyncOverride = modifyInstanceAttributeAsync
        self.modifyInstanceAttributeSyncOverride = modifyInstanceAttributeSync
        self.modifyInstanceCapacityReservationAttributesAsyncOverride = modifyInstanceCapacityReservationAttributesAsync
        self.modifyInstanceCapacityReservationAttributesSyncOverride = modifyInstanceCapacityReservationAttributesSync
        self.modifyInstanceCreditSpecificationAsyncOverride = modifyInstanceCreditSpecificationAsync
        self.modifyInstanceCreditSpecificationSyncOverride = modifyInstanceCreditSpecificationSync
        self.modifyInstanceEventStartTimeAsyncOverride = modifyInstanceEventStartTimeAsync
        self.modifyInstanceEventStartTimeSyncOverride = modifyInstanceEventStartTimeSync
        self.modifyInstanceMetadataOptionsAsyncOverride = modifyInstanceMetadataOptionsAsync
        self.modifyInstanceMetadataOptionsSyncOverride = modifyInstanceMetadataOptionsSync
        self.modifyInstancePlacementAsyncOverride = modifyInstancePlacementAsync
        self.modifyInstancePlacementSyncOverride = modifyInstancePlacementSync
        self.modifyLaunchTemplateAsyncOverride = modifyLaunchTemplateAsync
        self.modifyLaunchTemplateSyncOverride = modifyLaunchTemplateSync
        self.modifyNetworkInterfaceAttributeAsyncOverride = modifyNetworkInterfaceAttributeAsync
        self.modifyNetworkInterfaceAttributeSyncOverride = modifyNetworkInterfaceAttributeSync
        self.modifyReservedInstancesAsyncOverride = modifyReservedInstancesAsync
        self.modifyReservedInstancesSyncOverride = modifyReservedInstancesSync
        self.modifySnapshotAttributeAsyncOverride = modifySnapshotAttributeAsync
        self.modifySnapshotAttributeSyncOverride = modifySnapshotAttributeSync
        self.modifySpotFleetRequestAsyncOverride = modifySpotFleetRequestAsync
        self.modifySpotFleetRequestSyncOverride = modifySpotFleetRequestSync
        self.modifySubnetAttributeAsyncOverride = modifySubnetAttributeAsync
        self.modifySubnetAttributeSyncOverride = modifySubnetAttributeSync
        self.modifyTrafficMirrorFilterNetworkServicesAsyncOverride = modifyTrafficMirrorFilterNetworkServicesAsync
        self.modifyTrafficMirrorFilterNetworkServicesSyncOverride = modifyTrafficMirrorFilterNetworkServicesSync
        self.modifyTrafficMirrorFilterRuleAsyncOverride = modifyTrafficMirrorFilterRuleAsync
        self.modifyTrafficMirrorFilterRuleSyncOverride = modifyTrafficMirrorFilterRuleSync
        self.modifyTrafficMirrorSessionAsyncOverride = modifyTrafficMirrorSessionAsync
        self.modifyTrafficMirrorSessionSyncOverride = modifyTrafficMirrorSessionSync
        self.modifyTransitGatewayVpcAttachmentAsyncOverride = modifyTransitGatewayVpcAttachmentAsync
        self.modifyTransitGatewayVpcAttachmentSyncOverride = modifyTransitGatewayVpcAttachmentSync
        self.modifyVolumeAsyncOverride = modifyVolumeAsync
        self.modifyVolumeSyncOverride = modifyVolumeSync
        self.modifyVolumeAttributeAsyncOverride = modifyVolumeAttributeAsync
        self.modifyVolumeAttributeSyncOverride = modifyVolumeAttributeSync
        self.modifyVpcAttributeAsyncOverride = modifyVpcAttributeAsync
        self.modifyVpcAttributeSyncOverride = modifyVpcAttributeSync
        self.modifyVpcEndpointAsyncOverride = modifyVpcEndpointAsync
        self.modifyVpcEndpointSyncOverride = modifyVpcEndpointSync
        self.modifyVpcEndpointConnectionNotificationAsyncOverride = modifyVpcEndpointConnectionNotificationAsync
        self.modifyVpcEndpointConnectionNotificationSyncOverride = modifyVpcEndpointConnectionNotificationSync
        self.modifyVpcEndpointServiceConfigurationAsyncOverride = modifyVpcEndpointServiceConfigurationAsync
        self.modifyVpcEndpointServiceConfigurationSyncOverride = modifyVpcEndpointServiceConfigurationSync
        self.modifyVpcEndpointServicePermissionsAsyncOverride = modifyVpcEndpointServicePermissionsAsync
        self.modifyVpcEndpointServicePermissionsSyncOverride = modifyVpcEndpointServicePermissionsSync
        self.modifyVpcPeeringConnectionOptionsAsyncOverride = modifyVpcPeeringConnectionOptionsAsync
        self.modifyVpcPeeringConnectionOptionsSyncOverride = modifyVpcPeeringConnectionOptionsSync
        self.modifyVpcTenancyAsyncOverride = modifyVpcTenancyAsync
        self.modifyVpcTenancySyncOverride = modifyVpcTenancySync
        self.modifyVpnConnectionAsyncOverride = modifyVpnConnectionAsync
        self.modifyVpnConnectionSyncOverride = modifyVpnConnectionSync
        self.modifyVpnTunnelCertificateAsyncOverride = modifyVpnTunnelCertificateAsync
        self.modifyVpnTunnelCertificateSyncOverride = modifyVpnTunnelCertificateSync
        self.modifyVpnTunnelOptionsAsyncOverride = modifyVpnTunnelOptionsAsync
        self.modifyVpnTunnelOptionsSyncOverride = modifyVpnTunnelOptionsSync
        self.monitorInstancesAsyncOverride = monitorInstancesAsync
        self.monitorInstancesSyncOverride = monitorInstancesSync
        self.moveAddressToVpcAsyncOverride = moveAddressToVpcAsync
        self.moveAddressToVpcSyncOverride = moveAddressToVpcSync
        self.provisionByoipCidrAsyncOverride = provisionByoipCidrAsync
        self.provisionByoipCidrSyncOverride = provisionByoipCidrSync
        self.purchaseHostReservationAsyncOverride = purchaseHostReservationAsync
        self.purchaseHostReservationSyncOverride = purchaseHostReservationSync
        self.purchaseReservedInstancesOfferingAsyncOverride = purchaseReservedInstancesOfferingAsync
        self.purchaseReservedInstancesOfferingSyncOverride = purchaseReservedInstancesOfferingSync
        self.purchaseScheduledInstancesAsyncOverride = purchaseScheduledInstancesAsync
        self.purchaseScheduledInstancesSyncOverride = purchaseScheduledInstancesSync
        self.rebootInstancesAsyncOverride = rebootInstancesAsync
        self.rebootInstancesSyncOverride = rebootInstancesSync
        self.registerImageAsyncOverride = registerImageAsync
        self.registerImageSyncOverride = registerImageSync
        self.registerTransitGatewayMulticastGroupMembersAsyncOverride = registerTransitGatewayMulticastGroupMembersAsync
        self.registerTransitGatewayMulticastGroupMembersSyncOverride = registerTransitGatewayMulticastGroupMembersSync
        self.registerTransitGatewayMulticastGroupSourcesAsyncOverride = registerTransitGatewayMulticastGroupSourcesAsync
        self.registerTransitGatewayMulticastGroupSourcesSyncOverride = registerTransitGatewayMulticastGroupSourcesSync
        self.rejectTransitGatewayPeeringAttachmentAsyncOverride = rejectTransitGatewayPeeringAttachmentAsync
        self.rejectTransitGatewayPeeringAttachmentSyncOverride = rejectTransitGatewayPeeringAttachmentSync
        self.rejectTransitGatewayVpcAttachmentAsyncOverride = rejectTransitGatewayVpcAttachmentAsync
        self.rejectTransitGatewayVpcAttachmentSyncOverride = rejectTransitGatewayVpcAttachmentSync
        self.rejectVpcEndpointConnectionsAsyncOverride = rejectVpcEndpointConnectionsAsync
        self.rejectVpcEndpointConnectionsSyncOverride = rejectVpcEndpointConnectionsSync
        self.rejectVpcPeeringConnectionAsyncOverride = rejectVpcPeeringConnectionAsync
        self.rejectVpcPeeringConnectionSyncOverride = rejectVpcPeeringConnectionSync
        self.releaseAddressAsyncOverride = releaseAddressAsync
        self.releaseAddressSyncOverride = releaseAddressSync
        self.releaseHostsAsyncOverride = releaseHostsAsync
        self.releaseHostsSyncOverride = releaseHostsSync
        self.replaceIamInstanceProfileAssociationAsyncOverride = replaceIamInstanceProfileAssociationAsync
        self.replaceIamInstanceProfileAssociationSyncOverride = replaceIamInstanceProfileAssociationSync
        self.replaceNetworkAclAssociationAsyncOverride = replaceNetworkAclAssociationAsync
        self.replaceNetworkAclAssociationSyncOverride = replaceNetworkAclAssociationSync
        self.replaceNetworkAclEntryAsyncOverride = replaceNetworkAclEntryAsync
        self.replaceNetworkAclEntrySyncOverride = replaceNetworkAclEntrySync
        self.replaceRouteAsyncOverride = replaceRouteAsync
        self.replaceRouteSyncOverride = replaceRouteSync
        self.replaceRouteTableAssociationAsyncOverride = replaceRouteTableAssociationAsync
        self.replaceRouteTableAssociationSyncOverride = replaceRouteTableAssociationSync
        self.replaceTransitGatewayRouteAsyncOverride = replaceTransitGatewayRouteAsync
        self.replaceTransitGatewayRouteSyncOverride = replaceTransitGatewayRouteSync
        self.reportInstanceStatusAsyncOverride = reportInstanceStatusAsync
        self.reportInstanceStatusSyncOverride = reportInstanceStatusSync
        self.requestSpotFleetAsyncOverride = requestSpotFleetAsync
        self.requestSpotFleetSyncOverride = requestSpotFleetSync
        self.requestSpotInstancesAsyncOverride = requestSpotInstancesAsync
        self.requestSpotInstancesSyncOverride = requestSpotInstancesSync
        self.resetEbsDefaultKmsKeyIdAsyncOverride = resetEbsDefaultKmsKeyIdAsync
        self.resetEbsDefaultKmsKeyIdSyncOverride = resetEbsDefaultKmsKeyIdSync
        self.resetFpgaImageAttributeAsyncOverride = resetFpgaImageAttributeAsync
        self.resetFpgaImageAttributeSyncOverride = resetFpgaImageAttributeSync
        self.resetImageAttributeAsyncOverride = resetImageAttributeAsync
        self.resetImageAttributeSyncOverride = resetImageAttributeSync
        self.resetInstanceAttributeAsyncOverride = resetInstanceAttributeAsync
        self.resetInstanceAttributeSyncOverride = resetInstanceAttributeSync
        self.resetNetworkInterfaceAttributeAsyncOverride = resetNetworkInterfaceAttributeAsync
        self.resetNetworkInterfaceAttributeSyncOverride = resetNetworkInterfaceAttributeSync
        self.resetSnapshotAttributeAsyncOverride = resetSnapshotAttributeAsync
        self.resetSnapshotAttributeSyncOverride = resetSnapshotAttributeSync
        self.restoreAddressToClassicAsyncOverride = restoreAddressToClassicAsync
        self.restoreAddressToClassicSyncOverride = restoreAddressToClassicSync
        self.revokeClientVpnIngressAsyncOverride = revokeClientVpnIngressAsync
        self.revokeClientVpnIngressSyncOverride = revokeClientVpnIngressSync
        self.revokeSecurityGroupEgressAsyncOverride = revokeSecurityGroupEgressAsync
        self.revokeSecurityGroupEgressSyncOverride = revokeSecurityGroupEgressSync
        self.revokeSecurityGroupIngressAsyncOverride = revokeSecurityGroupIngressAsync
        self.revokeSecurityGroupIngressSyncOverride = revokeSecurityGroupIngressSync
        self.runInstancesAsyncOverride = runInstancesAsync
        self.runInstancesSyncOverride = runInstancesSync
        self.runScheduledInstancesAsyncOverride = runScheduledInstancesAsync
        self.runScheduledInstancesSyncOverride = runScheduledInstancesSync
        self.searchLocalGatewayRoutesAsyncOverride = searchLocalGatewayRoutesAsync
        self.searchLocalGatewayRoutesSyncOverride = searchLocalGatewayRoutesSync
        self.searchTransitGatewayMulticastGroupsAsyncOverride = searchTransitGatewayMulticastGroupsAsync
        self.searchTransitGatewayMulticastGroupsSyncOverride = searchTransitGatewayMulticastGroupsSync
        self.searchTransitGatewayRoutesAsyncOverride = searchTransitGatewayRoutesAsync
        self.searchTransitGatewayRoutesSyncOverride = searchTransitGatewayRoutesSync
        self.sendDiagnosticInterruptAsyncOverride = sendDiagnosticInterruptAsync
        self.sendDiagnosticInterruptSyncOverride = sendDiagnosticInterruptSync
        self.startInstancesAsyncOverride = startInstancesAsync
        self.startInstancesSyncOverride = startInstancesSync
        self.startVpcEndpointServicePrivateDnsVerificationAsyncOverride = startVpcEndpointServicePrivateDnsVerificationAsync
        self.startVpcEndpointServicePrivateDnsVerificationSyncOverride = startVpcEndpointServicePrivateDnsVerificationSync
        self.stopInstancesAsyncOverride = stopInstancesAsync
        self.stopInstancesSyncOverride = stopInstancesSync
        self.terminateClientVpnConnectionsAsyncOverride = terminateClientVpnConnectionsAsync
        self.terminateClientVpnConnectionsSyncOverride = terminateClientVpnConnectionsSync
        self.terminateInstancesAsyncOverride = terminateInstancesAsync
        self.terminateInstancesSyncOverride = terminateInstancesSync
        self.unassignIpv6AddressesAsyncOverride = unassignIpv6AddressesAsync
        self.unassignIpv6AddressesSyncOverride = unassignIpv6AddressesSync
        self.unassignPrivateIpAddressesAsyncOverride = unassignPrivateIpAddressesAsync
        self.unassignPrivateIpAddressesSyncOverride = unassignPrivateIpAddressesSync
        self.unmonitorInstancesAsyncOverride = unmonitorInstancesAsync
        self.unmonitorInstancesSyncOverride = unmonitorInstancesSync
        self.updateSecurityGroupRuleDescriptionsEgressAsyncOverride = updateSecurityGroupRuleDescriptionsEgressAsync
        self.updateSecurityGroupRuleDescriptionsEgressSyncOverride = updateSecurityGroupRuleDescriptionsEgressSync
        self.updateSecurityGroupRuleDescriptionsIngressAsyncOverride = updateSecurityGroupRuleDescriptionsIngressAsync
        self.updateSecurityGroupRuleDescriptionsIngressSyncOverride = updateSecurityGroupRuleDescriptionsIngressSync
        self.withdrawByoipCidrAsyncOverride = withdrawByoipCidrAsync
        self.withdrawByoipCidrSyncOverride = withdrawByoipCidrSync
    }

    /**
     Invokes the AcceptReservedInstancesExchangeQuote operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AcceptReservedInstancesExchangeQuoteRequest object being passed to this operation.
         - completion: The AcceptReservedInstancesExchangeQuoteResult object or an error will be passed to this 
           callback when the operation is complete. The AcceptReservedInstancesExchangeQuoteResult
           object will be validated before being returned to caller.
     */
    public func acceptReservedInstancesExchangeQuoteAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AcceptReservedInstancesExchangeQuoteRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AcceptReservedInstancesExchangeQuoteResult, HTTPClientError>) -> ()) throws {
        if let acceptReservedInstancesExchangeQuoteAsyncOverrideNonOptional = acceptReservedInstancesExchangeQuoteAsyncOverride {
            if let acceptReservedInstancesExchangeQuoteAsyncOverrideTyped = acceptReservedInstancesExchangeQuoteAsyncOverrideNonOptional
                    as? AcceptReservedInstancesExchangeQuoteAsyncType<InvocationReportingType> {
                return try acceptReservedInstancesExchangeQuoteAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AcceptReservedInstancesExchangeQuoteResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AcceptReservedInstancesExchangeQuote operation waiting for the response before returning.

     - Parameters:
         - input: The validated AcceptReservedInstancesExchangeQuoteRequest object being passed to this operation.
     - Returns: The AcceptReservedInstancesExchangeQuoteResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func acceptReservedInstancesExchangeQuoteSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AcceptReservedInstancesExchangeQuoteRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AcceptReservedInstancesExchangeQuoteResult {
        if let acceptReservedInstancesExchangeQuoteSyncOverrideNonOptional = acceptReservedInstancesExchangeQuoteSyncOverride {
            if let acceptReservedInstancesExchangeQuoteSyncOverrideTyped = acceptReservedInstancesExchangeQuoteSyncOverrideNonOptional
                    as? AcceptReservedInstancesExchangeQuoteSyncType<InvocationReportingType> {
                return try acceptReservedInstancesExchangeQuoteSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AcceptReservedInstancesExchangeQuoteResult.__default
    }

    /**
     Invokes the AcceptTransitGatewayPeeringAttachment operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AcceptTransitGatewayPeeringAttachmentRequest object being passed to this operation.
         - completion: The AcceptTransitGatewayPeeringAttachmentResult object or an error will be passed to this 
           callback when the operation is complete. The AcceptTransitGatewayPeeringAttachmentResult
           object will be validated before being returned to caller.
     */
    public func acceptTransitGatewayPeeringAttachmentAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AcceptTransitGatewayPeeringAttachmentRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AcceptTransitGatewayPeeringAttachmentResult, HTTPClientError>) -> ()) throws {
        if let acceptTransitGatewayPeeringAttachmentAsyncOverrideNonOptional = acceptTransitGatewayPeeringAttachmentAsyncOverride {
            if let acceptTransitGatewayPeeringAttachmentAsyncOverrideTyped = acceptTransitGatewayPeeringAttachmentAsyncOverrideNonOptional
                    as? AcceptTransitGatewayPeeringAttachmentAsyncType<InvocationReportingType> {
                return try acceptTransitGatewayPeeringAttachmentAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AcceptTransitGatewayPeeringAttachmentResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AcceptTransitGatewayPeeringAttachment operation waiting for the response before returning.

     - Parameters:
         - input: The validated AcceptTransitGatewayPeeringAttachmentRequest object being passed to this operation.
     - Returns: The AcceptTransitGatewayPeeringAttachmentResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func acceptTransitGatewayPeeringAttachmentSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AcceptTransitGatewayPeeringAttachmentRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AcceptTransitGatewayPeeringAttachmentResult {
        if let acceptTransitGatewayPeeringAttachmentSyncOverrideNonOptional = acceptTransitGatewayPeeringAttachmentSyncOverride {
            if let acceptTransitGatewayPeeringAttachmentSyncOverrideTyped = acceptTransitGatewayPeeringAttachmentSyncOverrideNonOptional
                    as? AcceptTransitGatewayPeeringAttachmentSyncType<InvocationReportingType> {
                return try acceptTransitGatewayPeeringAttachmentSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AcceptTransitGatewayPeeringAttachmentResult.__default
    }

    /**
     Invokes the AcceptTransitGatewayVpcAttachment operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AcceptTransitGatewayVpcAttachmentRequest object being passed to this operation.
         - completion: The AcceptTransitGatewayVpcAttachmentResult object or an error will be passed to this 
           callback when the operation is complete. The AcceptTransitGatewayVpcAttachmentResult
           object will be validated before being returned to caller.
     */
    public func acceptTransitGatewayVpcAttachmentAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AcceptTransitGatewayVpcAttachmentRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AcceptTransitGatewayVpcAttachmentResult, HTTPClientError>) -> ()) throws {
        if let acceptTransitGatewayVpcAttachmentAsyncOverrideNonOptional = acceptTransitGatewayVpcAttachmentAsyncOverride {
            if let acceptTransitGatewayVpcAttachmentAsyncOverrideTyped = acceptTransitGatewayVpcAttachmentAsyncOverrideNonOptional
                    as? AcceptTransitGatewayVpcAttachmentAsyncType<InvocationReportingType> {
                return try acceptTransitGatewayVpcAttachmentAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AcceptTransitGatewayVpcAttachmentResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AcceptTransitGatewayVpcAttachment operation waiting for the response before returning.

     - Parameters:
         - input: The validated AcceptTransitGatewayVpcAttachmentRequest object being passed to this operation.
     - Returns: The AcceptTransitGatewayVpcAttachmentResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func acceptTransitGatewayVpcAttachmentSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AcceptTransitGatewayVpcAttachmentRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AcceptTransitGatewayVpcAttachmentResult {
        if let acceptTransitGatewayVpcAttachmentSyncOverrideNonOptional = acceptTransitGatewayVpcAttachmentSyncOverride {
            if let acceptTransitGatewayVpcAttachmentSyncOverrideTyped = acceptTransitGatewayVpcAttachmentSyncOverrideNonOptional
                    as? AcceptTransitGatewayVpcAttachmentSyncType<InvocationReportingType> {
                return try acceptTransitGatewayVpcAttachmentSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AcceptTransitGatewayVpcAttachmentResult.__default
    }

    /**
     Invokes the AcceptVpcEndpointConnections operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AcceptVpcEndpointConnectionsRequest object being passed to this operation.
         - completion: The AcceptVpcEndpointConnectionsResult object or an error will be passed to this 
           callback when the operation is complete. The AcceptVpcEndpointConnectionsResult
           object will be validated before being returned to caller.
     */
    public func acceptVpcEndpointConnectionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AcceptVpcEndpointConnectionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AcceptVpcEndpointConnectionsResult, HTTPClientError>) -> ()) throws {
        if let acceptVpcEndpointConnectionsAsyncOverrideNonOptional = acceptVpcEndpointConnectionsAsyncOverride {
            if let acceptVpcEndpointConnectionsAsyncOverrideTyped = acceptVpcEndpointConnectionsAsyncOverrideNonOptional
                    as? AcceptVpcEndpointConnectionsAsyncType<InvocationReportingType> {
                return try acceptVpcEndpointConnectionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AcceptVpcEndpointConnectionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AcceptVpcEndpointConnections operation waiting for the response before returning.

     - Parameters:
         - input: The validated AcceptVpcEndpointConnectionsRequest object being passed to this operation.
     - Returns: The AcceptVpcEndpointConnectionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func acceptVpcEndpointConnectionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AcceptVpcEndpointConnectionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AcceptVpcEndpointConnectionsResult {
        if let acceptVpcEndpointConnectionsSyncOverrideNonOptional = acceptVpcEndpointConnectionsSyncOverride {
            if let acceptVpcEndpointConnectionsSyncOverrideTyped = acceptVpcEndpointConnectionsSyncOverrideNonOptional
                    as? AcceptVpcEndpointConnectionsSyncType<InvocationReportingType> {
                return try acceptVpcEndpointConnectionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AcceptVpcEndpointConnectionsResult.__default
    }

    /**
     Invokes the AcceptVpcPeeringConnection operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AcceptVpcPeeringConnectionRequest object being passed to this operation.
         - completion: The AcceptVpcPeeringConnectionResult object or an error will be passed to this 
           callback when the operation is complete. The AcceptVpcPeeringConnectionResult
           object will be validated before being returned to caller.
     */
    public func acceptVpcPeeringConnectionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AcceptVpcPeeringConnectionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AcceptVpcPeeringConnectionResult, HTTPClientError>) -> ()) throws {
        if let acceptVpcPeeringConnectionAsyncOverrideNonOptional = acceptVpcPeeringConnectionAsyncOverride {
            if let acceptVpcPeeringConnectionAsyncOverrideTyped = acceptVpcPeeringConnectionAsyncOverrideNonOptional
                    as? AcceptVpcPeeringConnectionAsyncType<InvocationReportingType> {
                return try acceptVpcPeeringConnectionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AcceptVpcPeeringConnectionResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AcceptVpcPeeringConnection operation waiting for the response before returning.

     - Parameters:
         - input: The validated AcceptVpcPeeringConnectionRequest object being passed to this operation.
     - Returns: The AcceptVpcPeeringConnectionResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func acceptVpcPeeringConnectionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AcceptVpcPeeringConnectionRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AcceptVpcPeeringConnectionResult {
        if let acceptVpcPeeringConnectionSyncOverrideNonOptional = acceptVpcPeeringConnectionSyncOverride {
            if let acceptVpcPeeringConnectionSyncOverrideTyped = acceptVpcPeeringConnectionSyncOverrideNonOptional
                    as? AcceptVpcPeeringConnectionSyncType<InvocationReportingType> {
                return try acceptVpcPeeringConnectionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AcceptVpcPeeringConnectionResult.__default
    }

    /**
     Invokes the AdvertiseByoipCidr operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AdvertiseByoipCidrRequest object being passed to this operation.
         - completion: The AdvertiseByoipCidrResult object or an error will be passed to this 
           callback when the operation is complete. The AdvertiseByoipCidrResult
           object will be validated before being returned to caller.
     */
    public func advertiseByoipCidrAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AdvertiseByoipCidrRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AdvertiseByoipCidrResult, HTTPClientError>) -> ()) throws {
        if let advertiseByoipCidrAsyncOverrideNonOptional = advertiseByoipCidrAsyncOverride {
            if let advertiseByoipCidrAsyncOverrideTyped = advertiseByoipCidrAsyncOverrideNonOptional
                    as? AdvertiseByoipCidrAsyncType<InvocationReportingType> {
                return try advertiseByoipCidrAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AdvertiseByoipCidrResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AdvertiseByoipCidr operation waiting for the response before returning.

     - Parameters:
         - input: The validated AdvertiseByoipCidrRequest object being passed to this operation.
     - Returns: The AdvertiseByoipCidrResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func advertiseByoipCidrSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AdvertiseByoipCidrRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AdvertiseByoipCidrResult {
        if let advertiseByoipCidrSyncOverrideNonOptional = advertiseByoipCidrSyncOverride {
            if let advertiseByoipCidrSyncOverrideTyped = advertiseByoipCidrSyncOverrideNonOptional
                    as? AdvertiseByoipCidrSyncType<InvocationReportingType> {
                return try advertiseByoipCidrSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AdvertiseByoipCidrResult.__default
    }

    /**
     Invokes the AllocateAddress operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AllocateAddressRequest object being passed to this operation.
         - completion: The AllocateAddressResult object or an error will be passed to this 
           callback when the operation is complete. The AllocateAddressResult
           object will be validated before being returned to caller.
     */
    public func allocateAddressAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AllocateAddressRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AllocateAddressResult, HTTPClientError>) -> ()) throws {
        if let allocateAddressAsyncOverrideNonOptional = allocateAddressAsyncOverride {
            if let allocateAddressAsyncOverrideTyped = allocateAddressAsyncOverrideNonOptional
                    as? AllocateAddressAsyncType<InvocationReportingType> {
                return try allocateAddressAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AllocateAddressResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AllocateAddress operation waiting for the response before returning.

     - Parameters:
         - input: The validated AllocateAddressRequest object being passed to this operation.
     - Returns: The AllocateAddressResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func allocateAddressSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AllocateAddressRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AllocateAddressResult {
        if let allocateAddressSyncOverrideNonOptional = allocateAddressSyncOverride {
            if let allocateAddressSyncOverrideTyped = allocateAddressSyncOverrideNonOptional
                    as? AllocateAddressSyncType<InvocationReportingType> {
                return try allocateAddressSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AllocateAddressResult.__default
    }

    /**
     Invokes the AllocateHosts operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AllocateHostsRequest object being passed to this operation.
         - completion: The AllocateHostsResult object or an error will be passed to this 
           callback when the operation is complete. The AllocateHostsResult
           object will be validated before being returned to caller.
     */
    public func allocateHostsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AllocateHostsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AllocateHostsResult, HTTPClientError>) -> ()) throws {
        if let allocateHostsAsyncOverrideNonOptional = allocateHostsAsyncOverride {
            if let allocateHostsAsyncOverrideTyped = allocateHostsAsyncOverrideNonOptional
                    as? AllocateHostsAsyncType<InvocationReportingType> {
                return try allocateHostsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AllocateHostsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AllocateHosts operation waiting for the response before returning.

     - Parameters:
         - input: The validated AllocateHostsRequest object being passed to this operation.
     - Returns: The AllocateHostsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func allocateHostsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AllocateHostsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AllocateHostsResult {
        if let allocateHostsSyncOverrideNonOptional = allocateHostsSyncOverride {
            if let allocateHostsSyncOverrideTyped = allocateHostsSyncOverrideNonOptional
                    as? AllocateHostsSyncType<InvocationReportingType> {
                return try allocateHostsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AllocateHostsResult.__default
    }

    /**
     Invokes the ApplySecurityGroupsToClientVpnTargetNetwork operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ApplySecurityGroupsToClientVpnTargetNetworkRequest object being passed to this operation.
         - completion: The ApplySecurityGroupsToClientVpnTargetNetworkResult object or an error will be passed to this 
           callback when the operation is complete. The ApplySecurityGroupsToClientVpnTargetNetworkResult
           object will be validated before being returned to caller.
     */
    public func applySecurityGroupsToClientVpnTargetNetworkAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ApplySecurityGroupsToClientVpnTargetNetworkRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ApplySecurityGroupsToClientVpnTargetNetworkResult, HTTPClientError>) -> ()) throws {
        if let applySecurityGroupsToClientVpnTargetNetworkAsyncOverrideNonOptional = applySecurityGroupsToClientVpnTargetNetworkAsyncOverride {
            if let applySecurityGroupsToClientVpnTargetNetworkAsyncOverrideTyped = applySecurityGroupsToClientVpnTargetNetworkAsyncOverrideNonOptional
                    as? ApplySecurityGroupsToClientVpnTargetNetworkAsyncType<InvocationReportingType> {
                return try applySecurityGroupsToClientVpnTargetNetworkAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ApplySecurityGroupsToClientVpnTargetNetworkResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ApplySecurityGroupsToClientVpnTargetNetwork operation waiting for the response before returning.

     - Parameters:
         - input: The validated ApplySecurityGroupsToClientVpnTargetNetworkRequest object being passed to this operation.
     - Returns: The ApplySecurityGroupsToClientVpnTargetNetworkResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func applySecurityGroupsToClientVpnTargetNetworkSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ApplySecurityGroupsToClientVpnTargetNetworkRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ApplySecurityGroupsToClientVpnTargetNetworkResult {
        if let applySecurityGroupsToClientVpnTargetNetworkSyncOverrideNonOptional = applySecurityGroupsToClientVpnTargetNetworkSyncOverride {
            if let applySecurityGroupsToClientVpnTargetNetworkSyncOverrideTyped = applySecurityGroupsToClientVpnTargetNetworkSyncOverrideNonOptional
                    as? ApplySecurityGroupsToClientVpnTargetNetworkSyncType<InvocationReportingType> {
                return try applySecurityGroupsToClientVpnTargetNetworkSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ApplySecurityGroupsToClientVpnTargetNetworkResult.__default
    }

    /**
     Invokes the AssignIpv6Addresses operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AssignIpv6AddressesRequest object being passed to this operation.
         - completion: The AssignIpv6AddressesResult object or an error will be passed to this 
           callback when the operation is complete. The AssignIpv6AddressesResult
           object will be validated before being returned to caller.
     */
    public func assignIpv6AddressesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssignIpv6AddressesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AssignIpv6AddressesResult, HTTPClientError>) -> ()) throws {
        if let assignIpv6AddressesAsyncOverrideNonOptional = assignIpv6AddressesAsyncOverride {
            if let assignIpv6AddressesAsyncOverrideTyped = assignIpv6AddressesAsyncOverrideNonOptional
                    as? AssignIpv6AddressesAsyncType<InvocationReportingType> {
                return try assignIpv6AddressesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AssignIpv6AddressesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AssignIpv6Addresses operation waiting for the response before returning.

     - Parameters:
         - input: The validated AssignIpv6AddressesRequest object being passed to this operation.
     - Returns: The AssignIpv6AddressesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func assignIpv6AddressesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssignIpv6AddressesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AssignIpv6AddressesResult {
        if let assignIpv6AddressesSyncOverrideNonOptional = assignIpv6AddressesSyncOverride {
            if let assignIpv6AddressesSyncOverrideTyped = assignIpv6AddressesSyncOverrideNonOptional
                    as? AssignIpv6AddressesSyncType<InvocationReportingType> {
                return try assignIpv6AddressesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AssignIpv6AddressesResult.__default
    }

    /**
     Invokes the AssignPrivateIpAddresses operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AssignPrivateIpAddressesRequest object being passed to this operation.
         - completion: The AssignPrivateIpAddressesResult object or an error will be passed to this 
           callback when the operation is complete. The AssignPrivateIpAddressesResult
           object will be validated before being returned to caller.
     */
    public func assignPrivateIpAddressesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssignPrivateIpAddressesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AssignPrivateIpAddressesResult, HTTPClientError>) -> ()) throws {
        if let assignPrivateIpAddressesAsyncOverrideNonOptional = assignPrivateIpAddressesAsyncOverride {
            if let assignPrivateIpAddressesAsyncOverrideTyped = assignPrivateIpAddressesAsyncOverrideNonOptional
                    as? AssignPrivateIpAddressesAsyncType<InvocationReportingType> {
                return try assignPrivateIpAddressesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AssignPrivateIpAddressesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AssignPrivateIpAddresses operation waiting for the response before returning.

     - Parameters:
         - input: The validated AssignPrivateIpAddressesRequest object being passed to this operation.
     - Returns: The AssignPrivateIpAddressesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func assignPrivateIpAddressesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssignPrivateIpAddressesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AssignPrivateIpAddressesResult {
        if let assignPrivateIpAddressesSyncOverrideNonOptional = assignPrivateIpAddressesSyncOverride {
            if let assignPrivateIpAddressesSyncOverrideTyped = assignPrivateIpAddressesSyncOverrideNonOptional
                    as? AssignPrivateIpAddressesSyncType<InvocationReportingType> {
                return try assignPrivateIpAddressesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AssignPrivateIpAddressesResult.__default
    }

    /**
     Invokes the AssociateAddress operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AssociateAddressRequest object being passed to this operation.
         - completion: The AssociateAddressResult object or an error will be passed to this 
           callback when the operation is complete. The AssociateAddressResult
           object will be validated before being returned to caller.
     */
    public func associateAddressAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateAddressRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AssociateAddressResult, HTTPClientError>) -> ()) throws {
        if let associateAddressAsyncOverrideNonOptional = associateAddressAsyncOverride {
            if let associateAddressAsyncOverrideTyped = associateAddressAsyncOverrideNonOptional
                    as? AssociateAddressAsyncType<InvocationReportingType> {
                return try associateAddressAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AssociateAddressResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AssociateAddress operation waiting for the response before returning.

     - Parameters:
         - input: The validated AssociateAddressRequest object being passed to this operation.
     - Returns: The AssociateAddressResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func associateAddressSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateAddressRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AssociateAddressResult {
        if let associateAddressSyncOverrideNonOptional = associateAddressSyncOverride {
            if let associateAddressSyncOverrideTyped = associateAddressSyncOverrideNonOptional
                    as? AssociateAddressSyncType<InvocationReportingType> {
                return try associateAddressSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AssociateAddressResult.__default
    }

    /**
     Invokes the AssociateClientVpnTargetNetwork operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AssociateClientVpnTargetNetworkRequest object being passed to this operation.
         - completion: The AssociateClientVpnTargetNetworkResult object or an error will be passed to this 
           callback when the operation is complete. The AssociateClientVpnTargetNetworkResult
           object will be validated before being returned to caller.
     */
    public func associateClientVpnTargetNetworkAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateClientVpnTargetNetworkRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AssociateClientVpnTargetNetworkResult, HTTPClientError>) -> ()) throws {
        if let associateClientVpnTargetNetworkAsyncOverrideNonOptional = associateClientVpnTargetNetworkAsyncOverride {
            if let associateClientVpnTargetNetworkAsyncOverrideTyped = associateClientVpnTargetNetworkAsyncOverrideNonOptional
                    as? AssociateClientVpnTargetNetworkAsyncType<InvocationReportingType> {
                return try associateClientVpnTargetNetworkAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AssociateClientVpnTargetNetworkResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AssociateClientVpnTargetNetwork operation waiting for the response before returning.

     - Parameters:
         - input: The validated AssociateClientVpnTargetNetworkRequest object being passed to this operation.
     - Returns: The AssociateClientVpnTargetNetworkResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func associateClientVpnTargetNetworkSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateClientVpnTargetNetworkRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AssociateClientVpnTargetNetworkResult {
        if let associateClientVpnTargetNetworkSyncOverrideNonOptional = associateClientVpnTargetNetworkSyncOverride {
            if let associateClientVpnTargetNetworkSyncOverrideTyped = associateClientVpnTargetNetworkSyncOverrideNonOptional
                    as? AssociateClientVpnTargetNetworkSyncType<InvocationReportingType> {
                return try associateClientVpnTargetNetworkSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AssociateClientVpnTargetNetworkResult.__default
    }

    /**
     Invokes the AssociateDhcpOptions operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AssociateDhcpOptionsRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func associateDhcpOptionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateDhcpOptionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let associateDhcpOptionsAsyncOverrideNonOptional = associateDhcpOptionsAsyncOverride {
            if let associateDhcpOptionsAsyncOverrideTyped = associateDhcpOptionsAsyncOverrideNonOptional
                    as? AssociateDhcpOptionsAsyncType<InvocationReportingType> {
                return try associateDhcpOptionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the AssociateDhcpOptions operation waiting for the response before returning.

     - Parameters:
         - input: The validated AssociateDhcpOptionsRequest object being passed to this operation.
     */
    public func associateDhcpOptionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateDhcpOptionsRequest,
            reporting: InvocationReportingType) throws {
        if let associateDhcpOptionsSyncOverrideNonOptional = associateDhcpOptionsSyncOverride {
            if let associateDhcpOptionsSyncOverrideTyped = associateDhcpOptionsSyncOverrideNonOptional
                    as? AssociateDhcpOptionsSyncType<InvocationReportingType> {
                return try associateDhcpOptionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the AssociateIamInstanceProfile operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AssociateIamInstanceProfileRequest object being passed to this operation.
         - completion: The AssociateIamInstanceProfileResult object or an error will be passed to this 
           callback when the operation is complete. The AssociateIamInstanceProfileResult
           object will be validated before being returned to caller.
     */
    public func associateIamInstanceProfileAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateIamInstanceProfileRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AssociateIamInstanceProfileResult, HTTPClientError>) -> ()) throws {
        if let associateIamInstanceProfileAsyncOverrideNonOptional = associateIamInstanceProfileAsyncOverride {
            if let associateIamInstanceProfileAsyncOverrideTyped = associateIamInstanceProfileAsyncOverrideNonOptional
                    as? AssociateIamInstanceProfileAsyncType<InvocationReportingType> {
                return try associateIamInstanceProfileAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AssociateIamInstanceProfileResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AssociateIamInstanceProfile operation waiting for the response before returning.

     - Parameters:
         - input: The validated AssociateIamInstanceProfileRequest object being passed to this operation.
     - Returns: The AssociateIamInstanceProfileResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func associateIamInstanceProfileSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateIamInstanceProfileRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AssociateIamInstanceProfileResult {
        if let associateIamInstanceProfileSyncOverrideNonOptional = associateIamInstanceProfileSyncOverride {
            if let associateIamInstanceProfileSyncOverrideTyped = associateIamInstanceProfileSyncOverrideNonOptional
                    as? AssociateIamInstanceProfileSyncType<InvocationReportingType> {
                return try associateIamInstanceProfileSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AssociateIamInstanceProfileResult.__default
    }

    /**
     Invokes the AssociateRouteTable operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AssociateRouteTableRequest object being passed to this operation.
         - completion: The AssociateRouteTableResult object or an error will be passed to this 
           callback when the operation is complete. The AssociateRouteTableResult
           object will be validated before being returned to caller.
     */
    public func associateRouteTableAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateRouteTableRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AssociateRouteTableResult, HTTPClientError>) -> ()) throws {
        if let associateRouteTableAsyncOverrideNonOptional = associateRouteTableAsyncOverride {
            if let associateRouteTableAsyncOverrideTyped = associateRouteTableAsyncOverrideNonOptional
                    as? AssociateRouteTableAsyncType<InvocationReportingType> {
                return try associateRouteTableAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AssociateRouteTableResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AssociateRouteTable operation waiting for the response before returning.

     - Parameters:
         - input: The validated AssociateRouteTableRequest object being passed to this operation.
     - Returns: The AssociateRouteTableResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func associateRouteTableSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateRouteTableRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AssociateRouteTableResult {
        if let associateRouteTableSyncOverrideNonOptional = associateRouteTableSyncOverride {
            if let associateRouteTableSyncOverrideTyped = associateRouteTableSyncOverrideNonOptional
                    as? AssociateRouteTableSyncType<InvocationReportingType> {
                return try associateRouteTableSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AssociateRouteTableResult.__default
    }

    /**
     Invokes the AssociateSubnetCidrBlock operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AssociateSubnetCidrBlockRequest object being passed to this operation.
         - completion: The AssociateSubnetCidrBlockResult object or an error will be passed to this 
           callback when the operation is complete. The AssociateSubnetCidrBlockResult
           object will be validated before being returned to caller.
     */
    public func associateSubnetCidrBlockAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateSubnetCidrBlockRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AssociateSubnetCidrBlockResult, HTTPClientError>) -> ()) throws {
        if let associateSubnetCidrBlockAsyncOverrideNonOptional = associateSubnetCidrBlockAsyncOverride {
            if let associateSubnetCidrBlockAsyncOverrideTyped = associateSubnetCidrBlockAsyncOverrideNonOptional
                    as? AssociateSubnetCidrBlockAsyncType<InvocationReportingType> {
                return try associateSubnetCidrBlockAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AssociateSubnetCidrBlockResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AssociateSubnetCidrBlock operation waiting for the response before returning.

     - Parameters:
         - input: The validated AssociateSubnetCidrBlockRequest object being passed to this operation.
     - Returns: The AssociateSubnetCidrBlockResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func associateSubnetCidrBlockSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateSubnetCidrBlockRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AssociateSubnetCidrBlockResult {
        if let associateSubnetCidrBlockSyncOverrideNonOptional = associateSubnetCidrBlockSyncOverride {
            if let associateSubnetCidrBlockSyncOverrideTyped = associateSubnetCidrBlockSyncOverrideNonOptional
                    as? AssociateSubnetCidrBlockSyncType<InvocationReportingType> {
                return try associateSubnetCidrBlockSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AssociateSubnetCidrBlockResult.__default
    }

    /**
     Invokes the AssociateTransitGatewayMulticastDomain operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AssociateTransitGatewayMulticastDomainRequest object being passed to this operation.
         - completion: The AssociateTransitGatewayMulticastDomainResult object or an error will be passed to this 
           callback when the operation is complete. The AssociateTransitGatewayMulticastDomainResult
           object will be validated before being returned to caller.
     */
    public func associateTransitGatewayMulticastDomainAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateTransitGatewayMulticastDomainRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AssociateTransitGatewayMulticastDomainResult, HTTPClientError>) -> ()) throws {
        if let associateTransitGatewayMulticastDomainAsyncOverrideNonOptional = associateTransitGatewayMulticastDomainAsyncOverride {
            if let associateTransitGatewayMulticastDomainAsyncOverrideTyped = associateTransitGatewayMulticastDomainAsyncOverrideNonOptional
                    as? AssociateTransitGatewayMulticastDomainAsyncType<InvocationReportingType> {
                return try associateTransitGatewayMulticastDomainAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AssociateTransitGatewayMulticastDomainResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AssociateTransitGatewayMulticastDomain operation waiting for the response before returning.

     - Parameters:
         - input: The validated AssociateTransitGatewayMulticastDomainRequest object being passed to this operation.
     - Returns: The AssociateTransitGatewayMulticastDomainResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func associateTransitGatewayMulticastDomainSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateTransitGatewayMulticastDomainRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AssociateTransitGatewayMulticastDomainResult {
        if let associateTransitGatewayMulticastDomainSyncOverrideNonOptional = associateTransitGatewayMulticastDomainSyncOverride {
            if let associateTransitGatewayMulticastDomainSyncOverrideTyped = associateTransitGatewayMulticastDomainSyncOverrideNonOptional
                    as? AssociateTransitGatewayMulticastDomainSyncType<InvocationReportingType> {
                return try associateTransitGatewayMulticastDomainSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AssociateTransitGatewayMulticastDomainResult.__default
    }

    /**
     Invokes the AssociateTransitGatewayRouteTable operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AssociateTransitGatewayRouteTableRequest object being passed to this operation.
         - completion: The AssociateTransitGatewayRouteTableResult object or an error will be passed to this 
           callback when the operation is complete. The AssociateTransitGatewayRouteTableResult
           object will be validated before being returned to caller.
     */
    public func associateTransitGatewayRouteTableAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateTransitGatewayRouteTableRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AssociateTransitGatewayRouteTableResult, HTTPClientError>) -> ()) throws {
        if let associateTransitGatewayRouteTableAsyncOverrideNonOptional = associateTransitGatewayRouteTableAsyncOverride {
            if let associateTransitGatewayRouteTableAsyncOverrideTyped = associateTransitGatewayRouteTableAsyncOverrideNonOptional
                    as? AssociateTransitGatewayRouteTableAsyncType<InvocationReportingType> {
                return try associateTransitGatewayRouteTableAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AssociateTransitGatewayRouteTableResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AssociateTransitGatewayRouteTable operation waiting for the response before returning.

     - Parameters:
         - input: The validated AssociateTransitGatewayRouteTableRequest object being passed to this operation.
     - Returns: The AssociateTransitGatewayRouteTableResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func associateTransitGatewayRouteTableSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateTransitGatewayRouteTableRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AssociateTransitGatewayRouteTableResult {
        if let associateTransitGatewayRouteTableSyncOverrideNonOptional = associateTransitGatewayRouteTableSyncOverride {
            if let associateTransitGatewayRouteTableSyncOverrideTyped = associateTransitGatewayRouteTableSyncOverrideNonOptional
                    as? AssociateTransitGatewayRouteTableSyncType<InvocationReportingType> {
                return try associateTransitGatewayRouteTableSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AssociateTransitGatewayRouteTableResult.__default
    }

    /**
     Invokes the AssociateVpcCidrBlock operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AssociateVpcCidrBlockRequest object being passed to this operation.
         - completion: The AssociateVpcCidrBlockResult object or an error will be passed to this 
           callback when the operation is complete. The AssociateVpcCidrBlockResult
           object will be validated before being returned to caller.
     */
    public func associateVpcCidrBlockAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateVpcCidrBlockRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AssociateVpcCidrBlockResult, HTTPClientError>) -> ()) throws {
        if let associateVpcCidrBlockAsyncOverrideNonOptional = associateVpcCidrBlockAsyncOverride {
            if let associateVpcCidrBlockAsyncOverrideTyped = associateVpcCidrBlockAsyncOverrideNonOptional
                    as? AssociateVpcCidrBlockAsyncType<InvocationReportingType> {
                return try associateVpcCidrBlockAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AssociateVpcCidrBlockResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AssociateVpcCidrBlock operation waiting for the response before returning.

     - Parameters:
         - input: The validated AssociateVpcCidrBlockRequest object being passed to this operation.
     - Returns: The AssociateVpcCidrBlockResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func associateVpcCidrBlockSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AssociateVpcCidrBlockRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AssociateVpcCidrBlockResult {
        if let associateVpcCidrBlockSyncOverrideNonOptional = associateVpcCidrBlockSyncOverride {
            if let associateVpcCidrBlockSyncOverrideTyped = associateVpcCidrBlockSyncOverrideNonOptional
                    as? AssociateVpcCidrBlockSyncType<InvocationReportingType> {
                return try associateVpcCidrBlockSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AssociateVpcCidrBlockResult.__default
    }

    /**
     Invokes the AttachClassicLinkVpc operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AttachClassicLinkVpcRequest object being passed to this operation.
         - completion: The AttachClassicLinkVpcResult object or an error will be passed to this 
           callback when the operation is complete. The AttachClassicLinkVpcResult
           object will be validated before being returned to caller.
     */
    public func attachClassicLinkVpcAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AttachClassicLinkVpcRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AttachClassicLinkVpcResult, HTTPClientError>) -> ()) throws {
        if let attachClassicLinkVpcAsyncOverrideNonOptional = attachClassicLinkVpcAsyncOverride {
            if let attachClassicLinkVpcAsyncOverrideTyped = attachClassicLinkVpcAsyncOverrideNonOptional
                    as? AttachClassicLinkVpcAsyncType<InvocationReportingType> {
                return try attachClassicLinkVpcAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AttachClassicLinkVpcResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AttachClassicLinkVpc operation waiting for the response before returning.

     - Parameters:
         - input: The validated AttachClassicLinkVpcRequest object being passed to this operation.
     - Returns: The AttachClassicLinkVpcResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func attachClassicLinkVpcSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AttachClassicLinkVpcRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AttachClassicLinkVpcResult {
        if let attachClassicLinkVpcSyncOverrideNonOptional = attachClassicLinkVpcSyncOverride {
            if let attachClassicLinkVpcSyncOverrideTyped = attachClassicLinkVpcSyncOverrideNonOptional
                    as? AttachClassicLinkVpcSyncType<InvocationReportingType> {
                return try attachClassicLinkVpcSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AttachClassicLinkVpcResult.__default
    }

    /**
     Invokes the AttachInternetGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AttachInternetGatewayRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func attachInternetGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AttachInternetGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let attachInternetGatewayAsyncOverrideNonOptional = attachInternetGatewayAsyncOverride {
            if let attachInternetGatewayAsyncOverrideTyped = attachInternetGatewayAsyncOverrideNonOptional
                    as? AttachInternetGatewayAsyncType<InvocationReportingType> {
                return try attachInternetGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the AttachInternetGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated AttachInternetGatewayRequest object being passed to this operation.
     */
    public func attachInternetGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AttachInternetGatewayRequest,
            reporting: InvocationReportingType) throws {
        if let attachInternetGatewaySyncOverrideNonOptional = attachInternetGatewaySyncOverride {
            if let attachInternetGatewaySyncOverrideTyped = attachInternetGatewaySyncOverrideNonOptional
                    as? AttachInternetGatewaySyncType<InvocationReportingType> {
                return try attachInternetGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the AttachNetworkInterface operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AttachNetworkInterfaceRequest object being passed to this operation.
         - completion: The AttachNetworkInterfaceResult object or an error will be passed to this 
           callback when the operation is complete. The AttachNetworkInterfaceResult
           object will be validated before being returned to caller.
     */
    public func attachNetworkInterfaceAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AttachNetworkInterfaceRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AttachNetworkInterfaceResult, HTTPClientError>) -> ()) throws {
        if let attachNetworkInterfaceAsyncOverrideNonOptional = attachNetworkInterfaceAsyncOverride {
            if let attachNetworkInterfaceAsyncOverrideTyped = attachNetworkInterfaceAsyncOverrideNonOptional
                    as? AttachNetworkInterfaceAsyncType<InvocationReportingType> {
                return try attachNetworkInterfaceAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AttachNetworkInterfaceResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AttachNetworkInterface operation waiting for the response before returning.

     - Parameters:
         - input: The validated AttachNetworkInterfaceRequest object being passed to this operation.
     - Returns: The AttachNetworkInterfaceResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func attachNetworkInterfaceSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AttachNetworkInterfaceRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AttachNetworkInterfaceResult {
        if let attachNetworkInterfaceSyncOverrideNonOptional = attachNetworkInterfaceSyncOverride {
            if let attachNetworkInterfaceSyncOverrideTyped = attachNetworkInterfaceSyncOverrideNonOptional
                    as? AttachNetworkInterfaceSyncType<InvocationReportingType> {
                return try attachNetworkInterfaceSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AttachNetworkInterfaceResult.__default
    }

    /**
     Invokes the AttachVolume operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AttachVolumeRequest object being passed to this operation.
         - completion: The VolumeAttachment object or an error will be passed to this 
           callback when the operation is complete. The VolumeAttachment
           object will be validated before being returned to caller.
     */
    public func attachVolumeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AttachVolumeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.VolumeAttachment, HTTPClientError>) -> ()) throws {
        if let attachVolumeAsyncOverrideNonOptional = attachVolumeAsyncOverride {
            if let attachVolumeAsyncOverrideTyped = attachVolumeAsyncOverrideNonOptional
                    as? AttachVolumeAsyncType<InvocationReportingType> {
                return try attachVolumeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = VolumeAttachment.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AttachVolume operation waiting for the response before returning.

     - Parameters:
         - input: The validated AttachVolumeRequest object being passed to this operation.
     - Returns: The VolumeAttachment object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func attachVolumeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AttachVolumeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.VolumeAttachment {
        if let attachVolumeSyncOverrideNonOptional = attachVolumeSyncOverride {
            if let attachVolumeSyncOverrideTyped = attachVolumeSyncOverrideNonOptional
                    as? AttachVolumeSyncType<InvocationReportingType> {
                return try attachVolumeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return VolumeAttachment.__default
    }

    /**
     Invokes the AttachVpnGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AttachVpnGatewayRequest object being passed to this operation.
         - completion: The AttachVpnGatewayResult object or an error will be passed to this 
           callback when the operation is complete. The AttachVpnGatewayResult
           object will be validated before being returned to caller.
     */
    public func attachVpnGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AttachVpnGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AttachVpnGatewayResult, HTTPClientError>) -> ()) throws {
        if let attachVpnGatewayAsyncOverrideNonOptional = attachVpnGatewayAsyncOverride {
            if let attachVpnGatewayAsyncOverrideTyped = attachVpnGatewayAsyncOverrideNonOptional
                    as? AttachVpnGatewayAsyncType<InvocationReportingType> {
                return try attachVpnGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AttachVpnGatewayResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AttachVpnGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated AttachVpnGatewayRequest object being passed to this operation.
     - Returns: The AttachVpnGatewayResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func attachVpnGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AttachVpnGatewayRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AttachVpnGatewayResult {
        if let attachVpnGatewaySyncOverrideNonOptional = attachVpnGatewaySyncOverride {
            if let attachVpnGatewaySyncOverrideTyped = attachVpnGatewaySyncOverrideNonOptional
                    as? AttachVpnGatewaySyncType<InvocationReportingType> {
                return try attachVpnGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AttachVpnGatewayResult.__default
    }

    /**
     Invokes the AuthorizeClientVpnIngress operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AuthorizeClientVpnIngressRequest object being passed to this operation.
         - completion: The AuthorizeClientVpnIngressResult object or an error will be passed to this 
           callback when the operation is complete. The AuthorizeClientVpnIngressResult
           object will be validated before being returned to caller.
     */
    public func authorizeClientVpnIngressAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AuthorizeClientVpnIngressRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.AuthorizeClientVpnIngressResult, HTTPClientError>) -> ()) throws {
        if let authorizeClientVpnIngressAsyncOverrideNonOptional = authorizeClientVpnIngressAsyncOverride {
            if let authorizeClientVpnIngressAsyncOverrideTyped = authorizeClientVpnIngressAsyncOverrideNonOptional
                    as? AuthorizeClientVpnIngressAsyncType<InvocationReportingType> {
                return try authorizeClientVpnIngressAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = AuthorizeClientVpnIngressResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the AuthorizeClientVpnIngress operation waiting for the response before returning.

     - Parameters:
         - input: The validated AuthorizeClientVpnIngressRequest object being passed to this operation.
     - Returns: The AuthorizeClientVpnIngressResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func authorizeClientVpnIngressSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AuthorizeClientVpnIngressRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.AuthorizeClientVpnIngressResult {
        if let authorizeClientVpnIngressSyncOverrideNonOptional = authorizeClientVpnIngressSyncOverride {
            if let authorizeClientVpnIngressSyncOverrideTyped = authorizeClientVpnIngressSyncOverrideNonOptional
                    as? AuthorizeClientVpnIngressSyncType<InvocationReportingType> {
                return try authorizeClientVpnIngressSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return AuthorizeClientVpnIngressResult.__default
    }

    /**
     Invokes the AuthorizeSecurityGroupEgress operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AuthorizeSecurityGroupEgressRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func authorizeSecurityGroupEgressAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AuthorizeSecurityGroupEgressRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let authorizeSecurityGroupEgressAsyncOverrideNonOptional = authorizeSecurityGroupEgressAsyncOverride {
            if let authorizeSecurityGroupEgressAsyncOverrideTyped = authorizeSecurityGroupEgressAsyncOverrideNonOptional
                    as? AuthorizeSecurityGroupEgressAsyncType<InvocationReportingType> {
                return try authorizeSecurityGroupEgressAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the AuthorizeSecurityGroupEgress operation waiting for the response before returning.

     - Parameters:
         - input: The validated AuthorizeSecurityGroupEgressRequest object being passed to this operation.
     */
    public func authorizeSecurityGroupEgressSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AuthorizeSecurityGroupEgressRequest,
            reporting: InvocationReportingType) throws {
        if let authorizeSecurityGroupEgressSyncOverrideNonOptional = authorizeSecurityGroupEgressSyncOverride {
            if let authorizeSecurityGroupEgressSyncOverrideTyped = authorizeSecurityGroupEgressSyncOverrideNonOptional
                    as? AuthorizeSecurityGroupEgressSyncType<InvocationReportingType> {
                return try authorizeSecurityGroupEgressSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the AuthorizeSecurityGroupIngress operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated AuthorizeSecurityGroupIngressRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func authorizeSecurityGroupIngressAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AuthorizeSecurityGroupIngressRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let authorizeSecurityGroupIngressAsyncOverrideNonOptional = authorizeSecurityGroupIngressAsyncOverride {
            if let authorizeSecurityGroupIngressAsyncOverrideTyped = authorizeSecurityGroupIngressAsyncOverrideNonOptional
                    as? AuthorizeSecurityGroupIngressAsyncType<InvocationReportingType> {
                return try authorizeSecurityGroupIngressAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the AuthorizeSecurityGroupIngress operation waiting for the response before returning.

     - Parameters:
         - input: The validated AuthorizeSecurityGroupIngressRequest object being passed to this operation.
     */
    public func authorizeSecurityGroupIngressSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.AuthorizeSecurityGroupIngressRequest,
            reporting: InvocationReportingType) throws {
        if let authorizeSecurityGroupIngressSyncOverrideNonOptional = authorizeSecurityGroupIngressSyncOverride {
            if let authorizeSecurityGroupIngressSyncOverrideTyped = authorizeSecurityGroupIngressSyncOverrideNonOptional
                    as? AuthorizeSecurityGroupIngressSyncType<InvocationReportingType> {
                return try authorizeSecurityGroupIngressSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the BundleInstance operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated BundleInstanceRequest object being passed to this operation.
         - completion: The BundleInstanceResult object or an error will be passed to this 
           callback when the operation is complete. The BundleInstanceResult
           object will be validated before being returned to caller.
     */
    public func bundleInstanceAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.BundleInstanceRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.BundleInstanceResult, HTTPClientError>) -> ()) throws {
        if let bundleInstanceAsyncOverrideNonOptional = bundleInstanceAsyncOverride {
            if let bundleInstanceAsyncOverrideTyped = bundleInstanceAsyncOverrideNonOptional
                    as? BundleInstanceAsyncType<InvocationReportingType> {
                return try bundleInstanceAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = BundleInstanceResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the BundleInstance operation waiting for the response before returning.

     - Parameters:
         - input: The validated BundleInstanceRequest object being passed to this operation.
     - Returns: The BundleInstanceResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func bundleInstanceSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.BundleInstanceRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.BundleInstanceResult {
        if let bundleInstanceSyncOverrideNonOptional = bundleInstanceSyncOverride {
            if let bundleInstanceSyncOverrideTyped = bundleInstanceSyncOverrideNonOptional
                    as? BundleInstanceSyncType<InvocationReportingType> {
                return try bundleInstanceSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return BundleInstanceResult.__default
    }

    /**
     Invokes the CancelBundleTask operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CancelBundleTaskRequest object being passed to this operation.
         - completion: The CancelBundleTaskResult object or an error will be passed to this 
           callback when the operation is complete. The CancelBundleTaskResult
           object will be validated before being returned to caller.
     */
    public func cancelBundleTaskAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelBundleTaskRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CancelBundleTaskResult, HTTPClientError>) -> ()) throws {
        if let cancelBundleTaskAsyncOverrideNonOptional = cancelBundleTaskAsyncOverride {
            if let cancelBundleTaskAsyncOverrideTyped = cancelBundleTaskAsyncOverrideNonOptional
                    as? CancelBundleTaskAsyncType<InvocationReportingType> {
                return try cancelBundleTaskAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CancelBundleTaskResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CancelBundleTask operation waiting for the response before returning.

     - Parameters:
         - input: The validated CancelBundleTaskRequest object being passed to this operation.
     - Returns: The CancelBundleTaskResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func cancelBundleTaskSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelBundleTaskRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CancelBundleTaskResult {
        if let cancelBundleTaskSyncOverrideNonOptional = cancelBundleTaskSyncOverride {
            if let cancelBundleTaskSyncOverrideTyped = cancelBundleTaskSyncOverrideNonOptional
                    as? CancelBundleTaskSyncType<InvocationReportingType> {
                return try cancelBundleTaskSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CancelBundleTaskResult.__default
    }

    /**
     Invokes the CancelCapacityReservation operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CancelCapacityReservationRequest object being passed to this operation.
         - completion: The CancelCapacityReservationResult object or an error will be passed to this 
           callback when the operation is complete. The CancelCapacityReservationResult
           object will be validated before being returned to caller.
     */
    public func cancelCapacityReservationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelCapacityReservationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CancelCapacityReservationResult, HTTPClientError>) -> ()) throws {
        if let cancelCapacityReservationAsyncOverrideNonOptional = cancelCapacityReservationAsyncOverride {
            if let cancelCapacityReservationAsyncOverrideTyped = cancelCapacityReservationAsyncOverrideNonOptional
                    as? CancelCapacityReservationAsyncType<InvocationReportingType> {
                return try cancelCapacityReservationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CancelCapacityReservationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CancelCapacityReservation operation waiting for the response before returning.

     - Parameters:
         - input: The validated CancelCapacityReservationRequest object being passed to this operation.
     - Returns: The CancelCapacityReservationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func cancelCapacityReservationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelCapacityReservationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CancelCapacityReservationResult {
        if let cancelCapacityReservationSyncOverrideNonOptional = cancelCapacityReservationSyncOverride {
            if let cancelCapacityReservationSyncOverrideTyped = cancelCapacityReservationSyncOverrideNonOptional
                    as? CancelCapacityReservationSyncType<InvocationReportingType> {
                return try cancelCapacityReservationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CancelCapacityReservationResult.__default
    }

    /**
     Invokes the CancelConversionTask operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CancelConversionRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func cancelConversionTaskAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelConversionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let cancelConversionTaskAsyncOverrideNonOptional = cancelConversionTaskAsyncOverride {
            if let cancelConversionTaskAsyncOverrideTyped = cancelConversionTaskAsyncOverrideNonOptional
                    as? CancelConversionTaskAsyncType<InvocationReportingType> {
                return try cancelConversionTaskAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the CancelConversionTask operation waiting for the response before returning.

     - Parameters:
         - input: The validated CancelConversionRequest object being passed to this operation.
     */
    public func cancelConversionTaskSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelConversionRequest,
            reporting: InvocationReportingType) throws {
        if let cancelConversionTaskSyncOverrideNonOptional = cancelConversionTaskSyncOverride {
            if let cancelConversionTaskSyncOverrideTyped = cancelConversionTaskSyncOverrideNonOptional
                    as? CancelConversionTaskSyncType<InvocationReportingType> {
                return try cancelConversionTaskSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the CancelExportTask operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CancelExportTaskRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func cancelExportTaskAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelExportTaskRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let cancelExportTaskAsyncOverrideNonOptional = cancelExportTaskAsyncOverride {
            if let cancelExportTaskAsyncOverrideTyped = cancelExportTaskAsyncOverrideNonOptional
                    as? CancelExportTaskAsyncType<InvocationReportingType> {
                return try cancelExportTaskAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the CancelExportTask operation waiting for the response before returning.

     - Parameters:
         - input: The validated CancelExportTaskRequest object being passed to this operation.
     */
    public func cancelExportTaskSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelExportTaskRequest,
            reporting: InvocationReportingType) throws {
        if let cancelExportTaskSyncOverrideNonOptional = cancelExportTaskSyncOverride {
            if let cancelExportTaskSyncOverrideTyped = cancelExportTaskSyncOverrideNonOptional
                    as? CancelExportTaskSyncType<InvocationReportingType> {
                return try cancelExportTaskSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the CancelImportTask operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CancelImportTaskRequest object being passed to this operation.
         - completion: The CancelImportTaskResult object or an error will be passed to this 
           callback when the operation is complete. The CancelImportTaskResult
           object will be validated before being returned to caller.
     */
    public func cancelImportTaskAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelImportTaskRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CancelImportTaskResult, HTTPClientError>) -> ()) throws {
        if let cancelImportTaskAsyncOverrideNonOptional = cancelImportTaskAsyncOverride {
            if let cancelImportTaskAsyncOverrideTyped = cancelImportTaskAsyncOverrideNonOptional
                    as? CancelImportTaskAsyncType<InvocationReportingType> {
                return try cancelImportTaskAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CancelImportTaskResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CancelImportTask operation waiting for the response before returning.

     - Parameters:
         - input: The validated CancelImportTaskRequest object being passed to this operation.
     - Returns: The CancelImportTaskResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func cancelImportTaskSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelImportTaskRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CancelImportTaskResult {
        if let cancelImportTaskSyncOverrideNonOptional = cancelImportTaskSyncOverride {
            if let cancelImportTaskSyncOverrideTyped = cancelImportTaskSyncOverrideNonOptional
                    as? CancelImportTaskSyncType<InvocationReportingType> {
                return try cancelImportTaskSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CancelImportTaskResult.__default
    }

    /**
     Invokes the CancelReservedInstancesListing operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CancelReservedInstancesListingRequest object being passed to this operation.
         - completion: The CancelReservedInstancesListingResult object or an error will be passed to this 
           callback when the operation is complete. The CancelReservedInstancesListingResult
           object will be validated before being returned to caller.
     */
    public func cancelReservedInstancesListingAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelReservedInstancesListingRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CancelReservedInstancesListingResult, HTTPClientError>) -> ()) throws {
        if let cancelReservedInstancesListingAsyncOverrideNonOptional = cancelReservedInstancesListingAsyncOverride {
            if let cancelReservedInstancesListingAsyncOverrideTyped = cancelReservedInstancesListingAsyncOverrideNonOptional
                    as? CancelReservedInstancesListingAsyncType<InvocationReportingType> {
                return try cancelReservedInstancesListingAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CancelReservedInstancesListingResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CancelReservedInstancesListing operation waiting for the response before returning.

     - Parameters:
         - input: The validated CancelReservedInstancesListingRequest object being passed to this operation.
     - Returns: The CancelReservedInstancesListingResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func cancelReservedInstancesListingSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelReservedInstancesListingRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CancelReservedInstancesListingResult {
        if let cancelReservedInstancesListingSyncOverrideNonOptional = cancelReservedInstancesListingSyncOverride {
            if let cancelReservedInstancesListingSyncOverrideTyped = cancelReservedInstancesListingSyncOverrideNonOptional
                    as? CancelReservedInstancesListingSyncType<InvocationReportingType> {
                return try cancelReservedInstancesListingSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CancelReservedInstancesListingResult.__default
    }

    /**
     Invokes the CancelSpotFleetRequests operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CancelSpotFleetRequestsRequest object being passed to this operation.
         - completion: The CancelSpotFleetRequestsResponse object or an error will be passed to this 
           callback when the operation is complete. The CancelSpotFleetRequestsResponse
           object will be validated before being returned to caller.
     */
    public func cancelSpotFleetRequestsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelSpotFleetRequestsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CancelSpotFleetRequestsResponse, HTTPClientError>) -> ()) throws {
        if let cancelSpotFleetRequestsAsyncOverrideNonOptional = cancelSpotFleetRequestsAsyncOverride {
            if let cancelSpotFleetRequestsAsyncOverrideTyped = cancelSpotFleetRequestsAsyncOverrideNonOptional
                    as? CancelSpotFleetRequestsAsyncType<InvocationReportingType> {
                return try cancelSpotFleetRequestsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CancelSpotFleetRequestsResponse.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CancelSpotFleetRequests operation waiting for the response before returning.

     - Parameters:
         - input: The validated CancelSpotFleetRequestsRequest object being passed to this operation.
     - Returns: The CancelSpotFleetRequestsResponse object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func cancelSpotFleetRequestsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelSpotFleetRequestsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CancelSpotFleetRequestsResponse {
        if let cancelSpotFleetRequestsSyncOverrideNonOptional = cancelSpotFleetRequestsSyncOverride {
            if let cancelSpotFleetRequestsSyncOverrideTyped = cancelSpotFleetRequestsSyncOverrideNonOptional
                    as? CancelSpotFleetRequestsSyncType<InvocationReportingType> {
                return try cancelSpotFleetRequestsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CancelSpotFleetRequestsResponse.__default
    }

    /**
     Invokes the CancelSpotInstanceRequests operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CancelSpotInstanceRequestsRequest object being passed to this operation.
         - completion: The CancelSpotInstanceRequestsResult object or an error will be passed to this 
           callback when the operation is complete. The CancelSpotInstanceRequestsResult
           object will be validated before being returned to caller.
     */
    public func cancelSpotInstanceRequestsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelSpotInstanceRequestsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CancelSpotInstanceRequestsResult, HTTPClientError>) -> ()) throws {
        if let cancelSpotInstanceRequestsAsyncOverrideNonOptional = cancelSpotInstanceRequestsAsyncOverride {
            if let cancelSpotInstanceRequestsAsyncOverrideTyped = cancelSpotInstanceRequestsAsyncOverrideNonOptional
                    as? CancelSpotInstanceRequestsAsyncType<InvocationReportingType> {
                return try cancelSpotInstanceRequestsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CancelSpotInstanceRequestsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CancelSpotInstanceRequests operation waiting for the response before returning.

     - Parameters:
         - input: The validated CancelSpotInstanceRequestsRequest object being passed to this operation.
     - Returns: The CancelSpotInstanceRequestsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func cancelSpotInstanceRequestsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CancelSpotInstanceRequestsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CancelSpotInstanceRequestsResult {
        if let cancelSpotInstanceRequestsSyncOverrideNonOptional = cancelSpotInstanceRequestsSyncOverride {
            if let cancelSpotInstanceRequestsSyncOverrideTyped = cancelSpotInstanceRequestsSyncOverrideNonOptional
                    as? CancelSpotInstanceRequestsSyncType<InvocationReportingType> {
                return try cancelSpotInstanceRequestsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CancelSpotInstanceRequestsResult.__default
    }

    /**
     Invokes the ConfirmProductInstance operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ConfirmProductInstanceRequest object being passed to this operation.
         - completion: The ConfirmProductInstanceResult object or an error will be passed to this 
           callback when the operation is complete. The ConfirmProductInstanceResult
           object will be validated before being returned to caller.
     */
    public func confirmProductInstanceAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ConfirmProductInstanceRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ConfirmProductInstanceResult, HTTPClientError>) -> ()) throws {
        if let confirmProductInstanceAsyncOverrideNonOptional = confirmProductInstanceAsyncOverride {
            if let confirmProductInstanceAsyncOverrideTyped = confirmProductInstanceAsyncOverrideNonOptional
                    as? ConfirmProductInstanceAsyncType<InvocationReportingType> {
                return try confirmProductInstanceAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ConfirmProductInstanceResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ConfirmProductInstance operation waiting for the response before returning.

     - Parameters:
         - input: The validated ConfirmProductInstanceRequest object being passed to this operation.
     - Returns: The ConfirmProductInstanceResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func confirmProductInstanceSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ConfirmProductInstanceRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ConfirmProductInstanceResult {
        if let confirmProductInstanceSyncOverrideNonOptional = confirmProductInstanceSyncOverride {
            if let confirmProductInstanceSyncOverrideTyped = confirmProductInstanceSyncOverrideNonOptional
                    as? ConfirmProductInstanceSyncType<InvocationReportingType> {
                return try confirmProductInstanceSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ConfirmProductInstanceResult.__default
    }

    /**
     Invokes the CopyFpgaImage operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CopyFpgaImageRequest object being passed to this operation.
         - completion: The CopyFpgaImageResult object or an error will be passed to this 
           callback when the operation is complete. The CopyFpgaImageResult
           object will be validated before being returned to caller.
     */
    public func copyFpgaImageAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CopyFpgaImageRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CopyFpgaImageResult, HTTPClientError>) -> ()) throws {
        if let copyFpgaImageAsyncOverrideNonOptional = copyFpgaImageAsyncOverride {
            if let copyFpgaImageAsyncOverrideTyped = copyFpgaImageAsyncOverrideNonOptional
                    as? CopyFpgaImageAsyncType<InvocationReportingType> {
                return try copyFpgaImageAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CopyFpgaImageResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CopyFpgaImage operation waiting for the response before returning.

     - Parameters:
         - input: The validated CopyFpgaImageRequest object being passed to this operation.
     - Returns: The CopyFpgaImageResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func copyFpgaImageSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CopyFpgaImageRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CopyFpgaImageResult {
        if let copyFpgaImageSyncOverrideNonOptional = copyFpgaImageSyncOverride {
            if let copyFpgaImageSyncOverrideTyped = copyFpgaImageSyncOverrideNonOptional
                    as? CopyFpgaImageSyncType<InvocationReportingType> {
                return try copyFpgaImageSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CopyFpgaImageResult.__default
    }

    /**
     Invokes the CopyImage operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CopyImageRequest object being passed to this operation.
         - completion: The CopyImageResult object or an error will be passed to this 
           callback when the operation is complete. The CopyImageResult
           object will be validated before being returned to caller.
     */
    public func copyImageAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CopyImageRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CopyImageResult, HTTPClientError>) -> ()) throws {
        if let copyImageAsyncOverrideNonOptional = copyImageAsyncOverride {
            if let copyImageAsyncOverrideTyped = copyImageAsyncOverrideNonOptional
                    as? CopyImageAsyncType<InvocationReportingType> {
                return try copyImageAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CopyImageResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CopyImage operation waiting for the response before returning.

     - Parameters:
         - input: The validated CopyImageRequest object being passed to this operation.
     - Returns: The CopyImageResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func copyImageSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CopyImageRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CopyImageResult {
        if let copyImageSyncOverrideNonOptional = copyImageSyncOverride {
            if let copyImageSyncOverrideTyped = copyImageSyncOverrideNonOptional
                    as? CopyImageSyncType<InvocationReportingType> {
                return try copyImageSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CopyImageResult.__default
    }

    /**
     Invokes the CopySnapshot operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CopySnapshotRequest object being passed to this operation.
         - completion: The CopySnapshotResult object or an error will be passed to this 
           callback when the operation is complete. The CopySnapshotResult
           object will be validated before being returned to caller.
     */
    public func copySnapshotAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CopySnapshotRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CopySnapshotResult, HTTPClientError>) -> ()) throws {
        if let copySnapshotAsyncOverrideNonOptional = copySnapshotAsyncOverride {
            if let copySnapshotAsyncOverrideTyped = copySnapshotAsyncOverrideNonOptional
                    as? CopySnapshotAsyncType<InvocationReportingType> {
                return try copySnapshotAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CopySnapshotResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CopySnapshot operation waiting for the response before returning.

     - Parameters:
         - input: The validated CopySnapshotRequest object being passed to this operation.
     - Returns: The CopySnapshotResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func copySnapshotSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CopySnapshotRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CopySnapshotResult {
        if let copySnapshotSyncOverrideNonOptional = copySnapshotSyncOverride {
            if let copySnapshotSyncOverrideTyped = copySnapshotSyncOverrideNonOptional
                    as? CopySnapshotSyncType<InvocationReportingType> {
                return try copySnapshotSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CopySnapshotResult.__default
    }

    /**
     Invokes the CreateCapacityReservation operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateCapacityReservationRequest object being passed to this operation.
         - completion: The CreateCapacityReservationResult object or an error will be passed to this 
           callback when the operation is complete. The CreateCapacityReservationResult
           object will be validated before being returned to caller.
     */
    public func createCapacityReservationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateCapacityReservationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateCapacityReservationResult, HTTPClientError>) -> ()) throws {
        if let createCapacityReservationAsyncOverrideNonOptional = createCapacityReservationAsyncOverride {
            if let createCapacityReservationAsyncOverrideTyped = createCapacityReservationAsyncOverrideNonOptional
                    as? CreateCapacityReservationAsyncType<InvocationReportingType> {
                return try createCapacityReservationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateCapacityReservationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateCapacityReservation operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateCapacityReservationRequest object being passed to this operation.
     - Returns: The CreateCapacityReservationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createCapacityReservationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateCapacityReservationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateCapacityReservationResult {
        if let createCapacityReservationSyncOverrideNonOptional = createCapacityReservationSyncOverride {
            if let createCapacityReservationSyncOverrideTyped = createCapacityReservationSyncOverrideNonOptional
                    as? CreateCapacityReservationSyncType<InvocationReportingType> {
                return try createCapacityReservationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateCapacityReservationResult.__default
    }

    /**
     Invokes the CreateClientVpnEndpoint operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateClientVpnEndpointRequest object being passed to this operation.
         - completion: The CreateClientVpnEndpointResult object or an error will be passed to this 
           callback when the operation is complete. The CreateClientVpnEndpointResult
           object will be validated before being returned to caller.
     */
    public func createClientVpnEndpointAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateClientVpnEndpointRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateClientVpnEndpointResult, HTTPClientError>) -> ()) throws {
        if let createClientVpnEndpointAsyncOverrideNonOptional = createClientVpnEndpointAsyncOverride {
            if let createClientVpnEndpointAsyncOverrideTyped = createClientVpnEndpointAsyncOverrideNonOptional
                    as? CreateClientVpnEndpointAsyncType<InvocationReportingType> {
                return try createClientVpnEndpointAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateClientVpnEndpointResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateClientVpnEndpoint operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateClientVpnEndpointRequest object being passed to this operation.
     - Returns: The CreateClientVpnEndpointResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createClientVpnEndpointSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateClientVpnEndpointRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateClientVpnEndpointResult {
        if let createClientVpnEndpointSyncOverrideNonOptional = createClientVpnEndpointSyncOverride {
            if let createClientVpnEndpointSyncOverrideTyped = createClientVpnEndpointSyncOverrideNonOptional
                    as? CreateClientVpnEndpointSyncType<InvocationReportingType> {
                return try createClientVpnEndpointSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateClientVpnEndpointResult.__default
    }

    /**
     Invokes the CreateClientVpnRoute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateClientVpnRouteRequest object being passed to this operation.
         - completion: The CreateClientVpnRouteResult object or an error will be passed to this 
           callback when the operation is complete. The CreateClientVpnRouteResult
           object will be validated before being returned to caller.
     */
    public func createClientVpnRouteAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateClientVpnRouteRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateClientVpnRouteResult, HTTPClientError>) -> ()) throws {
        if let createClientVpnRouteAsyncOverrideNonOptional = createClientVpnRouteAsyncOverride {
            if let createClientVpnRouteAsyncOverrideTyped = createClientVpnRouteAsyncOverrideNonOptional
                    as? CreateClientVpnRouteAsyncType<InvocationReportingType> {
                return try createClientVpnRouteAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateClientVpnRouteResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateClientVpnRoute operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateClientVpnRouteRequest object being passed to this operation.
     - Returns: The CreateClientVpnRouteResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createClientVpnRouteSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateClientVpnRouteRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateClientVpnRouteResult {
        if let createClientVpnRouteSyncOverrideNonOptional = createClientVpnRouteSyncOverride {
            if let createClientVpnRouteSyncOverrideTyped = createClientVpnRouteSyncOverrideNonOptional
                    as? CreateClientVpnRouteSyncType<InvocationReportingType> {
                return try createClientVpnRouteSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateClientVpnRouteResult.__default
    }

    /**
     Invokes the CreateCustomerGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateCustomerGatewayRequest object being passed to this operation.
         - completion: The CreateCustomerGatewayResult object or an error will be passed to this 
           callback when the operation is complete. The CreateCustomerGatewayResult
           object will be validated before being returned to caller.
     */
    public func createCustomerGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateCustomerGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateCustomerGatewayResult, HTTPClientError>) -> ()) throws {
        if let createCustomerGatewayAsyncOverrideNonOptional = createCustomerGatewayAsyncOverride {
            if let createCustomerGatewayAsyncOverrideTyped = createCustomerGatewayAsyncOverrideNonOptional
                    as? CreateCustomerGatewayAsyncType<InvocationReportingType> {
                return try createCustomerGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateCustomerGatewayResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateCustomerGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateCustomerGatewayRequest object being passed to this operation.
     - Returns: The CreateCustomerGatewayResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createCustomerGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateCustomerGatewayRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateCustomerGatewayResult {
        if let createCustomerGatewaySyncOverrideNonOptional = createCustomerGatewaySyncOverride {
            if let createCustomerGatewaySyncOverrideTyped = createCustomerGatewaySyncOverrideNonOptional
                    as? CreateCustomerGatewaySyncType<InvocationReportingType> {
                return try createCustomerGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateCustomerGatewayResult.__default
    }

    /**
     Invokes the CreateDefaultSubnet operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateDefaultSubnetRequest object being passed to this operation.
         - completion: The CreateDefaultSubnetResult object or an error will be passed to this 
           callback when the operation is complete. The CreateDefaultSubnetResult
           object will be validated before being returned to caller.
     */
    public func createDefaultSubnetAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateDefaultSubnetRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateDefaultSubnetResult, HTTPClientError>) -> ()) throws {
        if let createDefaultSubnetAsyncOverrideNonOptional = createDefaultSubnetAsyncOverride {
            if let createDefaultSubnetAsyncOverrideTyped = createDefaultSubnetAsyncOverrideNonOptional
                    as? CreateDefaultSubnetAsyncType<InvocationReportingType> {
                return try createDefaultSubnetAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateDefaultSubnetResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateDefaultSubnet operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateDefaultSubnetRequest object being passed to this operation.
     - Returns: The CreateDefaultSubnetResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createDefaultSubnetSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateDefaultSubnetRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateDefaultSubnetResult {
        if let createDefaultSubnetSyncOverrideNonOptional = createDefaultSubnetSyncOverride {
            if let createDefaultSubnetSyncOverrideTyped = createDefaultSubnetSyncOverrideNonOptional
                    as? CreateDefaultSubnetSyncType<InvocationReportingType> {
                return try createDefaultSubnetSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateDefaultSubnetResult.__default
    }

    /**
     Invokes the CreateDefaultVpc operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateDefaultVpcRequest object being passed to this operation.
         - completion: The CreateDefaultVpcResult object or an error will be passed to this 
           callback when the operation is complete. The CreateDefaultVpcResult
           object will be validated before being returned to caller.
     */
    public func createDefaultVpcAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateDefaultVpcRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateDefaultVpcResult, HTTPClientError>) -> ()) throws {
        if let createDefaultVpcAsyncOverrideNonOptional = createDefaultVpcAsyncOverride {
            if let createDefaultVpcAsyncOverrideTyped = createDefaultVpcAsyncOverrideNonOptional
                    as? CreateDefaultVpcAsyncType<InvocationReportingType> {
                return try createDefaultVpcAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateDefaultVpcResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateDefaultVpc operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateDefaultVpcRequest object being passed to this operation.
     - Returns: The CreateDefaultVpcResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createDefaultVpcSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateDefaultVpcRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateDefaultVpcResult {
        if let createDefaultVpcSyncOverrideNonOptional = createDefaultVpcSyncOverride {
            if let createDefaultVpcSyncOverrideTyped = createDefaultVpcSyncOverrideNonOptional
                    as? CreateDefaultVpcSyncType<InvocationReportingType> {
                return try createDefaultVpcSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateDefaultVpcResult.__default
    }

    /**
     Invokes the CreateDhcpOptions operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateDhcpOptionsRequest object being passed to this operation.
         - completion: The CreateDhcpOptionsResult object or an error will be passed to this 
           callback when the operation is complete. The CreateDhcpOptionsResult
           object will be validated before being returned to caller.
     */
    public func createDhcpOptionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateDhcpOptionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateDhcpOptionsResult, HTTPClientError>) -> ()) throws {
        if let createDhcpOptionsAsyncOverrideNonOptional = createDhcpOptionsAsyncOverride {
            if let createDhcpOptionsAsyncOverrideTyped = createDhcpOptionsAsyncOverrideNonOptional
                    as? CreateDhcpOptionsAsyncType<InvocationReportingType> {
                return try createDhcpOptionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateDhcpOptionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateDhcpOptions operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateDhcpOptionsRequest object being passed to this operation.
     - Returns: The CreateDhcpOptionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createDhcpOptionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateDhcpOptionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateDhcpOptionsResult {
        if let createDhcpOptionsSyncOverrideNonOptional = createDhcpOptionsSyncOverride {
            if let createDhcpOptionsSyncOverrideTyped = createDhcpOptionsSyncOverrideNonOptional
                    as? CreateDhcpOptionsSyncType<InvocationReportingType> {
                return try createDhcpOptionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateDhcpOptionsResult.__default
    }

    /**
     Invokes the CreateEgressOnlyInternetGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateEgressOnlyInternetGatewayRequest object being passed to this operation.
         - completion: The CreateEgressOnlyInternetGatewayResult object or an error will be passed to this 
           callback when the operation is complete. The CreateEgressOnlyInternetGatewayResult
           object will be validated before being returned to caller.
     */
    public func createEgressOnlyInternetGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateEgressOnlyInternetGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateEgressOnlyInternetGatewayResult, HTTPClientError>) -> ()) throws {
        if let createEgressOnlyInternetGatewayAsyncOverrideNonOptional = createEgressOnlyInternetGatewayAsyncOverride {
            if let createEgressOnlyInternetGatewayAsyncOverrideTyped = createEgressOnlyInternetGatewayAsyncOverrideNonOptional
                    as? CreateEgressOnlyInternetGatewayAsyncType<InvocationReportingType> {
                return try createEgressOnlyInternetGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateEgressOnlyInternetGatewayResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateEgressOnlyInternetGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateEgressOnlyInternetGatewayRequest object being passed to this operation.
     - Returns: The CreateEgressOnlyInternetGatewayResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createEgressOnlyInternetGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateEgressOnlyInternetGatewayRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateEgressOnlyInternetGatewayResult {
        if let createEgressOnlyInternetGatewaySyncOverrideNonOptional = createEgressOnlyInternetGatewaySyncOverride {
            if let createEgressOnlyInternetGatewaySyncOverrideTyped = createEgressOnlyInternetGatewaySyncOverrideNonOptional
                    as? CreateEgressOnlyInternetGatewaySyncType<InvocationReportingType> {
                return try createEgressOnlyInternetGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateEgressOnlyInternetGatewayResult.__default
    }

    /**
     Invokes the CreateFleet operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateFleetRequest object being passed to this operation.
         - completion: The CreateFleetResult object or an error will be passed to this 
           callback when the operation is complete. The CreateFleetResult
           object will be validated before being returned to caller.
     */
    public func createFleetAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateFleetRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateFleetResult, HTTPClientError>) -> ()) throws {
        if let createFleetAsyncOverrideNonOptional = createFleetAsyncOverride {
            if let createFleetAsyncOverrideTyped = createFleetAsyncOverrideNonOptional
                    as? CreateFleetAsyncType<InvocationReportingType> {
                return try createFleetAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateFleetResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateFleet operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateFleetRequest object being passed to this operation.
     - Returns: The CreateFleetResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createFleetSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateFleetRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateFleetResult {
        if let createFleetSyncOverrideNonOptional = createFleetSyncOverride {
            if let createFleetSyncOverrideTyped = createFleetSyncOverrideNonOptional
                    as? CreateFleetSyncType<InvocationReportingType> {
                return try createFleetSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateFleetResult.__default
    }

    /**
     Invokes the CreateFlowLogs operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateFlowLogsRequest object being passed to this operation.
         - completion: The CreateFlowLogsResult object or an error will be passed to this 
           callback when the operation is complete. The CreateFlowLogsResult
           object will be validated before being returned to caller.
     */
    public func createFlowLogsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateFlowLogsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateFlowLogsResult, HTTPClientError>) -> ()) throws {
        if let createFlowLogsAsyncOverrideNonOptional = createFlowLogsAsyncOverride {
            if let createFlowLogsAsyncOverrideTyped = createFlowLogsAsyncOverrideNonOptional
                    as? CreateFlowLogsAsyncType<InvocationReportingType> {
                return try createFlowLogsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateFlowLogsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateFlowLogs operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateFlowLogsRequest object being passed to this operation.
     - Returns: The CreateFlowLogsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createFlowLogsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateFlowLogsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateFlowLogsResult {
        if let createFlowLogsSyncOverrideNonOptional = createFlowLogsSyncOverride {
            if let createFlowLogsSyncOverrideTyped = createFlowLogsSyncOverrideNonOptional
                    as? CreateFlowLogsSyncType<InvocationReportingType> {
                return try createFlowLogsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateFlowLogsResult.__default
    }

    /**
     Invokes the CreateFpgaImage operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateFpgaImageRequest object being passed to this operation.
         - completion: The CreateFpgaImageResult object or an error will be passed to this 
           callback when the operation is complete. The CreateFpgaImageResult
           object will be validated before being returned to caller.
     */
    public func createFpgaImageAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateFpgaImageRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateFpgaImageResult, HTTPClientError>) -> ()) throws {
        if let createFpgaImageAsyncOverrideNonOptional = createFpgaImageAsyncOverride {
            if let createFpgaImageAsyncOverrideTyped = createFpgaImageAsyncOverrideNonOptional
                    as? CreateFpgaImageAsyncType<InvocationReportingType> {
                return try createFpgaImageAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateFpgaImageResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateFpgaImage operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateFpgaImageRequest object being passed to this operation.
     - Returns: The CreateFpgaImageResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createFpgaImageSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateFpgaImageRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateFpgaImageResult {
        if let createFpgaImageSyncOverrideNonOptional = createFpgaImageSyncOverride {
            if let createFpgaImageSyncOverrideTyped = createFpgaImageSyncOverrideNonOptional
                    as? CreateFpgaImageSyncType<InvocationReportingType> {
                return try createFpgaImageSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateFpgaImageResult.__default
    }

    /**
     Invokes the CreateImage operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateImageRequest object being passed to this operation.
         - completion: The CreateImageResult object or an error will be passed to this 
           callback when the operation is complete. The CreateImageResult
           object will be validated before being returned to caller.
     */
    public func createImageAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateImageRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateImageResult, HTTPClientError>) -> ()) throws {
        if let createImageAsyncOverrideNonOptional = createImageAsyncOverride {
            if let createImageAsyncOverrideTyped = createImageAsyncOverrideNonOptional
                    as? CreateImageAsyncType<InvocationReportingType> {
                return try createImageAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateImageResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateImage operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateImageRequest object being passed to this operation.
     - Returns: The CreateImageResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createImageSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateImageRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateImageResult {
        if let createImageSyncOverrideNonOptional = createImageSyncOverride {
            if let createImageSyncOverrideTyped = createImageSyncOverrideNonOptional
                    as? CreateImageSyncType<InvocationReportingType> {
                return try createImageSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateImageResult.__default
    }

    /**
     Invokes the CreateInstanceExportTask operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateInstanceExportTaskRequest object being passed to this operation.
         - completion: The CreateInstanceExportTaskResult object or an error will be passed to this 
           callback when the operation is complete. The CreateInstanceExportTaskResult
           object will be validated before being returned to caller.
     */
    public func createInstanceExportTaskAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateInstanceExportTaskRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateInstanceExportTaskResult, HTTPClientError>) -> ()) throws {
        if let createInstanceExportTaskAsyncOverrideNonOptional = createInstanceExportTaskAsyncOverride {
            if let createInstanceExportTaskAsyncOverrideTyped = createInstanceExportTaskAsyncOverrideNonOptional
                    as? CreateInstanceExportTaskAsyncType<InvocationReportingType> {
                return try createInstanceExportTaskAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateInstanceExportTaskResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateInstanceExportTask operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateInstanceExportTaskRequest object being passed to this operation.
     - Returns: The CreateInstanceExportTaskResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createInstanceExportTaskSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateInstanceExportTaskRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateInstanceExportTaskResult {
        if let createInstanceExportTaskSyncOverrideNonOptional = createInstanceExportTaskSyncOverride {
            if let createInstanceExportTaskSyncOverrideTyped = createInstanceExportTaskSyncOverrideNonOptional
                    as? CreateInstanceExportTaskSyncType<InvocationReportingType> {
                return try createInstanceExportTaskSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateInstanceExportTaskResult.__default
    }

    /**
     Invokes the CreateInternetGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateInternetGatewayRequest object being passed to this operation.
         - completion: The CreateInternetGatewayResult object or an error will be passed to this 
           callback when the operation is complete. The CreateInternetGatewayResult
           object will be validated before being returned to caller.
     */
    public func createInternetGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateInternetGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateInternetGatewayResult, HTTPClientError>) -> ()) throws {
        if let createInternetGatewayAsyncOverrideNonOptional = createInternetGatewayAsyncOverride {
            if let createInternetGatewayAsyncOverrideTyped = createInternetGatewayAsyncOverrideNonOptional
                    as? CreateInternetGatewayAsyncType<InvocationReportingType> {
                return try createInternetGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateInternetGatewayResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateInternetGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateInternetGatewayRequest object being passed to this operation.
     - Returns: The CreateInternetGatewayResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createInternetGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateInternetGatewayRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateInternetGatewayResult {
        if let createInternetGatewaySyncOverrideNonOptional = createInternetGatewaySyncOverride {
            if let createInternetGatewaySyncOverrideTyped = createInternetGatewaySyncOverrideNonOptional
                    as? CreateInternetGatewaySyncType<InvocationReportingType> {
                return try createInternetGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateInternetGatewayResult.__default
    }

    /**
     Invokes the CreateKeyPair operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateKeyPairRequest object being passed to this operation.
         - completion: The KeyPair object or an error will be passed to this 
           callback when the operation is complete. The KeyPair
           object will be validated before being returned to caller.
     */
    public func createKeyPairAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateKeyPairRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.KeyPair, HTTPClientError>) -> ()) throws {
        if let createKeyPairAsyncOverrideNonOptional = createKeyPairAsyncOverride {
            if let createKeyPairAsyncOverrideTyped = createKeyPairAsyncOverrideNonOptional
                    as? CreateKeyPairAsyncType<InvocationReportingType> {
                return try createKeyPairAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = KeyPair.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateKeyPair operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateKeyPairRequest object being passed to this operation.
     - Returns: The KeyPair object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createKeyPairSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateKeyPairRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.KeyPair {
        if let createKeyPairSyncOverrideNonOptional = createKeyPairSyncOverride {
            if let createKeyPairSyncOverrideTyped = createKeyPairSyncOverrideNonOptional
                    as? CreateKeyPairSyncType<InvocationReportingType> {
                return try createKeyPairSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return KeyPair.__default
    }

    /**
     Invokes the CreateLaunchTemplate operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateLaunchTemplateRequest object being passed to this operation.
         - completion: The CreateLaunchTemplateResult object or an error will be passed to this 
           callback when the operation is complete. The CreateLaunchTemplateResult
           object will be validated before being returned to caller.
     */
    public func createLaunchTemplateAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateLaunchTemplateRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateLaunchTemplateResult, HTTPClientError>) -> ()) throws {
        if let createLaunchTemplateAsyncOverrideNonOptional = createLaunchTemplateAsyncOverride {
            if let createLaunchTemplateAsyncOverrideTyped = createLaunchTemplateAsyncOverrideNonOptional
                    as? CreateLaunchTemplateAsyncType<InvocationReportingType> {
                return try createLaunchTemplateAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateLaunchTemplateResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateLaunchTemplate operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateLaunchTemplateRequest object being passed to this operation.
     - Returns: The CreateLaunchTemplateResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createLaunchTemplateSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateLaunchTemplateRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateLaunchTemplateResult {
        if let createLaunchTemplateSyncOverrideNonOptional = createLaunchTemplateSyncOverride {
            if let createLaunchTemplateSyncOverrideTyped = createLaunchTemplateSyncOverrideNonOptional
                    as? CreateLaunchTemplateSyncType<InvocationReportingType> {
                return try createLaunchTemplateSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateLaunchTemplateResult.__default
    }

    /**
     Invokes the CreateLaunchTemplateVersion operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateLaunchTemplateVersionRequest object being passed to this operation.
         - completion: The CreateLaunchTemplateVersionResult object or an error will be passed to this 
           callback when the operation is complete. The CreateLaunchTemplateVersionResult
           object will be validated before being returned to caller.
     */
    public func createLaunchTemplateVersionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateLaunchTemplateVersionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateLaunchTemplateVersionResult, HTTPClientError>) -> ()) throws {
        if let createLaunchTemplateVersionAsyncOverrideNonOptional = createLaunchTemplateVersionAsyncOverride {
            if let createLaunchTemplateVersionAsyncOverrideTyped = createLaunchTemplateVersionAsyncOverrideNonOptional
                    as? CreateLaunchTemplateVersionAsyncType<InvocationReportingType> {
                return try createLaunchTemplateVersionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateLaunchTemplateVersionResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateLaunchTemplateVersion operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateLaunchTemplateVersionRequest object being passed to this operation.
     - Returns: The CreateLaunchTemplateVersionResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createLaunchTemplateVersionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateLaunchTemplateVersionRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateLaunchTemplateVersionResult {
        if let createLaunchTemplateVersionSyncOverrideNonOptional = createLaunchTemplateVersionSyncOverride {
            if let createLaunchTemplateVersionSyncOverrideTyped = createLaunchTemplateVersionSyncOverrideNonOptional
                    as? CreateLaunchTemplateVersionSyncType<InvocationReportingType> {
                return try createLaunchTemplateVersionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateLaunchTemplateVersionResult.__default
    }

    /**
     Invokes the CreateLocalGatewayRoute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateLocalGatewayRouteRequest object being passed to this operation.
         - completion: The CreateLocalGatewayRouteResult object or an error will be passed to this 
           callback when the operation is complete. The CreateLocalGatewayRouteResult
           object will be validated before being returned to caller.
     */
    public func createLocalGatewayRouteAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateLocalGatewayRouteRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateLocalGatewayRouteResult, HTTPClientError>) -> ()) throws {
        if let createLocalGatewayRouteAsyncOverrideNonOptional = createLocalGatewayRouteAsyncOverride {
            if let createLocalGatewayRouteAsyncOverrideTyped = createLocalGatewayRouteAsyncOverrideNonOptional
                    as? CreateLocalGatewayRouteAsyncType<InvocationReportingType> {
                return try createLocalGatewayRouteAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateLocalGatewayRouteResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateLocalGatewayRoute operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateLocalGatewayRouteRequest object being passed to this operation.
     - Returns: The CreateLocalGatewayRouteResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createLocalGatewayRouteSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateLocalGatewayRouteRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateLocalGatewayRouteResult {
        if let createLocalGatewayRouteSyncOverrideNonOptional = createLocalGatewayRouteSyncOverride {
            if let createLocalGatewayRouteSyncOverrideTyped = createLocalGatewayRouteSyncOverrideNonOptional
                    as? CreateLocalGatewayRouteSyncType<InvocationReportingType> {
                return try createLocalGatewayRouteSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateLocalGatewayRouteResult.__default
    }

    /**
     Invokes the CreateLocalGatewayRouteTableVpcAssociation operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateLocalGatewayRouteTableVpcAssociationRequest object being passed to this operation.
         - completion: The CreateLocalGatewayRouteTableVpcAssociationResult object or an error will be passed to this 
           callback when the operation is complete. The CreateLocalGatewayRouteTableVpcAssociationResult
           object will be validated before being returned to caller.
     */
    public func createLocalGatewayRouteTableVpcAssociationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateLocalGatewayRouteTableVpcAssociationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateLocalGatewayRouteTableVpcAssociationResult, HTTPClientError>) -> ()) throws {
        if let createLocalGatewayRouteTableVpcAssociationAsyncOverrideNonOptional = createLocalGatewayRouteTableVpcAssociationAsyncOverride {
            if let createLocalGatewayRouteTableVpcAssociationAsyncOverrideTyped = createLocalGatewayRouteTableVpcAssociationAsyncOverrideNonOptional
                    as? CreateLocalGatewayRouteTableVpcAssociationAsyncType<InvocationReportingType> {
                return try createLocalGatewayRouteTableVpcAssociationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateLocalGatewayRouteTableVpcAssociationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateLocalGatewayRouteTableVpcAssociation operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateLocalGatewayRouteTableVpcAssociationRequest object being passed to this operation.
     - Returns: The CreateLocalGatewayRouteTableVpcAssociationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createLocalGatewayRouteTableVpcAssociationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateLocalGatewayRouteTableVpcAssociationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateLocalGatewayRouteTableVpcAssociationResult {
        if let createLocalGatewayRouteTableVpcAssociationSyncOverrideNonOptional = createLocalGatewayRouteTableVpcAssociationSyncOverride {
            if let createLocalGatewayRouteTableVpcAssociationSyncOverrideTyped = createLocalGatewayRouteTableVpcAssociationSyncOverrideNonOptional
                    as? CreateLocalGatewayRouteTableVpcAssociationSyncType<InvocationReportingType> {
                return try createLocalGatewayRouteTableVpcAssociationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateLocalGatewayRouteTableVpcAssociationResult.__default
    }

    /**
     Invokes the CreateNatGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateNatGatewayRequest object being passed to this operation.
         - completion: The CreateNatGatewayResult object or an error will be passed to this 
           callback when the operation is complete. The CreateNatGatewayResult
           object will be validated before being returned to caller.
     */
    public func createNatGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateNatGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateNatGatewayResult, HTTPClientError>) -> ()) throws {
        if let createNatGatewayAsyncOverrideNonOptional = createNatGatewayAsyncOverride {
            if let createNatGatewayAsyncOverrideTyped = createNatGatewayAsyncOverrideNonOptional
                    as? CreateNatGatewayAsyncType<InvocationReportingType> {
                return try createNatGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateNatGatewayResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateNatGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateNatGatewayRequest object being passed to this operation.
     - Returns: The CreateNatGatewayResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createNatGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateNatGatewayRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateNatGatewayResult {
        if let createNatGatewaySyncOverrideNonOptional = createNatGatewaySyncOverride {
            if let createNatGatewaySyncOverrideTyped = createNatGatewaySyncOverrideNonOptional
                    as? CreateNatGatewaySyncType<InvocationReportingType> {
                return try createNatGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateNatGatewayResult.__default
    }

    /**
     Invokes the CreateNetworkAcl operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateNetworkAclRequest object being passed to this operation.
         - completion: The CreateNetworkAclResult object or an error will be passed to this 
           callback when the operation is complete. The CreateNetworkAclResult
           object will be validated before being returned to caller.
     */
    public func createNetworkAclAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateNetworkAclRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateNetworkAclResult, HTTPClientError>) -> ()) throws {
        if let createNetworkAclAsyncOverrideNonOptional = createNetworkAclAsyncOverride {
            if let createNetworkAclAsyncOverrideTyped = createNetworkAclAsyncOverrideNonOptional
                    as? CreateNetworkAclAsyncType<InvocationReportingType> {
                return try createNetworkAclAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateNetworkAclResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateNetworkAcl operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateNetworkAclRequest object being passed to this operation.
     - Returns: The CreateNetworkAclResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createNetworkAclSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateNetworkAclRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateNetworkAclResult {
        if let createNetworkAclSyncOverrideNonOptional = createNetworkAclSyncOverride {
            if let createNetworkAclSyncOverrideTyped = createNetworkAclSyncOverrideNonOptional
                    as? CreateNetworkAclSyncType<InvocationReportingType> {
                return try createNetworkAclSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateNetworkAclResult.__default
    }

    /**
     Invokes the CreateNetworkAclEntry operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateNetworkAclEntryRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func createNetworkAclEntryAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateNetworkAclEntryRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let createNetworkAclEntryAsyncOverrideNonOptional = createNetworkAclEntryAsyncOverride {
            if let createNetworkAclEntryAsyncOverrideTyped = createNetworkAclEntryAsyncOverrideNonOptional
                    as? CreateNetworkAclEntryAsyncType<InvocationReportingType> {
                return try createNetworkAclEntryAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the CreateNetworkAclEntry operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateNetworkAclEntryRequest object being passed to this operation.
     */
    public func createNetworkAclEntrySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateNetworkAclEntryRequest,
            reporting: InvocationReportingType) throws {
        if let createNetworkAclEntrySyncOverrideNonOptional = createNetworkAclEntrySyncOverride {
            if let createNetworkAclEntrySyncOverrideTyped = createNetworkAclEntrySyncOverrideNonOptional
                    as? CreateNetworkAclEntrySyncType<InvocationReportingType> {
                return try createNetworkAclEntrySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the CreateNetworkInterface operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateNetworkInterfaceRequest object being passed to this operation.
         - completion: The CreateNetworkInterfaceResult object or an error will be passed to this 
           callback when the operation is complete. The CreateNetworkInterfaceResult
           object will be validated before being returned to caller.
     */
    public func createNetworkInterfaceAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateNetworkInterfaceRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateNetworkInterfaceResult, HTTPClientError>) -> ()) throws {
        if let createNetworkInterfaceAsyncOverrideNonOptional = createNetworkInterfaceAsyncOverride {
            if let createNetworkInterfaceAsyncOverrideTyped = createNetworkInterfaceAsyncOverrideNonOptional
                    as? CreateNetworkInterfaceAsyncType<InvocationReportingType> {
                return try createNetworkInterfaceAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateNetworkInterfaceResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateNetworkInterface operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateNetworkInterfaceRequest object being passed to this operation.
     - Returns: The CreateNetworkInterfaceResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createNetworkInterfaceSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateNetworkInterfaceRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateNetworkInterfaceResult {
        if let createNetworkInterfaceSyncOverrideNonOptional = createNetworkInterfaceSyncOverride {
            if let createNetworkInterfaceSyncOverrideTyped = createNetworkInterfaceSyncOverrideNonOptional
                    as? CreateNetworkInterfaceSyncType<InvocationReportingType> {
                return try createNetworkInterfaceSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateNetworkInterfaceResult.__default
    }

    /**
     Invokes the CreateNetworkInterfacePermission operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateNetworkInterfacePermissionRequest object being passed to this operation.
         - completion: The CreateNetworkInterfacePermissionResult object or an error will be passed to this 
           callback when the operation is complete. The CreateNetworkInterfacePermissionResult
           object will be validated before being returned to caller.
     */
    public func createNetworkInterfacePermissionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateNetworkInterfacePermissionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateNetworkInterfacePermissionResult, HTTPClientError>) -> ()) throws {
        if let createNetworkInterfacePermissionAsyncOverrideNonOptional = createNetworkInterfacePermissionAsyncOverride {
            if let createNetworkInterfacePermissionAsyncOverrideTyped = createNetworkInterfacePermissionAsyncOverrideNonOptional
                    as? CreateNetworkInterfacePermissionAsyncType<InvocationReportingType> {
                return try createNetworkInterfacePermissionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateNetworkInterfacePermissionResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateNetworkInterfacePermission operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateNetworkInterfacePermissionRequest object being passed to this operation.
     - Returns: The CreateNetworkInterfacePermissionResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createNetworkInterfacePermissionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateNetworkInterfacePermissionRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateNetworkInterfacePermissionResult {
        if let createNetworkInterfacePermissionSyncOverrideNonOptional = createNetworkInterfacePermissionSyncOverride {
            if let createNetworkInterfacePermissionSyncOverrideTyped = createNetworkInterfacePermissionSyncOverrideNonOptional
                    as? CreateNetworkInterfacePermissionSyncType<InvocationReportingType> {
                return try createNetworkInterfacePermissionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateNetworkInterfacePermissionResult.__default
    }

    /**
     Invokes the CreatePlacementGroup operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreatePlacementGroupRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func createPlacementGroupAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreatePlacementGroupRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let createPlacementGroupAsyncOverrideNonOptional = createPlacementGroupAsyncOverride {
            if let createPlacementGroupAsyncOverrideTyped = createPlacementGroupAsyncOverrideNonOptional
                    as? CreatePlacementGroupAsyncType<InvocationReportingType> {
                return try createPlacementGroupAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the CreatePlacementGroup operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreatePlacementGroupRequest object being passed to this operation.
     */
    public func createPlacementGroupSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreatePlacementGroupRequest,
            reporting: InvocationReportingType) throws {
        if let createPlacementGroupSyncOverrideNonOptional = createPlacementGroupSyncOverride {
            if let createPlacementGroupSyncOverrideTyped = createPlacementGroupSyncOverrideNonOptional
                    as? CreatePlacementGroupSyncType<InvocationReportingType> {
                return try createPlacementGroupSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the CreateReservedInstancesListing operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateReservedInstancesListingRequest object being passed to this operation.
         - completion: The CreateReservedInstancesListingResult object or an error will be passed to this 
           callback when the operation is complete. The CreateReservedInstancesListingResult
           object will be validated before being returned to caller.
     */
    public func createReservedInstancesListingAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateReservedInstancesListingRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateReservedInstancesListingResult, HTTPClientError>) -> ()) throws {
        if let createReservedInstancesListingAsyncOverrideNonOptional = createReservedInstancesListingAsyncOverride {
            if let createReservedInstancesListingAsyncOverrideTyped = createReservedInstancesListingAsyncOverrideNonOptional
                    as? CreateReservedInstancesListingAsyncType<InvocationReportingType> {
                return try createReservedInstancesListingAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateReservedInstancesListingResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateReservedInstancesListing operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateReservedInstancesListingRequest object being passed to this operation.
     - Returns: The CreateReservedInstancesListingResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createReservedInstancesListingSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateReservedInstancesListingRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateReservedInstancesListingResult {
        if let createReservedInstancesListingSyncOverrideNonOptional = createReservedInstancesListingSyncOverride {
            if let createReservedInstancesListingSyncOverrideTyped = createReservedInstancesListingSyncOverrideNonOptional
                    as? CreateReservedInstancesListingSyncType<InvocationReportingType> {
                return try createReservedInstancesListingSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateReservedInstancesListingResult.__default
    }

    /**
     Invokes the CreateRoute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateRouteRequest object being passed to this operation.
         - completion: The CreateRouteResult object or an error will be passed to this 
           callback when the operation is complete. The CreateRouteResult
           object will be validated before being returned to caller.
     */
    public func createRouteAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateRouteRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateRouteResult, HTTPClientError>) -> ()) throws {
        if let createRouteAsyncOverrideNonOptional = createRouteAsyncOverride {
            if let createRouteAsyncOverrideTyped = createRouteAsyncOverrideNonOptional
                    as? CreateRouteAsyncType<InvocationReportingType> {
                return try createRouteAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateRouteResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateRoute operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateRouteRequest object being passed to this operation.
     - Returns: The CreateRouteResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createRouteSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateRouteRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateRouteResult {
        if let createRouteSyncOverrideNonOptional = createRouteSyncOverride {
            if let createRouteSyncOverrideTyped = createRouteSyncOverrideNonOptional
                    as? CreateRouteSyncType<InvocationReportingType> {
                return try createRouteSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateRouteResult.__default
    }

    /**
     Invokes the CreateRouteTable operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateRouteTableRequest object being passed to this operation.
         - completion: The CreateRouteTableResult object or an error will be passed to this 
           callback when the operation is complete. The CreateRouteTableResult
           object will be validated before being returned to caller.
     */
    public func createRouteTableAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateRouteTableRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateRouteTableResult, HTTPClientError>) -> ()) throws {
        if let createRouteTableAsyncOverrideNonOptional = createRouteTableAsyncOverride {
            if let createRouteTableAsyncOverrideTyped = createRouteTableAsyncOverrideNonOptional
                    as? CreateRouteTableAsyncType<InvocationReportingType> {
                return try createRouteTableAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateRouteTableResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateRouteTable operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateRouteTableRequest object being passed to this operation.
     - Returns: The CreateRouteTableResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createRouteTableSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateRouteTableRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateRouteTableResult {
        if let createRouteTableSyncOverrideNonOptional = createRouteTableSyncOverride {
            if let createRouteTableSyncOverrideTyped = createRouteTableSyncOverrideNonOptional
                    as? CreateRouteTableSyncType<InvocationReportingType> {
                return try createRouteTableSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateRouteTableResult.__default
    }

    /**
     Invokes the CreateSecurityGroup operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateSecurityGroupRequest object being passed to this operation.
         - completion: The CreateSecurityGroupResult object or an error will be passed to this 
           callback when the operation is complete. The CreateSecurityGroupResult
           object will be validated before being returned to caller.
     */
    public func createSecurityGroupAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateSecurityGroupRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateSecurityGroupResult, HTTPClientError>) -> ()) throws {
        if let createSecurityGroupAsyncOverrideNonOptional = createSecurityGroupAsyncOverride {
            if let createSecurityGroupAsyncOverrideTyped = createSecurityGroupAsyncOverrideNonOptional
                    as? CreateSecurityGroupAsyncType<InvocationReportingType> {
                return try createSecurityGroupAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateSecurityGroupResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateSecurityGroup operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateSecurityGroupRequest object being passed to this operation.
     - Returns: The CreateSecurityGroupResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createSecurityGroupSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateSecurityGroupRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateSecurityGroupResult {
        if let createSecurityGroupSyncOverrideNonOptional = createSecurityGroupSyncOverride {
            if let createSecurityGroupSyncOverrideTyped = createSecurityGroupSyncOverrideNonOptional
                    as? CreateSecurityGroupSyncType<InvocationReportingType> {
                return try createSecurityGroupSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateSecurityGroupResult.__default
    }

    /**
     Invokes the CreateSnapshot operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateSnapshotRequest object being passed to this operation.
         - completion: The Snapshot object or an error will be passed to this 
           callback when the operation is complete. The Snapshot
           object will be validated before being returned to caller.
     */
    public func createSnapshotAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateSnapshotRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.Snapshot, HTTPClientError>) -> ()) throws {
        if let createSnapshotAsyncOverrideNonOptional = createSnapshotAsyncOverride {
            if let createSnapshotAsyncOverrideTyped = createSnapshotAsyncOverrideNonOptional
                    as? CreateSnapshotAsyncType<InvocationReportingType> {
                return try createSnapshotAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = Snapshot.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateSnapshot operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateSnapshotRequest object being passed to this operation.
     - Returns: The Snapshot object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createSnapshotSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateSnapshotRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.Snapshot {
        if let createSnapshotSyncOverrideNonOptional = createSnapshotSyncOverride {
            if let createSnapshotSyncOverrideTyped = createSnapshotSyncOverrideNonOptional
                    as? CreateSnapshotSyncType<InvocationReportingType> {
                return try createSnapshotSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return Snapshot.__default
    }

    /**
     Invokes the CreateSnapshots operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateSnapshotsRequest object being passed to this operation.
         - completion: The CreateSnapshotsResult object or an error will be passed to this 
           callback when the operation is complete. The CreateSnapshotsResult
           object will be validated before being returned to caller.
     */
    public func createSnapshotsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateSnapshotsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateSnapshotsResult, HTTPClientError>) -> ()) throws {
        if let createSnapshotsAsyncOverrideNonOptional = createSnapshotsAsyncOverride {
            if let createSnapshotsAsyncOverrideTyped = createSnapshotsAsyncOverrideNonOptional
                    as? CreateSnapshotsAsyncType<InvocationReportingType> {
                return try createSnapshotsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateSnapshotsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateSnapshots operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateSnapshotsRequest object being passed to this operation.
     - Returns: The CreateSnapshotsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createSnapshotsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateSnapshotsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateSnapshotsResult {
        if let createSnapshotsSyncOverrideNonOptional = createSnapshotsSyncOverride {
            if let createSnapshotsSyncOverrideTyped = createSnapshotsSyncOverrideNonOptional
                    as? CreateSnapshotsSyncType<InvocationReportingType> {
                return try createSnapshotsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateSnapshotsResult.__default
    }

    /**
     Invokes the CreateSpotDatafeedSubscription operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateSpotDatafeedSubscriptionRequest object being passed to this operation.
         - completion: The CreateSpotDatafeedSubscriptionResult object or an error will be passed to this 
           callback when the operation is complete. The CreateSpotDatafeedSubscriptionResult
           object will be validated before being returned to caller.
     */
    public func createSpotDatafeedSubscriptionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateSpotDatafeedSubscriptionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateSpotDatafeedSubscriptionResult, HTTPClientError>) -> ()) throws {
        if let createSpotDatafeedSubscriptionAsyncOverrideNonOptional = createSpotDatafeedSubscriptionAsyncOverride {
            if let createSpotDatafeedSubscriptionAsyncOverrideTyped = createSpotDatafeedSubscriptionAsyncOverrideNonOptional
                    as? CreateSpotDatafeedSubscriptionAsyncType<InvocationReportingType> {
                return try createSpotDatafeedSubscriptionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateSpotDatafeedSubscriptionResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateSpotDatafeedSubscription operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateSpotDatafeedSubscriptionRequest object being passed to this operation.
     - Returns: The CreateSpotDatafeedSubscriptionResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createSpotDatafeedSubscriptionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateSpotDatafeedSubscriptionRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateSpotDatafeedSubscriptionResult {
        if let createSpotDatafeedSubscriptionSyncOverrideNonOptional = createSpotDatafeedSubscriptionSyncOverride {
            if let createSpotDatafeedSubscriptionSyncOverrideTyped = createSpotDatafeedSubscriptionSyncOverrideNonOptional
                    as? CreateSpotDatafeedSubscriptionSyncType<InvocationReportingType> {
                return try createSpotDatafeedSubscriptionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateSpotDatafeedSubscriptionResult.__default
    }

    /**
     Invokes the CreateSubnet operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateSubnetRequest object being passed to this operation.
         - completion: The CreateSubnetResult object or an error will be passed to this 
           callback when the operation is complete. The CreateSubnetResult
           object will be validated before being returned to caller.
     */
    public func createSubnetAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateSubnetRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateSubnetResult, HTTPClientError>) -> ()) throws {
        if let createSubnetAsyncOverrideNonOptional = createSubnetAsyncOverride {
            if let createSubnetAsyncOverrideTyped = createSubnetAsyncOverrideNonOptional
                    as? CreateSubnetAsyncType<InvocationReportingType> {
                return try createSubnetAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateSubnetResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateSubnet operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateSubnetRequest object being passed to this operation.
     - Returns: The CreateSubnetResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createSubnetSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateSubnetRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateSubnetResult {
        if let createSubnetSyncOverrideNonOptional = createSubnetSyncOverride {
            if let createSubnetSyncOverrideTyped = createSubnetSyncOverrideNonOptional
                    as? CreateSubnetSyncType<InvocationReportingType> {
                return try createSubnetSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateSubnetResult.__default
    }

    /**
     Invokes the CreateTags operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateTagsRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func createTagsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTagsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let createTagsAsyncOverrideNonOptional = createTagsAsyncOverride {
            if let createTagsAsyncOverrideTyped = createTagsAsyncOverrideNonOptional
                    as? CreateTagsAsyncType<InvocationReportingType> {
                return try createTagsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the CreateTags operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateTagsRequest object being passed to this operation.
     */
    public func createTagsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTagsRequest,
            reporting: InvocationReportingType) throws {
        if let createTagsSyncOverrideNonOptional = createTagsSyncOverride {
            if let createTagsSyncOverrideTyped = createTagsSyncOverrideNonOptional
                    as? CreateTagsSyncType<InvocationReportingType> {
                return try createTagsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the CreateTrafficMirrorFilter operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateTrafficMirrorFilterRequest object being passed to this operation.
         - completion: The CreateTrafficMirrorFilterResult object or an error will be passed to this 
           callback when the operation is complete. The CreateTrafficMirrorFilterResult
           object will be validated before being returned to caller.
     */
    public func createTrafficMirrorFilterAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTrafficMirrorFilterRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateTrafficMirrorFilterResult, HTTPClientError>) -> ()) throws {
        if let createTrafficMirrorFilterAsyncOverrideNonOptional = createTrafficMirrorFilterAsyncOverride {
            if let createTrafficMirrorFilterAsyncOverrideTyped = createTrafficMirrorFilterAsyncOverrideNonOptional
                    as? CreateTrafficMirrorFilterAsyncType<InvocationReportingType> {
                return try createTrafficMirrorFilterAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateTrafficMirrorFilterResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateTrafficMirrorFilter operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateTrafficMirrorFilterRequest object being passed to this operation.
     - Returns: The CreateTrafficMirrorFilterResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createTrafficMirrorFilterSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTrafficMirrorFilterRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateTrafficMirrorFilterResult {
        if let createTrafficMirrorFilterSyncOverrideNonOptional = createTrafficMirrorFilterSyncOverride {
            if let createTrafficMirrorFilterSyncOverrideTyped = createTrafficMirrorFilterSyncOverrideNonOptional
                    as? CreateTrafficMirrorFilterSyncType<InvocationReportingType> {
                return try createTrafficMirrorFilterSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateTrafficMirrorFilterResult.__default
    }

    /**
     Invokes the CreateTrafficMirrorFilterRule operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateTrafficMirrorFilterRuleRequest object being passed to this operation.
         - completion: The CreateTrafficMirrorFilterRuleResult object or an error will be passed to this 
           callback when the operation is complete. The CreateTrafficMirrorFilterRuleResult
           object will be validated before being returned to caller.
     */
    public func createTrafficMirrorFilterRuleAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTrafficMirrorFilterRuleRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateTrafficMirrorFilterRuleResult, HTTPClientError>) -> ()) throws {
        if let createTrafficMirrorFilterRuleAsyncOverrideNonOptional = createTrafficMirrorFilterRuleAsyncOverride {
            if let createTrafficMirrorFilterRuleAsyncOverrideTyped = createTrafficMirrorFilterRuleAsyncOverrideNonOptional
                    as? CreateTrafficMirrorFilterRuleAsyncType<InvocationReportingType> {
                return try createTrafficMirrorFilterRuleAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateTrafficMirrorFilterRuleResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateTrafficMirrorFilterRule operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateTrafficMirrorFilterRuleRequest object being passed to this operation.
     - Returns: The CreateTrafficMirrorFilterRuleResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createTrafficMirrorFilterRuleSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTrafficMirrorFilterRuleRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateTrafficMirrorFilterRuleResult {
        if let createTrafficMirrorFilterRuleSyncOverrideNonOptional = createTrafficMirrorFilterRuleSyncOverride {
            if let createTrafficMirrorFilterRuleSyncOverrideTyped = createTrafficMirrorFilterRuleSyncOverrideNonOptional
                    as? CreateTrafficMirrorFilterRuleSyncType<InvocationReportingType> {
                return try createTrafficMirrorFilterRuleSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateTrafficMirrorFilterRuleResult.__default
    }

    /**
     Invokes the CreateTrafficMirrorSession operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateTrafficMirrorSessionRequest object being passed to this operation.
         - completion: The CreateTrafficMirrorSessionResult object or an error will be passed to this 
           callback when the operation is complete. The CreateTrafficMirrorSessionResult
           object will be validated before being returned to caller.
     */
    public func createTrafficMirrorSessionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTrafficMirrorSessionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateTrafficMirrorSessionResult, HTTPClientError>) -> ()) throws {
        if let createTrafficMirrorSessionAsyncOverrideNonOptional = createTrafficMirrorSessionAsyncOverride {
            if let createTrafficMirrorSessionAsyncOverrideTyped = createTrafficMirrorSessionAsyncOverrideNonOptional
                    as? CreateTrafficMirrorSessionAsyncType<InvocationReportingType> {
                return try createTrafficMirrorSessionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateTrafficMirrorSessionResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateTrafficMirrorSession operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateTrafficMirrorSessionRequest object being passed to this operation.
     - Returns: The CreateTrafficMirrorSessionResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createTrafficMirrorSessionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTrafficMirrorSessionRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateTrafficMirrorSessionResult {
        if let createTrafficMirrorSessionSyncOverrideNonOptional = createTrafficMirrorSessionSyncOverride {
            if let createTrafficMirrorSessionSyncOverrideTyped = createTrafficMirrorSessionSyncOverrideNonOptional
                    as? CreateTrafficMirrorSessionSyncType<InvocationReportingType> {
                return try createTrafficMirrorSessionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateTrafficMirrorSessionResult.__default
    }

    /**
     Invokes the CreateTrafficMirrorTarget operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateTrafficMirrorTargetRequest object being passed to this operation.
         - completion: The CreateTrafficMirrorTargetResult object or an error will be passed to this 
           callback when the operation is complete. The CreateTrafficMirrorTargetResult
           object will be validated before being returned to caller.
     */
    public func createTrafficMirrorTargetAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTrafficMirrorTargetRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateTrafficMirrorTargetResult, HTTPClientError>) -> ()) throws {
        if let createTrafficMirrorTargetAsyncOverrideNonOptional = createTrafficMirrorTargetAsyncOverride {
            if let createTrafficMirrorTargetAsyncOverrideTyped = createTrafficMirrorTargetAsyncOverrideNonOptional
                    as? CreateTrafficMirrorTargetAsyncType<InvocationReportingType> {
                return try createTrafficMirrorTargetAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateTrafficMirrorTargetResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateTrafficMirrorTarget operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateTrafficMirrorTargetRequest object being passed to this operation.
     - Returns: The CreateTrafficMirrorTargetResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createTrafficMirrorTargetSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTrafficMirrorTargetRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateTrafficMirrorTargetResult {
        if let createTrafficMirrorTargetSyncOverrideNonOptional = createTrafficMirrorTargetSyncOverride {
            if let createTrafficMirrorTargetSyncOverrideTyped = createTrafficMirrorTargetSyncOverrideNonOptional
                    as? CreateTrafficMirrorTargetSyncType<InvocationReportingType> {
                return try createTrafficMirrorTargetSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateTrafficMirrorTargetResult.__default
    }

    /**
     Invokes the CreateTransitGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateTransitGatewayRequest object being passed to this operation.
         - completion: The CreateTransitGatewayResult object or an error will be passed to this 
           callback when the operation is complete. The CreateTransitGatewayResult
           object will be validated before being returned to caller.
     */
    public func createTransitGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTransitGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateTransitGatewayResult, HTTPClientError>) -> ()) throws {
        if let createTransitGatewayAsyncOverrideNonOptional = createTransitGatewayAsyncOverride {
            if let createTransitGatewayAsyncOverrideTyped = createTransitGatewayAsyncOverrideNonOptional
                    as? CreateTransitGatewayAsyncType<InvocationReportingType> {
                return try createTransitGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateTransitGatewayResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateTransitGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateTransitGatewayRequest object being passed to this operation.
     - Returns: The CreateTransitGatewayResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createTransitGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTransitGatewayRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateTransitGatewayResult {
        if let createTransitGatewaySyncOverrideNonOptional = createTransitGatewaySyncOverride {
            if let createTransitGatewaySyncOverrideTyped = createTransitGatewaySyncOverrideNonOptional
                    as? CreateTransitGatewaySyncType<InvocationReportingType> {
                return try createTransitGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateTransitGatewayResult.__default
    }

    /**
     Invokes the CreateTransitGatewayMulticastDomain operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateTransitGatewayMulticastDomainRequest object being passed to this operation.
         - completion: The CreateTransitGatewayMulticastDomainResult object or an error will be passed to this 
           callback when the operation is complete. The CreateTransitGatewayMulticastDomainResult
           object will be validated before being returned to caller.
     */
    public func createTransitGatewayMulticastDomainAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTransitGatewayMulticastDomainRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateTransitGatewayMulticastDomainResult, HTTPClientError>) -> ()) throws {
        if let createTransitGatewayMulticastDomainAsyncOverrideNonOptional = createTransitGatewayMulticastDomainAsyncOverride {
            if let createTransitGatewayMulticastDomainAsyncOverrideTyped = createTransitGatewayMulticastDomainAsyncOverrideNonOptional
                    as? CreateTransitGatewayMulticastDomainAsyncType<InvocationReportingType> {
                return try createTransitGatewayMulticastDomainAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateTransitGatewayMulticastDomainResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateTransitGatewayMulticastDomain operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateTransitGatewayMulticastDomainRequest object being passed to this operation.
     - Returns: The CreateTransitGatewayMulticastDomainResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createTransitGatewayMulticastDomainSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTransitGatewayMulticastDomainRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateTransitGatewayMulticastDomainResult {
        if let createTransitGatewayMulticastDomainSyncOverrideNonOptional = createTransitGatewayMulticastDomainSyncOverride {
            if let createTransitGatewayMulticastDomainSyncOverrideTyped = createTransitGatewayMulticastDomainSyncOverrideNonOptional
                    as? CreateTransitGatewayMulticastDomainSyncType<InvocationReportingType> {
                return try createTransitGatewayMulticastDomainSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateTransitGatewayMulticastDomainResult.__default
    }

    /**
     Invokes the CreateTransitGatewayPeeringAttachment operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateTransitGatewayPeeringAttachmentRequest object being passed to this operation.
         - completion: The CreateTransitGatewayPeeringAttachmentResult object or an error will be passed to this 
           callback when the operation is complete. The CreateTransitGatewayPeeringAttachmentResult
           object will be validated before being returned to caller.
     */
    public func createTransitGatewayPeeringAttachmentAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTransitGatewayPeeringAttachmentRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateTransitGatewayPeeringAttachmentResult, HTTPClientError>) -> ()) throws {
        if let createTransitGatewayPeeringAttachmentAsyncOverrideNonOptional = createTransitGatewayPeeringAttachmentAsyncOverride {
            if let createTransitGatewayPeeringAttachmentAsyncOverrideTyped = createTransitGatewayPeeringAttachmentAsyncOverrideNonOptional
                    as? CreateTransitGatewayPeeringAttachmentAsyncType<InvocationReportingType> {
                return try createTransitGatewayPeeringAttachmentAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateTransitGatewayPeeringAttachmentResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateTransitGatewayPeeringAttachment operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateTransitGatewayPeeringAttachmentRequest object being passed to this operation.
     - Returns: The CreateTransitGatewayPeeringAttachmentResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createTransitGatewayPeeringAttachmentSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTransitGatewayPeeringAttachmentRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateTransitGatewayPeeringAttachmentResult {
        if let createTransitGatewayPeeringAttachmentSyncOverrideNonOptional = createTransitGatewayPeeringAttachmentSyncOverride {
            if let createTransitGatewayPeeringAttachmentSyncOverrideTyped = createTransitGatewayPeeringAttachmentSyncOverrideNonOptional
                    as? CreateTransitGatewayPeeringAttachmentSyncType<InvocationReportingType> {
                return try createTransitGatewayPeeringAttachmentSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateTransitGatewayPeeringAttachmentResult.__default
    }

    /**
     Invokes the CreateTransitGatewayRoute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateTransitGatewayRouteRequest object being passed to this operation.
         - completion: The CreateTransitGatewayRouteResult object or an error will be passed to this 
           callback when the operation is complete. The CreateTransitGatewayRouteResult
           object will be validated before being returned to caller.
     */
    public func createTransitGatewayRouteAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTransitGatewayRouteRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateTransitGatewayRouteResult, HTTPClientError>) -> ()) throws {
        if let createTransitGatewayRouteAsyncOverrideNonOptional = createTransitGatewayRouteAsyncOverride {
            if let createTransitGatewayRouteAsyncOverrideTyped = createTransitGatewayRouteAsyncOverrideNonOptional
                    as? CreateTransitGatewayRouteAsyncType<InvocationReportingType> {
                return try createTransitGatewayRouteAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateTransitGatewayRouteResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateTransitGatewayRoute operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateTransitGatewayRouteRequest object being passed to this operation.
     - Returns: The CreateTransitGatewayRouteResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createTransitGatewayRouteSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTransitGatewayRouteRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateTransitGatewayRouteResult {
        if let createTransitGatewayRouteSyncOverrideNonOptional = createTransitGatewayRouteSyncOverride {
            if let createTransitGatewayRouteSyncOverrideTyped = createTransitGatewayRouteSyncOverrideNonOptional
                    as? CreateTransitGatewayRouteSyncType<InvocationReportingType> {
                return try createTransitGatewayRouteSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateTransitGatewayRouteResult.__default
    }

    /**
     Invokes the CreateTransitGatewayRouteTable operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateTransitGatewayRouteTableRequest object being passed to this operation.
         - completion: The CreateTransitGatewayRouteTableResult object or an error will be passed to this 
           callback when the operation is complete. The CreateTransitGatewayRouteTableResult
           object will be validated before being returned to caller.
     */
    public func createTransitGatewayRouteTableAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTransitGatewayRouteTableRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateTransitGatewayRouteTableResult, HTTPClientError>) -> ()) throws {
        if let createTransitGatewayRouteTableAsyncOverrideNonOptional = createTransitGatewayRouteTableAsyncOverride {
            if let createTransitGatewayRouteTableAsyncOverrideTyped = createTransitGatewayRouteTableAsyncOverrideNonOptional
                    as? CreateTransitGatewayRouteTableAsyncType<InvocationReportingType> {
                return try createTransitGatewayRouteTableAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateTransitGatewayRouteTableResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateTransitGatewayRouteTable operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateTransitGatewayRouteTableRequest object being passed to this operation.
     - Returns: The CreateTransitGatewayRouteTableResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createTransitGatewayRouteTableSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTransitGatewayRouteTableRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateTransitGatewayRouteTableResult {
        if let createTransitGatewayRouteTableSyncOverrideNonOptional = createTransitGatewayRouteTableSyncOverride {
            if let createTransitGatewayRouteTableSyncOverrideTyped = createTransitGatewayRouteTableSyncOverrideNonOptional
                    as? CreateTransitGatewayRouteTableSyncType<InvocationReportingType> {
                return try createTransitGatewayRouteTableSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateTransitGatewayRouteTableResult.__default
    }

    /**
     Invokes the CreateTransitGatewayVpcAttachment operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateTransitGatewayVpcAttachmentRequest object being passed to this operation.
         - completion: The CreateTransitGatewayVpcAttachmentResult object or an error will be passed to this 
           callback when the operation is complete. The CreateTransitGatewayVpcAttachmentResult
           object will be validated before being returned to caller.
     */
    public func createTransitGatewayVpcAttachmentAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTransitGatewayVpcAttachmentRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateTransitGatewayVpcAttachmentResult, HTTPClientError>) -> ()) throws {
        if let createTransitGatewayVpcAttachmentAsyncOverrideNonOptional = createTransitGatewayVpcAttachmentAsyncOverride {
            if let createTransitGatewayVpcAttachmentAsyncOverrideTyped = createTransitGatewayVpcAttachmentAsyncOverrideNonOptional
                    as? CreateTransitGatewayVpcAttachmentAsyncType<InvocationReportingType> {
                return try createTransitGatewayVpcAttachmentAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateTransitGatewayVpcAttachmentResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateTransitGatewayVpcAttachment operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateTransitGatewayVpcAttachmentRequest object being passed to this operation.
     - Returns: The CreateTransitGatewayVpcAttachmentResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createTransitGatewayVpcAttachmentSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateTransitGatewayVpcAttachmentRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateTransitGatewayVpcAttachmentResult {
        if let createTransitGatewayVpcAttachmentSyncOverrideNonOptional = createTransitGatewayVpcAttachmentSyncOverride {
            if let createTransitGatewayVpcAttachmentSyncOverrideTyped = createTransitGatewayVpcAttachmentSyncOverrideNonOptional
                    as? CreateTransitGatewayVpcAttachmentSyncType<InvocationReportingType> {
                return try createTransitGatewayVpcAttachmentSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateTransitGatewayVpcAttachmentResult.__default
    }

    /**
     Invokes the CreateVolume operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateVolumeRequest object being passed to this operation.
         - completion: The Volume object or an error will be passed to this 
           callback when the operation is complete. The Volume
           object will be validated before being returned to caller.
     */
    public func createVolumeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVolumeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.Volume, HTTPClientError>) -> ()) throws {
        if let createVolumeAsyncOverrideNonOptional = createVolumeAsyncOverride {
            if let createVolumeAsyncOverrideTyped = createVolumeAsyncOverrideNonOptional
                    as? CreateVolumeAsyncType<InvocationReportingType> {
                return try createVolumeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = Volume.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateVolume operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateVolumeRequest object being passed to this operation.
     - Returns: The Volume object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createVolumeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVolumeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.Volume {
        if let createVolumeSyncOverrideNonOptional = createVolumeSyncOverride {
            if let createVolumeSyncOverrideTyped = createVolumeSyncOverrideNonOptional
                    as? CreateVolumeSyncType<InvocationReportingType> {
                return try createVolumeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return Volume.__default
    }

    /**
     Invokes the CreateVpc operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateVpcRequest object being passed to this operation.
         - completion: The CreateVpcResult object or an error will be passed to this 
           callback when the operation is complete. The CreateVpcResult
           object will be validated before being returned to caller.
     */
    public func createVpcAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpcRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateVpcResult, HTTPClientError>) -> ()) throws {
        if let createVpcAsyncOverrideNonOptional = createVpcAsyncOverride {
            if let createVpcAsyncOverrideTyped = createVpcAsyncOverrideNonOptional
                    as? CreateVpcAsyncType<InvocationReportingType> {
                return try createVpcAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateVpcResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateVpc operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateVpcRequest object being passed to this operation.
     - Returns: The CreateVpcResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createVpcSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpcRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateVpcResult {
        if let createVpcSyncOverrideNonOptional = createVpcSyncOverride {
            if let createVpcSyncOverrideTyped = createVpcSyncOverrideNonOptional
                    as? CreateVpcSyncType<InvocationReportingType> {
                return try createVpcSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateVpcResult.__default
    }

    /**
     Invokes the CreateVpcEndpoint operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateVpcEndpointRequest object being passed to this operation.
         - completion: The CreateVpcEndpointResult object or an error will be passed to this 
           callback when the operation is complete. The CreateVpcEndpointResult
           object will be validated before being returned to caller.
     */
    public func createVpcEndpointAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpcEndpointRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateVpcEndpointResult, HTTPClientError>) -> ()) throws {
        if let createVpcEndpointAsyncOverrideNonOptional = createVpcEndpointAsyncOverride {
            if let createVpcEndpointAsyncOverrideTyped = createVpcEndpointAsyncOverrideNonOptional
                    as? CreateVpcEndpointAsyncType<InvocationReportingType> {
                return try createVpcEndpointAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateVpcEndpointResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateVpcEndpoint operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateVpcEndpointRequest object being passed to this operation.
     - Returns: The CreateVpcEndpointResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createVpcEndpointSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpcEndpointRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateVpcEndpointResult {
        if let createVpcEndpointSyncOverrideNonOptional = createVpcEndpointSyncOverride {
            if let createVpcEndpointSyncOverrideTyped = createVpcEndpointSyncOverrideNonOptional
                    as? CreateVpcEndpointSyncType<InvocationReportingType> {
                return try createVpcEndpointSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateVpcEndpointResult.__default
    }

    /**
     Invokes the CreateVpcEndpointConnectionNotification operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateVpcEndpointConnectionNotificationRequest object being passed to this operation.
         - completion: The CreateVpcEndpointConnectionNotificationResult object or an error will be passed to this 
           callback when the operation is complete. The CreateVpcEndpointConnectionNotificationResult
           object will be validated before being returned to caller.
     */
    public func createVpcEndpointConnectionNotificationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpcEndpointConnectionNotificationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateVpcEndpointConnectionNotificationResult, HTTPClientError>) -> ()) throws {
        if let createVpcEndpointConnectionNotificationAsyncOverrideNonOptional = createVpcEndpointConnectionNotificationAsyncOverride {
            if let createVpcEndpointConnectionNotificationAsyncOverrideTyped = createVpcEndpointConnectionNotificationAsyncOverrideNonOptional
                    as? CreateVpcEndpointConnectionNotificationAsyncType<InvocationReportingType> {
                return try createVpcEndpointConnectionNotificationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateVpcEndpointConnectionNotificationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateVpcEndpointConnectionNotification operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateVpcEndpointConnectionNotificationRequest object being passed to this operation.
     - Returns: The CreateVpcEndpointConnectionNotificationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createVpcEndpointConnectionNotificationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpcEndpointConnectionNotificationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateVpcEndpointConnectionNotificationResult {
        if let createVpcEndpointConnectionNotificationSyncOverrideNonOptional = createVpcEndpointConnectionNotificationSyncOverride {
            if let createVpcEndpointConnectionNotificationSyncOverrideTyped = createVpcEndpointConnectionNotificationSyncOverrideNonOptional
                    as? CreateVpcEndpointConnectionNotificationSyncType<InvocationReportingType> {
                return try createVpcEndpointConnectionNotificationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateVpcEndpointConnectionNotificationResult.__default
    }

    /**
     Invokes the CreateVpcEndpointServiceConfiguration operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateVpcEndpointServiceConfigurationRequest object being passed to this operation.
         - completion: The CreateVpcEndpointServiceConfigurationResult object or an error will be passed to this 
           callback when the operation is complete. The CreateVpcEndpointServiceConfigurationResult
           object will be validated before being returned to caller.
     */
    public func createVpcEndpointServiceConfigurationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpcEndpointServiceConfigurationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateVpcEndpointServiceConfigurationResult, HTTPClientError>) -> ()) throws {
        if let createVpcEndpointServiceConfigurationAsyncOverrideNonOptional = createVpcEndpointServiceConfigurationAsyncOverride {
            if let createVpcEndpointServiceConfigurationAsyncOverrideTyped = createVpcEndpointServiceConfigurationAsyncOverrideNonOptional
                    as? CreateVpcEndpointServiceConfigurationAsyncType<InvocationReportingType> {
                return try createVpcEndpointServiceConfigurationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateVpcEndpointServiceConfigurationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateVpcEndpointServiceConfiguration operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateVpcEndpointServiceConfigurationRequest object being passed to this operation.
     - Returns: The CreateVpcEndpointServiceConfigurationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createVpcEndpointServiceConfigurationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpcEndpointServiceConfigurationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateVpcEndpointServiceConfigurationResult {
        if let createVpcEndpointServiceConfigurationSyncOverrideNonOptional = createVpcEndpointServiceConfigurationSyncOverride {
            if let createVpcEndpointServiceConfigurationSyncOverrideTyped = createVpcEndpointServiceConfigurationSyncOverrideNonOptional
                    as? CreateVpcEndpointServiceConfigurationSyncType<InvocationReportingType> {
                return try createVpcEndpointServiceConfigurationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateVpcEndpointServiceConfigurationResult.__default
    }

    /**
     Invokes the CreateVpcPeeringConnection operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateVpcPeeringConnectionRequest object being passed to this operation.
         - completion: The CreateVpcPeeringConnectionResult object or an error will be passed to this 
           callback when the operation is complete. The CreateVpcPeeringConnectionResult
           object will be validated before being returned to caller.
     */
    public func createVpcPeeringConnectionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpcPeeringConnectionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateVpcPeeringConnectionResult, HTTPClientError>) -> ()) throws {
        if let createVpcPeeringConnectionAsyncOverrideNonOptional = createVpcPeeringConnectionAsyncOverride {
            if let createVpcPeeringConnectionAsyncOverrideTyped = createVpcPeeringConnectionAsyncOverrideNonOptional
                    as? CreateVpcPeeringConnectionAsyncType<InvocationReportingType> {
                return try createVpcPeeringConnectionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateVpcPeeringConnectionResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateVpcPeeringConnection operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateVpcPeeringConnectionRequest object being passed to this operation.
     - Returns: The CreateVpcPeeringConnectionResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createVpcPeeringConnectionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpcPeeringConnectionRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateVpcPeeringConnectionResult {
        if let createVpcPeeringConnectionSyncOverrideNonOptional = createVpcPeeringConnectionSyncOverride {
            if let createVpcPeeringConnectionSyncOverrideTyped = createVpcPeeringConnectionSyncOverrideNonOptional
                    as? CreateVpcPeeringConnectionSyncType<InvocationReportingType> {
                return try createVpcPeeringConnectionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateVpcPeeringConnectionResult.__default
    }

    /**
     Invokes the CreateVpnConnection operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateVpnConnectionRequest object being passed to this operation.
         - completion: The CreateVpnConnectionResult object or an error will be passed to this 
           callback when the operation is complete. The CreateVpnConnectionResult
           object will be validated before being returned to caller.
     */
    public func createVpnConnectionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpnConnectionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateVpnConnectionResult, HTTPClientError>) -> ()) throws {
        if let createVpnConnectionAsyncOverrideNonOptional = createVpnConnectionAsyncOverride {
            if let createVpnConnectionAsyncOverrideTyped = createVpnConnectionAsyncOverrideNonOptional
                    as? CreateVpnConnectionAsyncType<InvocationReportingType> {
                return try createVpnConnectionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateVpnConnectionResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateVpnConnection operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateVpnConnectionRequest object being passed to this operation.
     - Returns: The CreateVpnConnectionResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createVpnConnectionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpnConnectionRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateVpnConnectionResult {
        if let createVpnConnectionSyncOverrideNonOptional = createVpnConnectionSyncOverride {
            if let createVpnConnectionSyncOverrideTyped = createVpnConnectionSyncOverrideNonOptional
                    as? CreateVpnConnectionSyncType<InvocationReportingType> {
                return try createVpnConnectionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateVpnConnectionResult.__default
    }

    /**
     Invokes the CreateVpnConnectionRoute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateVpnConnectionRouteRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func createVpnConnectionRouteAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpnConnectionRouteRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let createVpnConnectionRouteAsyncOverrideNonOptional = createVpnConnectionRouteAsyncOverride {
            if let createVpnConnectionRouteAsyncOverrideTyped = createVpnConnectionRouteAsyncOverrideNonOptional
                    as? CreateVpnConnectionRouteAsyncType<InvocationReportingType> {
                return try createVpnConnectionRouteAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the CreateVpnConnectionRoute operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateVpnConnectionRouteRequest object being passed to this operation.
     */
    public func createVpnConnectionRouteSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpnConnectionRouteRequest,
            reporting: InvocationReportingType) throws {
        if let createVpnConnectionRouteSyncOverrideNonOptional = createVpnConnectionRouteSyncOverride {
            if let createVpnConnectionRouteSyncOverrideTyped = createVpnConnectionRouteSyncOverrideNonOptional
                    as? CreateVpnConnectionRouteSyncType<InvocationReportingType> {
                return try createVpnConnectionRouteSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the CreateVpnGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated CreateVpnGatewayRequest object being passed to this operation.
         - completion: The CreateVpnGatewayResult object or an error will be passed to this 
           callback when the operation is complete. The CreateVpnGatewayResult
           object will be validated before being returned to caller.
     */
    public func createVpnGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpnGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.CreateVpnGatewayResult, HTTPClientError>) -> ()) throws {
        if let createVpnGatewayAsyncOverrideNonOptional = createVpnGatewayAsyncOverride {
            if let createVpnGatewayAsyncOverrideTyped = createVpnGatewayAsyncOverrideNonOptional
                    as? CreateVpnGatewayAsyncType<InvocationReportingType> {
                return try createVpnGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = CreateVpnGatewayResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the CreateVpnGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated CreateVpnGatewayRequest object being passed to this operation.
     - Returns: The CreateVpnGatewayResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func createVpnGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.CreateVpnGatewayRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.CreateVpnGatewayResult {
        if let createVpnGatewaySyncOverrideNonOptional = createVpnGatewaySyncOverride {
            if let createVpnGatewaySyncOverrideTyped = createVpnGatewaySyncOverrideNonOptional
                    as? CreateVpnGatewaySyncType<InvocationReportingType> {
                return try createVpnGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return CreateVpnGatewayResult.__default
    }

    /**
     Invokes the DeleteClientVpnEndpoint operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteClientVpnEndpointRequest object being passed to this operation.
         - completion: The DeleteClientVpnEndpointResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteClientVpnEndpointResult
           object will be validated before being returned to caller.
     */
    public func deleteClientVpnEndpointAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteClientVpnEndpointRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteClientVpnEndpointResult, HTTPClientError>) -> ()) throws {
        if let deleteClientVpnEndpointAsyncOverrideNonOptional = deleteClientVpnEndpointAsyncOverride {
            if let deleteClientVpnEndpointAsyncOverrideTyped = deleteClientVpnEndpointAsyncOverrideNonOptional
                    as? DeleteClientVpnEndpointAsyncType<InvocationReportingType> {
                return try deleteClientVpnEndpointAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteClientVpnEndpointResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteClientVpnEndpoint operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteClientVpnEndpointRequest object being passed to this operation.
     - Returns: The DeleteClientVpnEndpointResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteClientVpnEndpointSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteClientVpnEndpointRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteClientVpnEndpointResult {
        if let deleteClientVpnEndpointSyncOverrideNonOptional = deleteClientVpnEndpointSyncOverride {
            if let deleteClientVpnEndpointSyncOverrideTyped = deleteClientVpnEndpointSyncOverrideNonOptional
                    as? DeleteClientVpnEndpointSyncType<InvocationReportingType> {
                return try deleteClientVpnEndpointSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteClientVpnEndpointResult.__default
    }

    /**
     Invokes the DeleteClientVpnRoute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteClientVpnRouteRequest object being passed to this operation.
         - completion: The DeleteClientVpnRouteResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteClientVpnRouteResult
           object will be validated before being returned to caller.
     */
    public func deleteClientVpnRouteAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteClientVpnRouteRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteClientVpnRouteResult, HTTPClientError>) -> ()) throws {
        if let deleteClientVpnRouteAsyncOverrideNonOptional = deleteClientVpnRouteAsyncOverride {
            if let deleteClientVpnRouteAsyncOverrideTyped = deleteClientVpnRouteAsyncOverrideNonOptional
                    as? DeleteClientVpnRouteAsyncType<InvocationReportingType> {
                return try deleteClientVpnRouteAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteClientVpnRouteResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteClientVpnRoute operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteClientVpnRouteRequest object being passed to this operation.
     - Returns: The DeleteClientVpnRouteResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteClientVpnRouteSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteClientVpnRouteRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteClientVpnRouteResult {
        if let deleteClientVpnRouteSyncOverrideNonOptional = deleteClientVpnRouteSyncOverride {
            if let deleteClientVpnRouteSyncOverrideTyped = deleteClientVpnRouteSyncOverrideNonOptional
                    as? DeleteClientVpnRouteSyncType<InvocationReportingType> {
                return try deleteClientVpnRouteSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteClientVpnRouteResult.__default
    }

    /**
     Invokes the DeleteCustomerGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteCustomerGatewayRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteCustomerGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteCustomerGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteCustomerGatewayAsyncOverrideNonOptional = deleteCustomerGatewayAsyncOverride {
            if let deleteCustomerGatewayAsyncOverrideTyped = deleteCustomerGatewayAsyncOverrideNonOptional
                    as? DeleteCustomerGatewayAsyncType<InvocationReportingType> {
                return try deleteCustomerGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteCustomerGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteCustomerGatewayRequest object being passed to this operation.
     */
    public func deleteCustomerGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteCustomerGatewayRequest,
            reporting: InvocationReportingType) throws {
        if let deleteCustomerGatewaySyncOverrideNonOptional = deleteCustomerGatewaySyncOverride {
            if let deleteCustomerGatewaySyncOverrideTyped = deleteCustomerGatewaySyncOverrideNonOptional
                    as? DeleteCustomerGatewaySyncType<InvocationReportingType> {
                return try deleteCustomerGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteDhcpOptions operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteDhcpOptionsRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteDhcpOptionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteDhcpOptionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteDhcpOptionsAsyncOverrideNonOptional = deleteDhcpOptionsAsyncOverride {
            if let deleteDhcpOptionsAsyncOverrideTyped = deleteDhcpOptionsAsyncOverrideNonOptional
                    as? DeleteDhcpOptionsAsyncType<InvocationReportingType> {
                return try deleteDhcpOptionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteDhcpOptions operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteDhcpOptionsRequest object being passed to this operation.
     */
    public func deleteDhcpOptionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteDhcpOptionsRequest,
            reporting: InvocationReportingType) throws {
        if let deleteDhcpOptionsSyncOverrideNonOptional = deleteDhcpOptionsSyncOverride {
            if let deleteDhcpOptionsSyncOverrideTyped = deleteDhcpOptionsSyncOverrideNonOptional
                    as? DeleteDhcpOptionsSyncType<InvocationReportingType> {
                return try deleteDhcpOptionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteEgressOnlyInternetGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteEgressOnlyInternetGatewayRequest object being passed to this operation.
         - completion: The DeleteEgressOnlyInternetGatewayResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteEgressOnlyInternetGatewayResult
           object will be validated before being returned to caller.
     */
    public func deleteEgressOnlyInternetGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteEgressOnlyInternetGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteEgressOnlyInternetGatewayResult, HTTPClientError>) -> ()) throws {
        if let deleteEgressOnlyInternetGatewayAsyncOverrideNonOptional = deleteEgressOnlyInternetGatewayAsyncOverride {
            if let deleteEgressOnlyInternetGatewayAsyncOverrideTyped = deleteEgressOnlyInternetGatewayAsyncOverrideNonOptional
                    as? DeleteEgressOnlyInternetGatewayAsyncType<InvocationReportingType> {
                return try deleteEgressOnlyInternetGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteEgressOnlyInternetGatewayResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteEgressOnlyInternetGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteEgressOnlyInternetGatewayRequest object being passed to this operation.
     - Returns: The DeleteEgressOnlyInternetGatewayResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteEgressOnlyInternetGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteEgressOnlyInternetGatewayRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteEgressOnlyInternetGatewayResult {
        if let deleteEgressOnlyInternetGatewaySyncOverrideNonOptional = deleteEgressOnlyInternetGatewaySyncOverride {
            if let deleteEgressOnlyInternetGatewaySyncOverrideTyped = deleteEgressOnlyInternetGatewaySyncOverrideNonOptional
                    as? DeleteEgressOnlyInternetGatewaySyncType<InvocationReportingType> {
                return try deleteEgressOnlyInternetGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteEgressOnlyInternetGatewayResult.__default
    }

    /**
     Invokes the DeleteFleets operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteFleetsRequest object being passed to this operation.
         - completion: The DeleteFleetsResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteFleetsResult
           object will be validated before being returned to caller.
     */
    public func deleteFleetsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteFleetsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteFleetsResult, HTTPClientError>) -> ()) throws {
        if let deleteFleetsAsyncOverrideNonOptional = deleteFleetsAsyncOverride {
            if let deleteFleetsAsyncOverrideTyped = deleteFleetsAsyncOverrideNonOptional
                    as? DeleteFleetsAsyncType<InvocationReportingType> {
                return try deleteFleetsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteFleetsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteFleets operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteFleetsRequest object being passed to this operation.
     - Returns: The DeleteFleetsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteFleetsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteFleetsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteFleetsResult {
        if let deleteFleetsSyncOverrideNonOptional = deleteFleetsSyncOverride {
            if let deleteFleetsSyncOverrideTyped = deleteFleetsSyncOverrideNonOptional
                    as? DeleteFleetsSyncType<InvocationReportingType> {
                return try deleteFleetsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteFleetsResult.__default
    }

    /**
     Invokes the DeleteFlowLogs operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteFlowLogsRequest object being passed to this operation.
         - completion: The DeleteFlowLogsResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteFlowLogsResult
           object will be validated before being returned to caller.
     */
    public func deleteFlowLogsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteFlowLogsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteFlowLogsResult, HTTPClientError>) -> ()) throws {
        if let deleteFlowLogsAsyncOverrideNonOptional = deleteFlowLogsAsyncOverride {
            if let deleteFlowLogsAsyncOverrideTyped = deleteFlowLogsAsyncOverrideNonOptional
                    as? DeleteFlowLogsAsyncType<InvocationReportingType> {
                return try deleteFlowLogsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteFlowLogsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteFlowLogs operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteFlowLogsRequest object being passed to this operation.
     - Returns: The DeleteFlowLogsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteFlowLogsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteFlowLogsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteFlowLogsResult {
        if let deleteFlowLogsSyncOverrideNonOptional = deleteFlowLogsSyncOverride {
            if let deleteFlowLogsSyncOverrideTyped = deleteFlowLogsSyncOverrideNonOptional
                    as? DeleteFlowLogsSyncType<InvocationReportingType> {
                return try deleteFlowLogsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteFlowLogsResult.__default
    }

    /**
     Invokes the DeleteFpgaImage operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteFpgaImageRequest object being passed to this operation.
         - completion: The DeleteFpgaImageResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteFpgaImageResult
           object will be validated before being returned to caller.
     */
    public func deleteFpgaImageAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteFpgaImageRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteFpgaImageResult, HTTPClientError>) -> ()) throws {
        if let deleteFpgaImageAsyncOverrideNonOptional = deleteFpgaImageAsyncOverride {
            if let deleteFpgaImageAsyncOverrideTyped = deleteFpgaImageAsyncOverrideNonOptional
                    as? DeleteFpgaImageAsyncType<InvocationReportingType> {
                return try deleteFpgaImageAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteFpgaImageResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteFpgaImage operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteFpgaImageRequest object being passed to this operation.
     - Returns: The DeleteFpgaImageResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteFpgaImageSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteFpgaImageRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteFpgaImageResult {
        if let deleteFpgaImageSyncOverrideNonOptional = deleteFpgaImageSyncOverride {
            if let deleteFpgaImageSyncOverrideTyped = deleteFpgaImageSyncOverrideNonOptional
                    as? DeleteFpgaImageSyncType<InvocationReportingType> {
                return try deleteFpgaImageSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteFpgaImageResult.__default
    }

    /**
     Invokes the DeleteInternetGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteInternetGatewayRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteInternetGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteInternetGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteInternetGatewayAsyncOverrideNonOptional = deleteInternetGatewayAsyncOverride {
            if let deleteInternetGatewayAsyncOverrideTyped = deleteInternetGatewayAsyncOverrideNonOptional
                    as? DeleteInternetGatewayAsyncType<InvocationReportingType> {
                return try deleteInternetGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteInternetGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteInternetGatewayRequest object being passed to this operation.
     */
    public func deleteInternetGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteInternetGatewayRequest,
            reporting: InvocationReportingType) throws {
        if let deleteInternetGatewaySyncOverrideNonOptional = deleteInternetGatewaySyncOverride {
            if let deleteInternetGatewaySyncOverrideTyped = deleteInternetGatewaySyncOverrideNonOptional
                    as? DeleteInternetGatewaySyncType<InvocationReportingType> {
                return try deleteInternetGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteKeyPair operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteKeyPairRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteKeyPairAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteKeyPairRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteKeyPairAsyncOverrideNonOptional = deleteKeyPairAsyncOverride {
            if let deleteKeyPairAsyncOverrideTyped = deleteKeyPairAsyncOverrideNonOptional
                    as? DeleteKeyPairAsyncType<InvocationReportingType> {
                return try deleteKeyPairAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteKeyPair operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteKeyPairRequest object being passed to this operation.
     */
    public func deleteKeyPairSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteKeyPairRequest,
            reporting: InvocationReportingType) throws {
        if let deleteKeyPairSyncOverrideNonOptional = deleteKeyPairSyncOverride {
            if let deleteKeyPairSyncOverrideTyped = deleteKeyPairSyncOverrideNonOptional
                    as? DeleteKeyPairSyncType<InvocationReportingType> {
                return try deleteKeyPairSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteLaunchTemplate operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteLaunchTemplateRequest object being passed to this operation.
         - completion: The DeleteLaunchTemplateResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteLaunchTemplateResult
           object will be validated before being returned to caller.
     */
    public func deleteLaunchTemplateAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteLaunchTemplateRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteLaunchTemplateResult, HTTPClientError>) -> ()) throws {
        if let deleteLaunchTemplateAsyncOverrideNonOptional = deleteLaunchTemplateAsyncOverride {
            if let deleteLaunchTemplateAsyncOverrideTyped = deleteLaunchTemplateAsyncOverrideNonOptional
                    as? DeleteLaunchTemplateAsyncType<InvocationReportingType> {
                return try deleteLaunchTemplateAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteLaunchTemplateResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteLaunchTemplate operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteLaunchTemplateRequest object being passed to this operation.
     - Returns: The DeleteLaunchTemplateResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteLaunchTemplateSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteLaunchTemplateRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteLaunchTemplateResult {
        if let deleteLaunchTemplateSyncOverrideNonOptional = deleteLaunchTemplateSyncOverride {
            if let deleteLaunchTemplateSyncOverrideTyped = deleteLaunchTemplateSyncOverrideNonOptional
                    as? DeleteLaunchTemplateSyncType<InvocationReportingType> {
                return try deleteLaunchTemplateSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteLaunchTemplateResult.__default
    }

    /**
     Invokes the DeleteLaunchTemplateVersions operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteLaunchTemplateVersionsRequest object being passed to this operation.
         - completion: The DeleteLaunchTemplateVersionsResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteLaunchTemplateVersionsResult
           object will be validated before being returned to caller.
     */
    public func deleteLaunchTemplateVersionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteLaunchTemplateVersionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteLaunchTemplateVersionsResult, HTTPClientError>) -> ()) throws {
        if let deleteLaunchTemplateVersionsAsyncOverrideNonOptional = deleteLaunchTemplateVersionsAsyncOverride {
            if let deleteLaunchTemplateVersionsAsyncOverrideTyped = deleteLaunchTemplateVersionsAsyncOverrideNonOptional
                    as? DeleteLaunchTemplateVersionsAsyncType<InvocationReportingType> {
                return try deleteLaunchTemplateVersionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteLaunchTemplateVersionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteLaunchTemplateVersions operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteLaunchTemplateVersionsRequest object being passed to this operation.
     - Returns: The DeleteLaunchTemplateVersionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteLaunchTemplateVersionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteLaunchTemplateVersionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteLaunchTemplateVersionsResult {
        if let deleteLaunchTemplateVersionsSyncOverrideNonOptional = deleteLaunchTemplateVersionsSyncOverride {
            if let deleteLaunchTemplateVersionsSyncOverrideTyped = deleteLaunchTemplateVersionsSyncOverrideNonOptional
                    as? DeleteLaunchTemplateVersionsSyncType<InvocationReportingType> {
                return try deleteLaunchTemplateVersionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteLaunchTemplateVersionsResult.__default
    }

    /**
     Invokes the DeleteLocalGatewayRoute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteLocalGatewayRouteRequest object being passed to this operation.
         - completion: The DeleteLocalGatewayRouteResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteLocalGatewayRouteResult
           object will be validated before being returned to caller.
     */
    public func deleteLocalGatewayRouteAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteLocalGatewayRouteRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteLocalGatewayRouteResult, HTTPClientError>) -> ()) throws {
        if let deleteLocalGatewayRouteAsyncOverrideNonOptional = deleteLocalGatewayRouteAsyncOverride {
            if let deleteLocalGatewayRouteAsyncOverrideTyped = deleteLocalGatewayRouteAsyncOverrideNonOptional
                    as? DeleteLocalGatewayRouteAsyncType<InvocationReportingType> {
                return try deleteLocalGatewayRouteAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteLocalGatewayRouteResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteLocalGatewayRoute operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteLocalGatewayRouteRequest object being passed to this operation.
     - Returns: The DeleteLocalGatewayRouteResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteLocalGatewayRouteSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteLocalGatewayRouteRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteLocalGatewayRouteResult {
        if let deleteLocalGatewayRouteSyncOverrideNonOptional = deleteLocalGatewayRouteSyncOverride {
            if let deleteLocalGatewayRouteSyncOverrideTyped = deleteLocalGatewayRouteSyncOverrideNonOptional
                    as? DeleteLocalGatewayRouteSyncType<InvocationReportingType> {
                return try deleteLocalGatewayRouteSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteLocalGatewayRouteResult.__default
    }

    /**
     Invokes the DeleteLocalGatewayRouteTableVpcAssociation operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteLocalGatewayRouteTableVpcAssociationRequest object being passed to this operation.
         - completion: The DeleteLocalGatewayRouteTableVpcAssociationResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteLocalGatewayRouteTableVpcAssociationResult
           object will be validated before being returned to caller.
     */
    public func deleteLocalGatewayRouteTableVpcAssociationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteLocalGatewayRouteTableVpcAssociationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteLocalGatewayRouteTableVpcAssociationResult, HTTPClientError>) -> ()) throws {
        if let deleteLocalGatewayRouteTableVpcAssociationAsyncOverrideNonOptional = deleteLocalGatewayRouteTableVpcAssociationAsyncOverride {
            if let deleteLocalGatewayRouteTableVpcAssociationAsyncOverrideTyped = deleteLocalGatewayRouteTableVpcAssociationAsyncOverrideNonOptional
                    as? DeleteLocalGatewayRouteTableVpcAssociationAsyncType<InvocationReportingType> {
                return try deleteLocalGatewayRouteTableVpcAssociationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteLocalGatewayRouteTableVpcAssociationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteLocalGatewayRouteTableVpcAssociation operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteLocalGatewayRouteTableVpcAssociationRequest object being passed to this operation.
     - Returns: The DeleteLocalGatewayRouteTableVpcAssociationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteLocalGatewayRouteTableVpcAssociationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteLocalGatewayRouteTableVpcAssociationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteLocalGatewayRouteTableVpcAssociationResult {
        if let deleteLocalGatewayRouteTableVpcAssociationSyncOverrideNonOptional = deleteLocalGatewayRouteTableVpcAssociationSyncOverride {
            if let deleteLocalGatewayRouteTableVpcAssociationSyncOverrideTyped = deleteLocalGatewayRouteTableVpcAssociationSyncOverrideNonOptional
                    as? DeleteLocalGatewayRouteTableVpcAssociationSyncType<InvocationReportingType> {
                return try deleteLocalGatewayRouteTableVpcAssociationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteLocalGatewayRouteTableVpcAssociationResult.__default
    }

    /**
     Invokes the DeleteNatGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteNatGatewayRequest object being passed to this operation.
         - completion: The DeleteNatGatewayResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteNatGatewayResult
           object will be validated before being returned to caller.
     */
    public func deleteNatGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteNatGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteNatGatewayResult, HTTPClientError>) -> ()) throws {
        if let deleteNatGatewayAsyncOverrideNonOptional = deleteNatGatewayAsyncOverride {
            if let deleteNatGatewayAsyncOverrideTyped = deleteNatGatewayAsyncOverrideNonOptional
                    as? DeleteNatGatewayAsyncType<InvocationReportingType> {
                return try deleteNatGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteNatGatewayResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteNatGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteNatGatewayRequest object being passed to this operation.
     - Returns: The DeleteNatGatewayResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteNatGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteNatGatewayRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteNatGatewayResult {
        if let deleteNatGatewaySyncOverrideNonOptional = deleteNatGatewaySyncOverride {
            if let deleteNatGatewaySyncOverrideTyped = deleteNatGatewaySyncOverrideNonOptional
                    as? DeleteNatGatewaySyncType<InvocationReportingType> {
                return try deleteNatGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteNatGatewayResult.__default
    }

    /**
     Invokes the DeleteNetworkAcl operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteNetworkAclRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteNetworkAclAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteNetworkAclRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteNetworkAclAsyncOverrideNonOptional = deleteNetworkAclAsyncOverride {
            if let deleteNetworkAclAsyncOverrideTyped = deleteNetworkAclAsyncOverrideNonOptional
                    as? DeleteNetworkAclAsyncType<InvocationReportingType> {
                return try deleteNetworkAclAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteNetworkAcl operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteNetworkAclRequest object being passed to this operation.
     */
    public func deleteNetworkAclSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteNetworkAclRequest,
            reporting: InvocationReportingType) throws {
        if let deleteNetworkAclSyncOverrideNonOptional = deleteNetworkAclSyncOverride {
            if let deleteNetworkAclSyncOverrideTyped = deleteNetworkAclSyncOverrideNonOptional
                    as? DeleteNetworkAclSyncType<InvocationReportingType> {
                return try deleteNetworkAclSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteNetworkAclEntry operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteNetworkAclEntryRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteNetworkAclEntryAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteNetworkAclEntryRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteNetworkAclEntryAsyncOverrideNonOptional = deleteNetworkAclEntryAsyncOverride {
            if let deleteNetworkAclEntryAsyncOverrideTyped = deleteNetworkAclEntryAsyncOverrideNonOptional
                    as? DeleteNetworkAclEntryAsyncType<InvocationReportingType> {
                return try deleteNetworkAclEntryAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteNetworkAclEntry operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteNetworkAclEntryRequest object being passed to this operation.
     */
    public func deleteNetworkAclEntrySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteNetworkAclEntryRequest,
            reporting: InvocationReportingType) throws {
        if let deleteNetworkAclEntrySyncOverrideNonOptional = deleteNetworkAclEntrySyncOverride {
            if let deleteNetworkAclEntrySyncOverrideTyped = deleteNetworkAclEntrySyncOverrideNonOptional
                    as? DeleteNetworkAclEntrySyncType<InvocationReportingType> {
                return try deleteNetworkAclEntrySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteNetworkInterface operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteNetworkInterfaceRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteNetworkInterfaceAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteNetworkInterfaceRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteNetworkInterfaceAsyncOverrideNonOptional = deleteNetworkInterfaceAsyncOverride {
            if let deleteNetworkInterfaceAsyncOverrideTyped = deleteNetworkInterfaceAsyncOverrideNonOptional
                    as? DeleteNetworkInterfaceAsyncType<InvocationReportingType> {
                return try deleteNetworkInterfaceAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteNetworkInterface operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteNetworkInterfaceRequest object being passed to this operation.
     */
    public func deleteNetworkInterfaceSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteNetworkInterfaceRequest,
            reporting: InvocationReportingType) throws {
        if let deleteNetworkInterfaceSyncOverrideNonOptional = deleteNetworkInterfaceSyncOverride {
            if let deleteNetworkInterfaceSyncOverrideTyped = deleteNetworkInterfaceSyncOverrideNonOptional
                    as? DeleteNetworkInterfaceSyncType<InvocationReportingType> {
                return try deleteNetworkInterfaceSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteNetworkInterfacePermission operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteNetworkInterfacePermissionRequest object being passed to this operation.
         - completion: The DeleteNetworkInterfacePermissionResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteNetworkInterfacePermissionResult
           object will be validated before being returned to caller.
     */
    public func deleteNetworkInterfacePermissionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteNetworkInterfacePermissionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteNetworkInterfacePermissionResult, HTTPClientError>) -> ()) throws {
        if let deleteNetworkInterfacePermissionAsyncOverrideNonOptional = deleteNetworkInterfacePermissionAsyncOverride {
            if let deleteNetworkInterfacePermissionAsyncOverrideTyped = deleteNetworkInterfacePermissionAsyncOverrideNonOptional
                    as? DeleteNetworkInterfacePermissionAsyncType<InvocationReportingType> {
                return try deleteNetworkInterfacePermissionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteNetworkInterfacePermissionResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteNetworkInterfacePermission operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteNetworkInterfacePermissionRequest object being passed to this operation.
     - Returns: The DeleteNetworkInterfacePermissionResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteNetworkInterfacePermissionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteNetworkInterfacePermissionRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteNetworkInterfacePermissionResult {
        if let deleteNetworkInterfacePermissionSyncOverrideNonOptional = deleteNetworkInterfacePermissionSyncOverride {
            if let deleteNetworkInterfacePermissionSyncOverrideTyped = deleteNetworkInterfacePermissionSyncOverrideNonOptional
                    as? DeleteNetworkInterfacePermissionSyncType<InvocationReportingType> {
                return try deleteNetworkInterfacePermissionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteNetworkInterfacePermissionResult.__default
    }

    /**
     Invokes the DeletePlacementGroup operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeletePlacementGroupRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deletePlacementGroupAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeletePlacementGroupRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deletePlacementGroupAsyncOverrideNonOptional = deletePlacementGroupAsyncOverride {
            if let deletePlacementGroupAsyncOverrideTyped = deletePlacementGroupAsyncOverrideNonOptional
                    as? DeletePlacementGroupAsyncType<InvocationReportingType> {
                return try deletePlacementGroupAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeletePlacementGroup operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeletePlacementGroupRequest object being passed to this operation.
     */
    public func deletePlacementGroupSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeletePlacementGroupRequest,
            reporting: InvocationReportingType) throws {
        if let deletePlacementGroupSyncOverrideNonOptional = deletePlacementGroupSyncOverride {
            if let deletePlacementGroupSyncOverrideTyped = deletePlacementGroupSyncOverrideNonOptional
                    as? DeletePlacementGroupSyncType<InvocationReportingType> {
                return try deletePlacementGroupSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteQueuedReservedInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteQueuedReservedInstancesRequest object being passed to this operation.
         - completion: The DeleteQueuedReservedInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteQueuedReservedInstancesResult
           object will be validated before being returned to caller.
     */
    public func deleteQueuedReservedInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteQueuedReservedInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteQueuedReservedInstancesResult, HTTPClientError>) -> ()) throws {
        if let deleteQueuedReservedInstancesAsyncOverrideNonOptional = deleteQueuedReservedInstancesAsyncOverride {
            if let deleteQueuedReservedInstancesAsyncOverrideTyped = deleteQueuedReservedInstancesAsyncOverrideNonOptional
                    as? DeleteQueuedReservedInstancesAsyncType<InvocationReportingType> {
                return try deleteQueuedReservedInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteQueuedReservedInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteQueuedReservedInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteQueuedReservedInstancesRequest object being passed to this operation.
     - Returns: The DeleteQueuedReservedInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteQueuedReservedInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteQueuedReservedInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteQueuedReservedInstancesResult {
        if let deleteQueuedReservedInstancesSyncOverrideNonOptional = deleteQueuedReservedInstancesSyncOverride {
            if let deleteQueuedReservedInstancesSyncOverrideTyped = deleteQueuedReservedInstancesSyncOverrideNonOptional
                    as? DeleteQueuedReservedInstancesSyncType<InvocationReportingType> {
                return try deleteQueuedReservedInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteQueuedReservedInstancesResult.__default
    }

    /**
     Invokes the DeleteRoute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteRouteRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteRouteAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteRouteRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteRouteAsyncOverrideNonOptional = deleteRouteAsyncOverride {
            if let deleteRouteAsyncOverrideTyped = deleteRouteAsyncOverrideNonOptional
                    as? DeleteRouteAsyncType<InvocationReportingType> {
                return try deleteRouteAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteRoute operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteRouteRequest object being passed to this operation.
     */
    public func deleteRouteSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteRouteRequest,
            reporting: InvocationReportingType) throws {
        if let deleteRouteSyncOverrideNonOptional = deleteRouteSyncOverride {
            if let deleteRouteSyncOverrideTyped = deleteRouteSyncOverrideNonOptional
                    as? DeleteRouteSyncType<InvocationReportingType> {
                return try deleteRouteSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteRouteTable operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteRouteTableRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteRouteTableAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteRouteTableRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteRouteTableAsyncOverrideNonOptional = deleteRouteTableAsyncOverride {
            if let deleteRouteTableAsyncOverrideTyped = deleteRouteTableAsyncOverrideNonOptional
                    as? DeleteRouteTableAsyncType<InvocationReportingType> {
                return try deleteRouteTableAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteRouteTable operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteRouteTableRequest object being passed to this operation.
     */
    public func deleteRouteTableSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteRouteTableRequest,
            reporting: InvocationReportingType) throws {
        if let deleteRouteTableSyncOverrideNonOptional = deleteRouteTableSyncOverride {
            if let deleteRouteTableSyncOverrideTyped = deleteRouteTableSyncOverrideNonOptional
                    as? DeleteRouteTableSyncType<InvocationReportingType> {
                return try deleteRouteTableSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteSecurityGroup operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteSecurityGroupRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteSecurityGroupAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteSecurityGroupRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteSecurityGroupAsyncOverrideNonOptional = deleteSecurityGroupAsyncOverride {
            if let deleteSecurityGroupAsyncOverrideTyped = deleteSecurityGroupAsyncOverrideNonOptional
                    as? DeleteSecurityGroupAsyncType<InvocationReportingType> {
                return try deleteSecurityGroupAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteSecurityGroup operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteSecurityGroupRequest object being passed to this operation.
     */
    public func deleteSecurityGroupSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteSecurityGroupRequest,
            reporting: InvocationReportingType) throws {
        if let deleteSecurityGroupSyncOverrideNonOptional = deleteSecurityGroupSyncOverride {
            if let deleteSecurityGroupSyncOverrideTyped = deleteSecurityGroupSyncOverrideNonOptional
                    as? DeleteSecurityGroupSyncType<InvocationReportingType> {
                return try deleteSecurityGroupSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteSnapshot operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteSnapshotRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteSnapshotAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteSnapshotRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteSnapshotAsyncOverrideNonOptional = deleteSnapshotAsyncOverride {
            if let deleteSnapshotAsyncOverrideTyped = deleteSnapshotAsyncOverrideNonOptional
                    as? DeleteSnapshotAsyncType<InvocationReportingType> {
                return try deleteSnapshotAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteSnapshot operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteSnapshotRequest object being passed to this operation.
     */
    public func deleteSnapshotSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteSnapshotRequest,
            reporting: InvocationReportingType) throws {
        if let deleteSnapshotSyncOverrideNonOptional = deleteSnapshotSyncOverride {
            if let deleteSnapshotSyncOverrideTyped = deleteSnapshotSyncOverrideNonOptional
                    as? DeleteSnapshotSyncType<InvocationReportingType> {
                return try deleteSnapshotSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteSpotDatafeedSubscription operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteSpotDatafeedSubscriptionRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteSpotDatafeedSubscriptionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteSpotDatafeedSubscriptionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteSpotDatafeedSubscriptionAsyncOverrideNonOptional = deleteSpotDatafeedSubscriptionAsyncOverride {
            if let deleteSpotDatafeedSubscriptionAsyncOverrideTyped = deleteSpotDatafeedSubscriptionAsyncOverrideNonOptional
                    as? DeleteSpotDatafeedSubscriptionAsyncType<InvocationReportingType> {
                return try deleteSpotDatafeedSubscriptionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteSpotDatafeedSubscription operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteSpotDatafeedSubscriptionRequest object being passed to this operation.
     */
    public func deleteSpotDatafeedSubscriptionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteSpotDatafeedSubscriptionRequest,
            reporting: InvocationReportingType) throws {
        if let deleteSpotDatafeedSubscriptionSyncOverrideNonOptional = deleteSpotDatafeedSubscriptionSyncOverride {
            if let deleteSpotDatafeedSubscriptionSyncOverrideTyped = deleteSpotDatafeedSubscriptionSyncOverrideNonOptional
                    as? DeleteSpotDatafeedSubscriptionSyncType<InvocationReportingType> {
                return try deleteSpotDatafeedSubscriptionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteSubnet operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteSubnetRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteSubnetAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteSubnetRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteSubnetAsyncOverrideNonOptional = deleteSubnetAsyncOverride {
            if let deleteSubnetAsyncOverrideTyped = deleteSubnetAsyncOverrideNonOptional
                    as? DeleteSubnetAsyncType<InvocationReportingType> {
                return try deleteSubnetAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteSubnet operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteSubnetRequest object being passed to this operation.
     */
    public func deleteSubnetSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteSubnetRequest,
            reporting: InvocationReportingType) throws {
        if let deleteSubnetSyncOverrideNonOptional = deleteSubnetSyncOverride {
            if let deleteSubnetSyncOverrideTyped = deleteSubnetSyncOverrideNonOptional
                    as? DeleteSubnetSyncType<InvocationReportingType> {
                return try deleteSubnetSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteTags operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteTagsRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteTagsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTagsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteTagsAsyncOverrideNonOptional = deleteTagsAsyncOverride {
            if let deleteTagsAsyncOverrideTyped = deleteTagsAsyncOverrideNonOptional
                    as? DeleteTagsAsyncType<InvocationReportingType> {
                return try deleteTagsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteTags operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteTagsRequest object being passed to this operation.
     */
    public func deleteTagsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTagsRequest,
            reporting: InvocationReportingType) throws {
        if let deleteTagsSyncOverrideNonOptional = deleteTagsSyncOverride {
            if let deleteTagsSyncOverrideTyped = deleteTagsSyncOverrideNonOptional
                    as? DeleteTagsSyncType<InvocationReportingType> {
                return try deleteTagsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteTrafficMirrorFilter operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteTrafficMirrorFilterRequest object being passed to this operation.
         - completion: The DeleteTrafficMirrorFilterResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteTrafficMirrorFilterResult
           object will be validated before being returned to caller.
     */
    public func deleteTrafficMirrorFilterAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTrafficMirrorFilterRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteTrafficMirrorFilterResult, HTTPClientError>) -> ()) throws {
        if let deleteTrafficMirrorFilterAsyncOverrideNonOptional = deleteTrafficMirrorFilterAsyncOverride {
            if let deleteTrafficMirrorFilterAsyncOverrideTyped = deleteTrafficMirrorFilterAsyncOverrideNonOptional
                    as? DeleteTrafficMirrorFilterAsyncType<InvocationReportingType> {
                return try deleteTrafficMirrorFilterAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteTrafficMirrorFilterResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteTrafficMirrorFilter operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteTrafficMirrorFilterRequest object being passed to this operation.
     - Returns: The DeleteTrafficMirrorFilterResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteTrafficMirrorFilterSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTrafficMirrorFilterRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteTrafficMirrorFilterResult {
        if let deleteTrafficMirrorFilterSyncOverrideNonOptional = deleteTrafficMirrorFilterSyncOverride {
            if let deleteTrafficMirrorFilterSyncOverrideTyped = deleteTrafficMirrorFilterSyncOverrideNonOptional
                    as? DeleteTrafficMirrorFilterSyncType<InvocationReportingType> {
                return try deleteTrafficMirrorFilterSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteTrafficMirrorFilterResult.__default
    }

    /**
     Invokes the DeleteTrafficMirrorFilterRule operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteTrafficMirrorFilterRuleRequest object being passed to this operation.
         - completion: The DeleteTrafficMirrorFilterRuleResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteTrafficMirrorFilterRuleResult
           object will be validated before being returned to caller.
     */
    public func deleteTrafficMirrorFilterRuleAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTrafficMirrorFilterRuleRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteTrafficMirrorFilterRuleResult, HTTPClientError>) -> ()) throws {
        if let deleteTrafficMirrorFilterRuleAsyncOverrideNonOptional = deleteTrafficMirrorFilterRuleAsyncOverride {
            if let deleteTrafficMirrorFilterRuleAsyncOverrideTyped = deleteTrafficMirrorFilterRuleAsyncOverrideNonOptional
                    as? DeleteTrafficMirrorFilterRuleAsyncType<InvocationReportingType> {
                return try deleteTrafficMirrorFilterRuleAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteTrafficMirrorFilterRuleResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteTrafficMirrorFilterRule operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteTrafficMirrorFilterRuleRequest object being passed to this operation.
     - Returns: The DeleteTrafficMirrorFilterRuleResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteTrafficMirrorFilterRuleSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTrafficMirrorFilterRuleRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteTrafficMirrorFilterRuleResult {
        if let deleteTrafficMirrorFilterRuleSyncOverrideNonOptional = deleteTrafficMirrorFilterRuleSyncOverride {
            if let deleteTrafficMirrorFilterRuleSyncOverrideTyped = deleteTrafficMirrorFilterRuleSyncOverrideNonOptional
                    as? DeleteTrafficMirrorFilterRuleSyncType<InvocationReportingType> {
                return try deleteTrafficMirrorFilterRuleSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteTrafficMirrorFilterRuleResult.__default
    }

    /**
     Invokes the DeleteTrafficMirrorSession operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteTrafficMirrorSessionRequest object being passed to this operation.
         - completion: The DeleteTrafficMirrorSessionResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteTrafficMirrorSessionResult
           object will be validated before being returned to caller.
     */
    public func deleteTrafficMirrorSessionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTrafficMirrorSessionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteTrafficMirrorSessionResult, HTTPClientError>) -> ()) throws {
        if let deleteTrafficMirrorSessionAsyncOverrideNonOptional = deleteTrafficMirrorSessionAsyncOverride {
            if let deleteTrafficMirrorSessionAsyncOverrideTyped = deleteTrafficMirrorSessionAsyncOverrideNonOptional
                    as? DeleteTrafficMirrorSessionAsyncType<InvocationReportingType> {
                return try deleteTrafficMirrorSessionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteTrafficMirrorSessionResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteTrafficMirrorSession operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteTrafficMirrorSessionRequest object being passed to this operation.
     - Returns: The DeleteTrafficMirrorSessionResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteTrafficMirrorSessionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTrafficMirrorSessionRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteTrafficMirrorSessionResult {
        if let deleteTrafficMirrorSessionSyncOverrideNonOptional = deleteTrafficMirrorSessionSyncOverride {
            if let deleteTrafficMirrorSessionSyncOverrideTyped = deleteTrafficMirrorSessionSyncOverrideNonOptional
                    as? DeleteTrafficMirrorSessionSyncType<InvocationReportingType> {
                return try deleteTrafficMirrorSessionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteTrafficMirrorSessionResult.__default
    }

    /**
     Invokes the DeleteTrafficMirrorTarget operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteTrafficMirrorTargetRequest object being passed to this operation.
         - completion: The DeleteTrafficMirrorTargetResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteTrafficMirrorTargetResult
           object will be validated before being returned to caller.
     */
    public func deleteTrafficMirrorTargetAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTrafficMirrorTargetRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteTrafficMirrorTargetResult, HTTPClientError>) -> ()) throws {
        if let deleteTrafficMirrorTargetAsyncOverrideNonOptional = deleteTrafficMirrorTargetAsyncOverride {
            if let deleteTrafficMirrorTargetAsyncOverrideTyped = deleteTrafficMirrorTargetAsyncOverrideNonOptional
                    as? DeleteTrafficMirrorTargetAsyncType<InvocationReportingType> {
                return try deleteTrafficMirrorTargetAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteTrafficMirrorTargetResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteTrafficMirrorTarget operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteTrafficMirrorTargetRequest object being passed to this operation.
     - Returns: The DeleteTrafficMirrorTargetResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteTrafficMirrorTargetSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTrafficMirrorTargetRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteTrafficMirrorTargetResult {
        if let deleteTrafficMirrorTargetSyncOverrideNonOptional = deleteTrafficMirrorTargetSyncOverride {
            if let deleteTrafficMirrorTargetSyncOverrideTyped = deleteTrafficMirrorTargetSyncOverrideNonOptional
                    as? DeleteTrafficMirrorTargetSyncType<InvocationReportingType> {
                return try deleteTrafficMirrorTargetSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteTrafficMirrorTargetResult.__default
    }

    /**
     Invokes the DeleteTransitGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteTransitGatewayRequest object being passed to this operation.
         - completion: The DeleteTransitGatewayResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteTransitGatewayResult
           object will be validated before being returned to caller.
     */
    public func deleteTransitGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTransitGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteTransitGatewayResult, HTTPClientError>) -> ()) throws {
        if let deleteTransitGatewayAsyncOverrideNonOptional = deleteTransitGatewayAsyncOverride {
            if let deleteTransitGatewayAsyncOverrideTyped = deleteTransitGatewayAsyncOverrideNonOptional
                    as? DeleteTransitGatewayAsyncType<InvocationReportingType> {
                return try deleteTransitGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteTransitGatewayResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteTransitGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteTransitGatewayRequest object being passed to this operation.
     - Returns: The DeleteTransitGatewayResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteTransitGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTransitGatewayRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteTransitGatewayResult {
        if let deleteTransitGatewaySyncOverrideNonOptional = deleteTransitGatewaySyncOverride {
            if let deleteTransitGatewaySyncOverrideTyped = deleteTransitGatewaySyncOverrideNonOptional
                    as? DeleteTransitGatewaySyncType<InvocationReportingType> {
                return try deleteTransitGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteTransitGatewayResult.__default
    }

    /**
     Invokes the DeleteTransitGatewayMulticastDomain operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteTransitGatewayMulticastDomainRequest object being passed to this operation.
         - completion: The DeleteTransitGatewayMulticastDomainResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteTransitGatewayMulticastDomainResult
           object will be validated before being returned to caller.
     */
    public func deleteTransitGatewayMulticastDomainAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTransitGatewayMulticastDomainRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteTransitGatewayMulticastDomainResult, HTTPClientError>) -> ()) throws {
        if let deleteTransitGatewayMulticastDomainAsyncOverrideNonOptional = deleteTransitGatewayMulticastDomainAsyncOverride {
            if let deleteTransitGatewayMulticastDomainAsyncOverrideTyped = deleteTransitGatewayMulticastDomainAsyncOverrideNonOptional
                    as? DeleteTransitGatewayMulticastDomainAsyncType<InvocationReportingType> {
                return try deleteTransitGatewayMulticastDomainAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteTransitGatewayMulticastDomainResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteTransitGatewayMulticastDomain operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteTransitGatewayMulticastDomainRequest object being passed to this operation.
     - Returns: The DeleteTransitGatewayMulticastDomainResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteTransitGatewayMulticastDomainSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTransitGatewayMulticastDomainRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteTransitGatewayMulticastDomainResult {
        if let deleteTransitGatewayMulticastDomainSyncOverrideNonOptional = deleteTransitGatewayMulticastDomainSyncOverride {
            if let deleteTransitGatewayMulticastDomainSyncOverrideTyped = deleteTransitGatewayMulticastDomainSyncOverrideNonOptional
                    as? DeleteTransitGatewayMulticastDomainSyncType<InvocationReportingType> {
                return try deleteTransitGatewayMulticastDomainSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteTransitGatewayMulticastDomainResult.__default
    }

    /**
     Invokes the DeleteTransitGatewayPeeringAttachment operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteTransitGatewayPeeringAttachmentRequest object being passed to this operation.
         - completion: The DeleteTransitGatewayPeeringAttachmentResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteTransitGatewayPeeringAttachmentResult
           object will be validated before being returned to caller.
     */
    public func deleteTransitGatewayPeeringAttachmentAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTransitGatewayPeeringAttachmentRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteTransitGatewayPeeringAttachmentResult, HTTPClientError>) -> ()) throws {
        if let deleteTransitGatewayPeeringAttachmentAsyncOverrideNonOptional = deleteTransitGatewayPeeringAttachmentAsyncOverride {
            if let deleteTransitGatewayPeeringAttachmentAsyncOverrideTyped = deleteTransitGatewayPeeringAttachmentAsyncOverrideNonOptional
                    as? DeleteTransitGatewayPeeringAttachmentAsyncType<InvocationReportingType> {
                return try deleteTransitGatewayPeeringAttachmentAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteTransitGatewayPeeringAttachmentResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteTransitGatewayPeeringAttachment operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteTransitGatewayPeeringAttachmentRequest object being passed to this operation.
     - Returns: The DeleteTransitGatewayPeeringAttachmentResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteTransitGatewayPeeringAttachmentSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTransitGatewayPeeringAttachmentRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteTransitGatewayPeeringAttachmentResult {
        if let deleteTransitGatewayPeeringAttachmentSyncOverrideNonOptional = deleteTransitGatewayPeeringAttachmentSyncOverride {
            if let deleteTransitGatewayPeeringAttachmentSyncOverrideTyped = deleteTransitGatewayPeeringAttachmentSyncOverrideNonOptional
                    as? DeleteTransitGatewayPeeringAttachmentSyncType<InvocationReportingType> {
                return try deleteTransitGatewayPeeringAttachmentSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteTransitGatewayPeeringAttachmentResult.__default
    }

    /**
     Invokes the DeleteTransitGatewayRoute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteTransitGatewayRouteRequest object being passed to this operation.
         - completion: The DeleteTransitGatewayRouteResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteTransitGatewayRouteResult
           object will be validated before being returned to caller.
     */
    public func deleteTransitGatewayRouteAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTransitGatewayRouteRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteTransitGatewayRouteResult, HTTPClientError>) -> ()) throws {
        if let deleteTransitGatewayRouteAsyncOverrideNonOptional = deleteTransitGatewayRouteAsyncOverride {
            if let deleteTransitGatewayRouteAsyncOverrideTyped = deleteTransitGatewayRouteAsyncOverrideNonOptional
                    as? DeleteTransitGatewayRouteAsyncType<InvocationReportingType> {
                return try deleteTransitGatewayRouteAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteTransitGatewayRouteResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteTransitGatewayRoute operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteTransitGatewayRouteRequest object being passed to this operation.
     - Returns: The DeleteTransitGatewayRouteResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteTransitGatewayRouteSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTransitGatewayRouteRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteTransitGatewayRouteResult {
        if let deleteTransitGatewayRouteSyncOverrideNonOptional = deleteTransitGatewayRouteSyncOverride {
            if let deleteTransitGatewayRouteSyncOverrideTyped = deleteTransitGatewayRouteSyncOverrideNonOptional
                    as? DeleteTransitGatewayRouteSyncType<InvocationReportingType> {
                return try deleteTransitGatewayRouteSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteTransitGatewayRouteResult.__default
    }

    /**
     Invokes the DeleteTransitGatewayRouteTable operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteTransitGatewayRouteTableRequest object being passed to this operation.
         - completion: The DeleteTransitGatewayRouteTableResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteTransitGatewayRouteTableResult
           object will be validated before being returned to caller.
     */
    public func deleteTransitGatewayRouteTableAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTransitGatewayRouteTableRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteTransitGatewayRouteTableResult, HTTPClientError>) -> ()) throws {
        if let deleteTransitGatewayRouteTableAsyncOverrideNonOptional = deleteTransitGatewayRouteTableAsyncOverride {
            if let deleteTransitGatewayRouteTableAsyncOverrideTyped = deleteTransitGatewayRouteTableAsyncOverrideNonOptional
                    as? DeleteTransitGatewayRouteTableAsyncType<InvocationReportingType> {
                return try deleteTransitGatewayRouteTableAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteTransitGatewayRouteTableResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteTransitGatewayRouteTable operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteTransitGatewayRouteTableRequest object being passed to this operation.
     - Returns: The DeleteTransitGatewayRouteTableResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteTransitGatewayRouteTableSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTransitGatewayRouteTableRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteTransitGatewayRouteTableResult {
        if let deleteTransitGatewayRouteTableSyncOverrideNonOptional = deleteTransitGatewayRouteTableSyncOverride {
            if let deleteTransitGatewayRouteTableSyncOverrideTyped = deleteTransitGatewayRouteTableSyncOverrideNonOptional
                    as? DeleteTransitGatewayRouteTableSyncType<InvocationReportingType> {
                return try deleteTransitGatewayRouteTableSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteTransitGatewayRouteTableResult.__default
    }

    /**
     Invokes the DeleteTransitGatewayVpcAttachment operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteTransitGatewayVpcAttachmentRequest object being passed to this operation.
         - completion: The DeleteTransitGatewayVpcAttachmentResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteTransitGatewayVpcAttachmentResult
           object will be validated before being returned to caller.
     */
    public func deleteTransitGatewayVpcAttachmentAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTransitGatewayVpcAttachmentRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteTransitGatewayVpcAttachmentResult, HTTPClientError>) -> ()) throws {
        if let deleteTransitGatewayVpcAttachmentAsyncOverrideNonOptional = deleteTransitGatewayVpcAttachmentAsyncOverride {
            if let deleteTransitGatewayVpcAttachmentAsyncOverrideTyped = deleteTransitGatewayVpcAttachmentAsyncOverrideNonOptional
                    as? DeleteTransitGatewayVpcAttachmentAsyncType<InvocationReportingType> {
                return try deleteTransitGatewayVpcAttachmentAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteTransitGatewayVpcAttachmentResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteTransitGatewayVpcAttachment operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteTransitGatewayVpcAttachmentRequest object being passed to this operation.
     - Returns: The DeleteTransitGatewayVpcAttachmentResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteTransitGatewayVpcAttachmentSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteTransitGatewayVpcAttachmentRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteTransitGatewayVpcAttachmentResult {
        if let deleteTransitGatewayVpcAttachmentSyncOverrideNonOptional = deleteTransitGatewayVpcAttachmentSyncOverride {
            if let deleteTransitGatewayVpcAttachmentSyncOverrideTyped = deleteTransitGatewayVpcAttachmentSyncOverrideNonOptional
                    as? DeleteTransitGatewayVpcAttachmentSyncType<InvocationReportingType> {
                return try deleteTransitGatewayVpcAttachmentSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteTransitGatewayVpcAttachmentResult.__default
    }

    /**
     Invokes the DeleteVolume operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteVolumeRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteVolumeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVolumeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteVolumeAsyncOverrideNonOptional = deleteVolumeAsyncOverride {
            if let deleteVolumeAsyncOverrideTyped = deleteVolumeAsyncOverrideNonOptional
                    as? DeleteVolumeAsyncType<InvocationReportingType> {
                return try deleteVolumeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteVolume operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteVolumeRequest object being passed to this operation.
     */
    public func deleteVolumeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVolumeRequest,
            reporting: InvocationReportingType) throws {
        if let deleteVolumeSyncOverrideNonOptional = deleteVolumeSyncOverride {
            if let deleteVolumeSyncOverrideTyped = deleteVolumeSyncOverrideNonOptional
                    as? DeleteVolumeSyncType<InvocationReportingType> {
                return try deleteVolumeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteVpc operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteVpcRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteVpcAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpcRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteVpcAsyncOverrideNonOptional = deleteVpcAsyncOverride {
            if let deleteVpcAsyncOverrideTyped = deleteVpcAsyncOverrideNonOptional
                    as? DeleteVpcAsyncType<InvocationReportingType> {
                return try deleteVpcAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteVpc operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteVpcRequest object being passed to this operation.
     */
    public func deleteVpcSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpcRequest,
            reporting: InvocationReportingType) throws {
        if let deleteVpcSyncOverrideNonOptional = deleteVpcSyncOverride {
            if let deleteVpcSyncOverrideTyped = deleteVpcSyncOverrideNonOptional
                    as? DeleteVpcSyncType<InvocationReportingType> {
                return try deleteVpcSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteVpcEndpointConnectionNotifications operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteVpcEndpointConnectionNotificationsRequest object being passed to this operation.
         - completion: The DeleteVpcEndpointConnectionNotificationsResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteVpcEndpointConnectionNotificationsResult
           object will be validated before being returned to caller.
     */
    public func deleteVpcEndpointConnectionNotificationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpcEndpointConnectionNotificationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteVpcEndpointConnectionNotificationsResult, HTTPClientError>) -> ()) throws {
        if let deleteVpcEndpointConnectionNotificationsAsyncOverrideNonOptional = deleteVpcEndpointConnectionNotificationsAsyncOverride {
            if let deleteVpcEndpointConnectionNotificationsAsyncOverrideTyped = deleteVpcEndpointConnectionNotificationsAsyncOverrideNonOptional
                    as? DeleteVpcEndpointConnectionNotificationsAsyncType<InvocationReportingType> {
                return try deleteVpcEndpointConnectionNotificationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteVpcEndpointConnectionNotificationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteVpcEndpointConnectionNotifications operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteVpcEndpointConnectionNotificationsRequest object being passed to this operation.
     - Returns: The DeleteVpcEndpointConnectionNotificationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteVpcEndpointConnectionNotificationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpcEndpointConnectionNotificationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteVpcEndpointConnectionNotificationsResult {
        if let deleteVpcEndpointConnectionNotificationsSyncOverrideNonOptional = deleteVpcEndpointConnectionNotificationsSyncOverride {
            if let deleteVpcEndpointConnectionNotificationsSyncOverrideTyped = deleteVpcEndpointConnectionNotificationsSyncOverrideNonOptional
                    as? DeleteVpcEndpointConnectionNotificationsSyncType<InvocationReportingType> {
                return try deleteVpcEndpointConnectionNotificationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteVpcEndpointConnectionNotificationsResult.__default
    }

    /**
     Invokes the DeleteVpcEndpointServiceConfigurations operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteVpcEndpointServiceConfigurationsRequest object being passed to this operation.
         - completion: The DeleteVpcEndpointServiceConfigurationsResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteVpcEndpointServiceConfigurationsResult
           object will be validated before being returned to caller.
     */
    public func deleteVpcEndpointServiceConfigurationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpcEndpointServiceConfigurationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteVpcEndpointServiceConfigurationsResult, HTTPClientError>) -> ()) throws {
        if let deleteVpcEndpointServiceConfigurationsAsyncOverrideNonOptional = deleteVpcEndpointServiceConfigurationsAsyncOverride {
            if let deleteVpcEndpointServiceConfigurationsAsyncOverrideTyped = deleteVpcEndpointServiceConfigurationsAsyncOverrideNonOptional
                    as? DeleteVpcEndpointServiceConfigurationsAsyncType<InvocationReportingType> {
                return try deleteVpcEndpointServiceConfigurationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteVpcEndpointServiceConfigurationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteVpcEndpointServiceConfigurations operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteVpcEndpointServiceConfigurationsRequest object being passed to this operation.
     - Returns: The DeleteVpcEndpointServiceConfigurationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteVpcEndpointServiceConfigurationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpcEndpointServiceConfigurationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteVpcEndpointServiceConfigurationsResult {
        if let deleteVpcEndpointServiceConfigurationsSyncOverrideNonOptional = deleteVpcEndpointServiceConfigurationsSyncOverride {
            if let deleteVpcEndpointServiceConfigurationsSyncOverrideTyped = deleteVpcEndpointServiceConfigurationsSyncOverrideNonOptional
                    as? DeleteVpcEndpointServiceConfigurationsSyncType<InvocationReportingType> {
                return try deleteVpcEndpointServiceConfigurationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteVpcEndpointServiceConfigurationsResult.__default
    }

    /**
     Invokes the DeleteVpcEndpoints operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteVpcEndpointsRequest object being passed to this operation.
         - completion: The DeleteVpcEndpointsResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteVpcEndpointsResult
           object will be validated before being returned to caller.
     */
    public func deleteVpcEndpointsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpcEndpointsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteVpcEndpointsResult, HTTPClientError>) -> ()) throws {
        if let deleteVpcEndpointsAsyncOverrideNonOptional = deleteVpcEndpointsAsyncOverride {
            if let deleteVpcEndpointsAsyncOverrideTyped = deleteVpcEndpointsAsyncOverrideNonOptional
                    as? DeleteVpcEndpointsAsyncType<InvocationReportingType> {
                return try deleteVpcEndpointsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteVpcEndpointsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteVpcEndpoints operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteVpcEndpointsRequest object being passed to this operation.
     - Returns: The DeleteVpcEndpointsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteVpcEndpointsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpcEndpointsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteVpcEndpointsResult {
        if let deleteVpcEndpointsSyncOverrideNonOptional = deleteVpcEndpointsSyncOverride {
            if let deleteVpcEndpointsSyncOverrideTyped = deleteVpcEndpointsSyncOverrideNonOptional
                    as? DeleteVpcEndpointsSyncType<InvocationReportingType> {
                return try deleteVpcEndpointsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteVpcEndpointsResult.__default
    }

    /**
     Invokes the DeleteVpcPeeringConnection operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteVpcPeeringConnectionRequest object being passed to this operation.
         - completion: The DeleteVpcPeeringConnectionResult object or an error will be passed to this 
           callback when the operation is complete. The DeleteVpcPeeringConnectionResult
           object will be validated before being returned to caller.
     */
    public func deleteVpcPeeringConnectionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpcPeeringConnectionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeleteVpcPeeringConnectionResult, HTTPClientError>) -> ()) throws {
        if let deleteVpcPeeringConnectionAsyncOverrideNonOptional = deleteVpcPeeringConnectionAsyncOverride {
            if let deleteVpcPeeringConnectionAsyncOverrideTyped = deleteVpcPeeringConnectionAsyncOverrideNonOptional
                    as? DeleteVpcPeeringConnectionAsyncType<InvocationReportingType> {
                return try deleteVpcPeeringConnectionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeleteVpcPeeringConnectionResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeleteVpcPeeringConnection operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteVpcPeeringConnectionRequest object being passed to this operation.
     - Returns: The DeleteVpcPeeringConnectionResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deleteVpcPeeringConnectionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpcPeeringConnectionRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeleteVpcPeeringConnectionResult {
        if let deleteVpcPeeringConnectionSyncOverrideNonOptional = deleteVpcPeeringConnectionSyncOverride {
            if let deleteVpcPeeringConnectionSyncOverrideTyped = deleteVpcPeeringConnectionSyncOverrideNonOptional
                    as? DeleteVpcPeeringConnectionSyncType<InvocationReportingType> {
                return try deleteVpcPeeringConnectionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeleteVpcPeeringConnectionResult.__default
    }

    /**
     Invokes the DeleteVpnConnection operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteVpnConnectionRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteVpnConnectionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpnConnectionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteVpnConnectionAsyncOverrideNonOptional = deleteVpnConnectionAsyncOverride {
            if let deleteVpnConnectionAsyncOverrideTyped = deleteVpnConnectionAsyncOverrideNonOptional
                    as? DeleteVpnConnectionAsyncType<InvocationReportingType> {
                return try deleteVpnConnectionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteVpnConnection operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteVpnConnectionRequest object being passed to this operation.
     */
    public func deleteVpnConnectionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpnConnectionRequest,
            reporting: InvocationReportingType) throws {
        if let deleteVpnConnectionSyncOverrideNonOptional = deleteVpnConnectionSyncOverride {
            if let deleteVpnConnectionSyncOverrideTyped = deleteVpnConnectionSyncOverrideNonOptional
                    as? DeleteVpnConnectionSyncType<InvocationReportingType> {
                return try deleteVpnConnectionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteVpnConnectionRoute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteVpnConnectionRouteRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteVpnConnectionRouteAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpnConnectionRouteRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteVpnConnectionRouteAsyncOverrideNonOptional = deleteVpnConnectionRouteAsyncOverride {
            if let deleteVpnConnectionRouteAsyncOverrideTyped = deleteVpnConnectionRouteAsyncOverrideNonOptional
                    as? DeleteVpnConnectionRouteAsyncType<InvocationReportingType> {
                return try deleteVpnConnectionRouteAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteVpnConnectionRoute operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteVpnConnectionRouteRequest object being passed to this operation.
     */
    public func deleteVpnConnectionRouteSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpnConnectionRouteRequest,
            reporting: InvocationReportingType) throws {
        if let deleteVpnConnectionRouteSyncOverrideNonOptional = deleteVpnConnectionRouteSyncOverride {
            if let deleteVpnConnectionRouteSyncOverrideTyped = deleteVpnConnectionRouteSyncOverrideNonOptional
                    as? DeleteVpnConnectionRouteSyncType<InvocationReportingType> {
                return try deleteVpnConnectionRouteSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeleteVpnGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeleteVpnGatewayRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deleteVpnGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpnGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deleteVpnGatewayAsyncOverrideNonOptional = deleteVpnGatewayAsyncOverride {
            if let deleteVpnGatewayAsyncOverrideTyped = deleteVpnGatewayAsyncOverrideNonOptional
                    as? DeleteVpnGatewayAsyncType<InvocationReportingType> {
                return try deleteVpnGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeleteVpnGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeleteVpnGatewayRequest object being passed to this operation.
     */
    public func deleteVpnGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeleteVpnGatewayRequest,
            reporting: InvocationReportingType) throws {
        if let deleteVpnGatewaySyncOverrideNonOptional = deleteVpnGatewaySyncOverride {
            if let deleteVpnGatewaySyncOverrideTyped = deleteVpnGatewaySyncOverrideNonOptional
                    as? DeleteVpnGatewaySyncType<InvocationReportingType> {
                return try deleteVpnGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeprovisionByoipCidr operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeprovisionByoipCidrRequest object being passed to this operation.
         - completion: The DeprovisionByoipCidrResult object or an error will be passed to this 
           callback when the operation is complete. The DeprovisionByoipCidrResult
           object will be validated before being returned to caller.
     */
    public func deprovisionByoipCidrAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeprovisionByoipCidrRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeprovisionByoipCidrResult, HTTPClientError>) -> ()) throws {
        if let deprovisionByoipCidrAsyncOverrideNonOptional = deprovisionByoipCidrAsyncOverride {
            if let deprovisionByoipCidrAsyncOverrideTyped = deprovisionByoipCidrAsyncOverrideNonOptional
                    as? DeprovisionByoipCidrAsyncType<InvocationReportingType> {
                return try deprovisionByoipCidrAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeprovisionByoipCidrResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeprovisionByoipCidr operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeprovisionByoipCidrRequest object being passed to this operation.
     - Returns: The DeprovisionByoipCidrResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deprovisionByoipCidrSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeprovisionByoipCidrRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeprovisionByoipCidrResult {
        if let deprovisionByoipCidrSyncOverrideNonOptional = deprovisionByoipCidrSyncOverride {
            if let deprovisionByoipCidrSyncOverrideTyped = deprovisionByoipCidrSyncOverrideNonOptional
                    as? DeprovisionByoipCidrSyncType<InvocationReportingType> {
                return try deprovisionByoipCidrSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeprovisionByoipCidrResult.__default
    }

    /**
     Invokes the DeregisterImage operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeregisterImageRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func deregisterImageAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeregisterImageRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let deregisterImageAsyncOverrideNonOptional = deregisterImageAsyncOverride {
            if let deregisterImageAsyncOverrideTyped = deregisterImageAsyncOverrideNonOptional
                    as? DeregisterImageAsyncType<InvocationReportingType> {
                return try deregisterImageAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DeregisterImage operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeregisterImageRequest object being passed to this operation.
     */
    public func deregisterImageSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeregisterImageRequest,
            reporting: InvocationReportingType) throws {
        if let deregisterImageSyncOverrideNonOptional = deregisterImageSyncOverride {
            if let deregisterImageSyncOverrideTyped = deregisterImageSyncOverrideNonOptional
                    as? DeregisterImageSyncType<InvocationReportingType> {
                return try deregisterImageSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DeregisterTransitGatewayMulticastGroupMembers operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeregisterTransitGatewayMulticastGroupMembersRequest object being passed to this operation.
         - completion: The DeregisterTransitGatewayMulticastGroupMembersResult object or an error will be passed to this 
           callback when the operation is complete. The DeregisterTransitGatewayMulticastGroupMembersResult
           object will be validated before being returned to caller.
     */
    public func deregisterTransitGatewayMulticastGroupMembersAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeregisterTransitGatewayMulticastGroupMembersRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeregisterTransitGatewayMulticastGroupMembersResult, HTTPClientError>) -> ()) throws {
        if let deregisterTransitGatewayMulticastGroupMembersAsyncOverrideNonOptional = deregisterTransitGatewayMulticastGroupMembersAsyncOverride {
            if let deregisterTransitGatewayMulticastGroupMembersAsyncOverrideTyped = deregisterTransitGatewayMulticastGroupMembersAsyncOverrideNonOptional
                    as? DeregisterTransitGatewayMulticastGroupMembersAsyncType<InvocationReportingType> {
                return try deregisterTransitGatewayMulticastGroupMembersAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeregisterTransitGatewayMulticastGroupMembersResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeregisterTransitGatewayMulticastGroupMembers operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeregisterTransitGatewayMulticastGroupMembersRequest object being passed to this operation.
     - Returns: The DeregisterTransitGatewayMulticastGroupMembersResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deregisterTransitGatewayMulticastGroupMembersSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeregisterTransitGatewayMulticastGroupMembersRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeregisterTransitGatewayMulticastGroupMembersResult {
        if let deregisterTransitGatewayMulticastGroupMembersSyncOverrideNonOptional = deregisterTransitGatewayMulticastGroupMembersSyncOverride {
            if let deregisterTransitGatewayMulticastGroupMembersSyncOverrideTyped = deregisterTransitGatewayMulticastGroupMembersSyncOverrideNonOptional
                    as? DeregisterTransitGatewayMulticastGroupMembersSyncType<InvocationReportingType> {
                return try deregisterTransitGatewayMulticastGroupMembersSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeregisterTransitGatewayMulticastGroupMembersResult.__default
    }

    /**
     Invokes the DeregisterTransitGatewayMulticastGroupSources operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DeregisterTransitGatewayMulticastGroupSourcesRequest object being passed to this operation.
         - completion: The DeregisterTransitGatewayMulticastGroupSourcesResult object or an error will be passed to this 
           callback when the operation is complete. The DeregisterTransitGatewayMulticastGroupSourcesResult
           object will be validated before being returned to caller.
     */
    public func deregisterTransitGatewayMulticastGroupSourcesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeregisterTransitGatewayMulticastGroupSourcesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DeregisterTransitGatewayMulticastGroupSourcesResult, HTTPClientError>) -> ()) throws {
        if let deregisterTransitGatewayMulticastGroupSourcesAsyncOverrideNonOptional = deregisterTransitGatewayMulticastGroupSourcesAsyncOverride {
            if let deregisterTransitGatewayMulticastGroupSourcesAsyncOverrideTyped = deregisterTransitGatewayMulticastGroupSourcesAsyncOverrideNonOptional
                    as? DeregisterTransitGatewayMulticastGroupSourcesAsyncType<InvocationReportingType> {
                return try deregisterTransitGatewayMulticastGroupSourcesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DeregisterTransitGatewayMulticastGroupSourcesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DeregisterTransitGatewayMulticastGroupSources operation waiting for the response before returning.

     - Parameters:
         - input: The validated DeregisterTransitGatewayMulticastGroupSourcesRequest object being passed to this operation.
     - Returns: The DeregisterTransitGatewayMulticastGroupSourcesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func deregisterTransitGatewayMulticastGroupSourcesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DeregisterTransitGatewayMulticastGroupSourcesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DeregisterTransitGatewayMulticastGroupSourcesResult {
        if let deregisterTransitGatewayMulticastGroupSourcesSyncOverrideNonOptional = deregisterTransitGatewayMulticastGroupSourcesSyncOverride {
            if let deregisterTransitGatewayMulticastGroupSourcesSyncOverrideTyped = deregisterTransitGatewayMulticastGroupSourcesSyncOverrideNonOptional
                    as? DeregisterTransitGatewayMulticastGroupSourcesSyncType<InvocationReportingType> {
                return try deregisterTransitGatewayMulticastGroupSourcesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DeregisterTransitGatewayMulticastGroupSourcesResult.__default
    }

    /**
     Invokes the DescribeAccountAttributes operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeAccountAttributesRequest object being passed to this operation.
         - completion: The DescribeAccountAttributesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeAccountAttributesResult
           object will be validated before being returned to caller.
     */
    public func describeAccountAttributesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeAccountAttributesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeAccountAttributesResult, HTTPClientError>) -> ()) throws {
        if let describeAccountAttributesAsyncOverrideNonOptional = describeAccountAttributesAsyncOverride {
            if let describeAccountAttributesAsyncOverrideTyped = describeAccountAttributesAsyncOverrideNonOptional
                    as? DescribeAccountAttributesAsyncType<InvocationReportingType> {
                return try describeAccountAttributesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeAccountAttributesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeAccountAttributes operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeAccountAttributesRequest object being passed to this operation.
     - Returns: The DescribeAccountAttributesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeAccountAttributesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeAccountAttributesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeAccountAttributesResult {
        if let describeAccountAttributesSyncOverrideNonOptional = describeAccountAttributesSyncOverride {
            if let describeAccountAttributesSyncOverrideTyped = describeAccountAttributesSyncOverrideNonOptional
                    as? DescribeAccountAttributesSyncType<InvocationReportingType> {
                return try describeAccountAttributesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeAccountAttributesResult.__default
    }

    /**
     Invokes the DescribeAddresses operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeAddressesRequest object being passed to this operation.
         - completion: The DescribeAddressesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeAddressesResult
           object will be validated before being returned to caller.
     */
    public func describeAddressesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeAddressesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeAddressesResult, HTTPClientError>) -> ()) throws {
        if let describeAddressesAsyncOverrideNonOptional = describeAddressesAsyncOverride {
            if let describeAddressesAsyncOverrideTyped = describeAddressesAsyncOverrideNonOptional
                    as? DescribeAddressesAsyncType<InvocationReportingType> {
                return try describeAddressesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeAddressesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeAddresses operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeAddressesRequest object being passed to this operation.
     - Returns: The DescribeAddressesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeAddressesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeAddressesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeAddressesResult {
        if let describeAddressesSyncOverrideNonOptional = describeAddressesSyncOverride {
            if let describeAddressesSyncOverrideTyped = describeAddressesSyncOverrideNonOptional
                    as? DescribeAddressesSyncType<InvocationReportingType> {
                return try describeAddressesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeAddressesResult.__default
    }

    /**
     Invokes the DescribeAggregateIdFormat operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeAggregateIdFormatRequest object being passed to this operation.
         - completion: The DescribeAggregateIdFormatResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeAggregateIdFormatResult
           object will be validated before being returned to caller.
     */
    public func describeAggregateIdFormatAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeAggregateIdFormatRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeAggregateIdFormatResult, HTTPClientError>) -> ()) throws {
        if let describeAggregateIdFormatAsyncOverrideNonOptional = describeAggregateIdFormatAsyncOverride {
            if let describeAggregateIdFormatAsyncOverrideTyped = describeAggregateIdFormatAsyncOverrideNonOptional
                    as? DescribeAggregateIdFormatAsyncType<InvocationReportingType> {
                return try describeAggregateIdFormatAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeAggregateIdFormatResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeAggregateIdFormat operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeAggregateIdFormatRequest object being passed to this operation.
     - Returns: The DescribeAggregateIdFormatResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeAggregateIdFormatSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeAggregateIdFormatRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeAggregateIdFormatResult {
        if let describeAggregateIdFormatSyncOverrideNonOptional = describeAggregateIdFormatSyncOverride {
            if let describeAggregateIdFormatSyncOverrideTyped = describeAggregateIdFormatSyncOverrideNonOptional
                    as? DescribeAggregateIdFormatSyncType<InvocationReportingType> {
                return try describeAggregateIdFormatSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeAggregateIdFormatResult.__default
    }

    /**
     Invokes the DescribeAvailabilityZones operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeAvailabilityZonesRequest object being passed to this operation.
         - completion: The DescribeAvailabilityZonesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeAvailabilityZonesResult
           object will be validated before being returned to caller.
     */
    public func describeAvailabilityZonesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeAvailabilityZonesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeAvailabilityZonesResult, HTTPClientError>) -> ()) throws {
        if let describeAvailabilityZonesAsyncOverrideNonOptional = describeAvailabilityZonesAsyncOverride {
            if let describeAvailabilityZonesAsyncOverrideTyped = describeAvailabilityZonesAsyncOverrideNonOptional
                    as? DescribeAvailabilityZonesAsyncType<InvocationReportingType> {
                return try describeAvailabilityZonesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeAvailabilityZonesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeAvailabilityZones operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeAvailabilityZonesRequest object being passed to this operation.
     - Returns: The DescribeAvailabilityZonesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeAvailabilityZonesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeAvailabilityZonesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeAvailabilityZonesResult {
        if let describeAvailabilityZonesSyncOverrideNonOptional = describeAvailabilityZonesSyncOverride {
            if let describeAvailabilityZonesSyncOverrideTyped = describeAvailabilityZonesSyncOverrideNonOptional
                    as? DescribeAvailabilityZonesSyncType<InvocationReportingType> {
                return try describeAvailabilityZonesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeAvailabilityZonesResult.__default
    }

    /**
     Invokes the DescribeBundleTasks operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeBundleTasksRequest object being passed to this operation.
         - completion: The DescribeBundleTasksResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeBundleTasksResult
           object will be validated before being returned to caller.
     */
    public func describeBundleTasksAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeBundleTasksRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeBundleTasksResult, HTTPClientError>) -> ()) throws {
        if let describeBundleTasksAsyncOverrideNonOptional = describeBundleTasksAsyncOverride {
            if let describeBundleTasksAsyncOverrideTyped = describeBundleTasksAsyncOverrideNonOptional
                    as? DescribeBundleTasksAsyncType<InvocationReportingType> {
                return try describeBundleTasksAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeBundleTasksResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeBundleTasks operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeBundleTasksRequest object being passed to this operation.
     - Returns: The DescribeBundleTasksResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeBundleTasksSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeBundleTasksRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeBundleTasksResult {
        if let describeBundleTasksSyncOverrideNonOptional = describeBundleTasksSyncOverride {
            if let describeBundleTasksSyncOverrideTyped = describeBundleTasksSyncOverrideNonOptional
                    as? DescribeBundleTasksSyncType<InvocationReportingType> {
                return try describeBundleTasksSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeBundleTasksResult.__default
    }

    /**
     Invokes the DescribeByoipCidrs operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeByoipCidrsRequest object being passed to this operation.
         - completion: The DescribeByoipCidrsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeByoipCidrsResult
           object will be validated before being returned to caller.
     */
    public func describeByoipCidrsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeByoipCidrsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeByoipCidrsResult, HTTPClientError>) -> ()) throws {
        if let describeByoipCidrsAsyncOverrideNonOptional = describeByoipCidrsAsyncOverride {
            if let describeByoipCidrsAsyncOverrideTyped = describeByoipCidrsAsyncOverrideNonOptional
                    as? DescribeByoipCidrsAsyncType<InvocationReportingType> {
                return try describeByoipCidrsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeByoipCidrsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeByoipCidrs operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeByoipCidrsRequest object being passed to this operation.
     - Returns: The DescribeByoipCidrsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeByoipCidrsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeByoipCidrsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeByoipCidrsResult {
        if let describeByoipCidrsSyncOverrideNonOptional = describeByoipCidrsSyncOverride {
            if let describeByoipCidrsSyncOverrideTyped = describeByoipCidrsSyncOverrideNonOptional
                    as? DescribeByoipCidrsSyncType<InvocationReportingType> {
                return try describeByoipCidrsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeByoipCidrsResult.__default
    }

    /**
     Invokes the DescribeCapacityReservations operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeCapacityReservationsRequest object being passed to this operation.
         - completion: The DescribeCapacityReservationsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeCapacityReservationsResult
           object will be validated before being returned to caller.
     */
    public func describeCapacityReservationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeCapacityReservationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeCapacityReservationsResult, HTTPClientError>) -> ()) throws {
        if let describeCapacityReservationsAsyncOverrideNonOptional = describeCapacityReservationsAsyncOverride {
            if let describeCapacityReservationsAsyncOverrideTyped = describeCapacityReservationsAsyncOverrideNonOptional
                    as? DescribeCapacityReservationsAsyncType<InvocationReportingType> {
                return try describeCapacityReservationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeCapacityReservationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeCapacityReservations operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeCapacityReservationsRequest object being passed to this operation.
     - Returns: The DescribeCapacityReservationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeCapacityReservationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeCapacityReservationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeCapacityReservationsResult {
        if let describeCapacityReservationsSyncOverrideNonOptional = describeCapacityReservationsSyncOverride {
            if let describeCapacityReservationsSyncOverrideTyped = describeCapacityReservationsSyncOverrideNonOptional
                    as? DescribeCapacityReservationsSyncType<InvocationReportingType> {
                return try describeCapacityReservationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeCapacityReservationsResult.__default
    }

    /**
     Invokes the DescribeClassicLinkInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeClassicLinkInstancesRequest object being passed to this operation.
         - completion: The DescribeClassicLinkInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeClassicLinkInstancesResult
           object will be validated before being returned to caller.
     */
    public func describeClassicLinkInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeClassicLinkInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeClassicLinkInstancesResult, HTTPClientError>) -> ()) throws {
        if let describeClassicLinkInstancesAsyncOverrideNonOptional = describeClassicLinkInstancesAsyncOverride {
            if let describeClassicLinkInstancesAsyncOverrideTyped = describeClassicLinkInstancesAsyncOverrideNonOptional
                    as? DescribeClassicLinkInstancesAsyncType<InvocationReportingType> {
                return try describeClassicLinkInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeClassicLinkInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeClassicLinkInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeClassicLinkInstancesRequest object being passed to this operation.
     - Returns: The DescribeClassicLinkInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeClassicLinkInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeClassicLinkInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeClassicLinkInstancesResult {
        if let describeClassicLinkInstancesSyncOverrideNonOptional = describeClassicLinkInstancesSyncOverride {
            if let describeClassicLinkInstancesSyncOverrideTyped = describeClassicLinkInstancesSyncOverrideNonOptional
                    as? DescribeClassicLinkInstancesSyncType<InvocationReportingType> {
                return try describeClassicLinkInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeClassicLinkInstancesResult.__default
    }

    /**
     Invokes the DescribeClientVpnAuthorizationRules operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeClientVpnAuthorizationRulesRequest object being passed to this operation.
         - completion: The DescribeClientVpnAuthorizationRulesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeClientVpnAuthorizationRulesResult
           object will be validated before being returned to caller.
     */
    public func describeClientVpnAuthorizationRulesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeClientVpnAuthorizationRulesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeClientVpnAuthorizationRulesResult, HTTPClientError>) -> ()) throws {
        if let describeClientVpnAuthorizationRulesAsyncOverrideNonOptional = describeClientVpnAuthorizationRulesAsyncOverride {
            if let describeClientVpnAuthorizationRulesAsyncOverrideTyped = describeClientVpnAuthorizationRulesAsyncOverrideNonOptional
                    as? DescribeClientVpnAuthorizationRulesAsyncType<InvocationReportingType> {
                return try describeClientVpnAuthorizationRulesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeClientVpnAuthorizationRulesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeClientVpnAuthorizationRules operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeClientVpnAuthorizationRulesRequest object being passed to this operation.
     - Returns: The DescribeClientVpnAuthorizationRulesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeClientVpnAuthorizationRulesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeClientVpnAuthorizationRulesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeClientVpnAuthorizationRulesResult {
        if let describeClientVpnAuthorizationRulesSyncOverrideNonOptional = describeClientVpnAuthorizationRulesSyncOverride {
            if let describeClientVpnAuthorizationRulesSyncOverrideTyped = describeClientVpnAuthorizationRulesSyncOverrideNonOptional
                    as? DescribeClientVpnAuthorizationRulesSyncType<InvocationReportingType> {
                return try describeClientVpnAuthorizationRulesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeClientVpnAuthorizationRulesResult.__default
    }

    /**
     Invokes the DescribeClientVpnConnections operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeClientVpnConnectionsRequest object being passed to this operation.
         - completion: The DescribeClientVpnConnectionsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeClientVpnConnectionsResult
           object will be validated before being returned to caller.
     */
    public func describeClientVpnConnectionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeClientVpnConnectionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeClientVpnConnectionsResult, HTTPClientError>) -> ()) throws {
        if let describeClientVpnConnectionsAsyncOverrideNonOptional = describeClientVpnConnectionsAsyncOverride {
            if let describeClientVpnConnectionsAsyncOverrideTyped = describeClientVpnConnectionsAsyncOverrideNonOptional
                    as? DescribeClientVpnConnectionsAsyncType<InvocationReportingType> {
                return try describeClientVpnConnectionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeClientVpnConnectionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeClientVpnConnections operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeClientVpnConnectionsRequest object being passed to this operation.
     - Returns: The DescribeClientVpnConnectionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeClientVpnConnectionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeClientVpnConnectionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeClientVpnConnectionsResult {
        if let describeClientVpnConnectionsSyncOverrideNonOptional = describeClientVpnConnectionsSyncOverride {
            if let describeClientVpnConnectionsSyncOverrideTyped = describeClientVpnConnectionsSyncOverrideNonOptional
                    as? DescribeClientVpnConnectionsSyncType<InvocationReportingType> {
                return try describeClientVpnConnectionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeClientVpnConnectionsResult.__default
    }

    /**
     Invokes the DescribeClientVpnEndpoints operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeClientVpnEndpointsRequest object being passed to this operation.
         - completion: The DescribeClientVpnEndpointsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeClientVpnEndpointsResult
           object will be validated before being returned to caller.
     */
    public func describeClientVpnEndpointsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeClientVpnEndpointsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeClientVpnEndpointsResult, HTTPClientError>) -> ()) throws {
        if let describeClientVpnEndpointsAsyncOverrideNonOptional = describeClientVpnEndpointsAsyncOverride {
            if let describeClientVpnEndpointsAsyncOverrideTyped = describeClientVpnEndpointsAsyncOverrideNonOptional
                    as? DescribeClientVpnEndpointsAsyncType<InvocationReportingType> {
                return try describeClientVpnEndpointsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeClientVpnEndpointsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeClientVpnEndpoints operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeClientVpnEndpointsRequest object being passed to this operation.
     - Returns: The DescribeClientVpnEndpointsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeClientVpnEndpointsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeClientVpnEndpointsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeClientVpnEndpointsResult {
        if let describeClientVpnEndpointsSyncOverrideNonOptional = describeClientVpnEndpointsSyncOverride {
            if let describeClientVpnEndpointsSyncOverrideTyped = describeClientVpnEndpointsSyncOverrideNonOptional
                    as? DescribeClientVpnEndpointsSyncType<InvocationReportingType> {
                return try describeClientVpnEndpointsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeClientVpnEndpointsResult.__default
    }

    /**
     Invokes the DescribeClientVpnRoutes operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeClientVpnRoutesRequest object being passed to this operation.
         - completion: The DescribeClientVpnRoutesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeClientVpnRoutesResult
           object will be validated before being returned to caller.
     */
    public func describeClientVpnRoutesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeClientVpnRoutesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeClientVpnRoutesResult, HTTPClientError>) -> ()) throws {
        if let describeClientVpnRoutesAsyncOverrideNonOptional = describeClientVpnRoutesAsyncOverride {
            if let describeClientVpnRoutesAsyncOverrideTyped = describeClientVpnRoutesAsyncOverrideNonOptional
                    as? DescribeClientVpnRoutesAsyncType<InvocationReportingType> {
                return try describeClientVpnRoutesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeClientVpnRoutesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeClientVpnRoutes operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeClientVpnRoutesRequest object being passed to this operation.
     - Returns: The DescribeClientVpnRoutesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeClientVpnRoutesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeClientVpnRoutesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeClientVpnRoutesResult {
        if let describeClientVpnRoutesSyncOverrideNonOptional = describeClientVpnRoutesSyncOverride {
            if let describeClientVpnRoutesSyncOverrideTyped = describeClientVpnRoutesSyncOverrideNonOptional
                    as? DescribeClientVpnRoutesSyncType<InvocationReportingType> {
                return try describeClientVpnRoutesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeClientVpnRoutesResult.__default
    }

    /**
     Invokes the DescribeClientVpnTargetNetworks operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeClientVpnTargetNetworksRequest object being passed to this operation.
         - completion: The DescribeClientVpnTargetNetworksResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeClientVpnTargetNetworksResult
           object will be validated before being returned to caller.
     */
    public func describeClientVpnTargetNetworksAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeClientVpnTargetNetworksRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeClientVpnTargetNetworksResult, HTTPClientError>) -> ()) throws {
        if let describeClientVpnTargetNetworksAsyncOverrideNonOptional = describeClientVpnTargetNetworksAsyncOverride {
            if let describeClientVpnTargetNetworksAsyncOverrideTyped = describeClientVpnTargetNetworksAsyncOverrideNonOptional
                    as? DescribeClientVpnTargetNetworksAsyncType<InvocationReportingType> {
                return try describeClientVpnTargetNetworksAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeClientVpnTargetNetworksResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeClientVpnTargetNetworks operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeClientVpnTargetNetworksRequest object being passed to this operation.
     - Returns: The DescribeClientVpnTargetNetworksResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeClientVpnTargetNetworksSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeClientVpnTargetNetworksRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeClientVpnTargetNetworksResult {
        if let describeClientVpnTargetNetworksSyncOverrideNonOptional = describeClientVpnTargetNetworksSyncOverride {
            if let describeClientVpnTargetNetworksSyncOverrideTyped = describeClientVpnTargetNetworksSyncOverrideNonOptional
                    as? DescribeClientVpnTargetNetworksSyncType<InvocationReportingType> {
                return try describeClientVpnTargetNetworksSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeClientVpnTargetNetworksResult.__default
    }

    /**
     Invokes the DescribeCoipPools operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeCoipPoolsRequest object being passed to this operation.
         - completion: The DescribeCoipPoolsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeCoipPoolsResult
           object will be validated before being returned to caller.
     */
    public func describeCoipPoolsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeCoipPoolsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeCoipPoolsResult, HTTPClientError>) -> ()) throws {
        if let describeCoipPoolsAsyncOverrideNonOptional = describeCoipPoolsAsyncOverride {
            if let describeCoipPoolsAsyncOverrideTyped = describeCoipPoolsAsyncOverrideNonOptional
                    as? DescribeCoipPoolsAsyncType<InvocationReportingType> {
                return try describeCoipPoolsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeCoipPoolsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeCoipPools operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeCoipPoolsRequest object being passed to this operation.
     - Returns: The DescribeCoipPoolsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeCoipPoolsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeCoipPoolsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeCoipPoolsResult {
        if let describeCoipPoolsSyncOverrideNonOptional = describeCoipPoolsSyncOverride {
            if let describeCoipPoolsSyncOverrideTyped = describeCoipPoolsSyncOverrideNonOptional
                    as? DescribeCoipPoolsSyncType<InvocationReportingType> {
                return try describeCoipPoolsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeCoipPoolsResult.__default
    }

    /**
     Invokes the DescribeConversionTasks operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeConversionTasksRequest object being passed to this operation.
         - completion: The DescribeConversionTasksResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeConversionTasksResult
           object will be validated before being returned to caller.
     */
    public func describeConversionTasksAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeConversionTasksRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeConversionTasksResult, HTTPClientError>) -> ()) throws {
        if let describeConversionTasksAsyncOverrideNonOptional = describeConversionTasksAsyncOverride {
            if let describeConversionTasksAsyncOverrideTyped = describeConversionTasksAsyncOverrideNonOptional
                    as? DescribeConversionTasksAsyncType<InvocationReportingType> {
                return try describeConversionTasksAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeConversionTasksResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeConversionTasks operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeConversionTasksRequest object being passed to this operation.
     - Returns: The DescribeConversionTasksResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeConversionTasksSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeConversionTasksRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeConversionTasksResult {
        if let describeConversionTasksSyncOverrideNonOptional = describeConversionTasksSyncOverride {
            if let describeConversionTasksSyncOverrideTyped = describeConversionTasksSyncOverrideNonOptional
                    as? DescribeConversionTasksSyncType<InvocationReportingType> {
                return try describeConversionTasksSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeConversionTasksResult.__default
    }

    /**
     Invokes the DescribeCustomerGateways operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeCustomerGatewaysRequest object being passed to this operation.
         - completion: The DescribeCustomerGatewaysResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeCustomerGatewaysResult
           object will be validated before being returned to caller.
     */
    public func describeCustomerGatewaysAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeCustomerGatewaysRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeCustomerGatewaysResult, HTTPClientError>) -> ()) throws {
        if let describeCustomerGatewaysAsyncOverrideNonOptional = describeCustomerGatewaysAsyncOverride {
            if let describeCustomerGatewaysAsyncOverrideTyped = describeCustomerGatewaysAsyncOverrideNonOptional
                    as? DescribeCustomerGatewaysAsyncType<InvocationReportingType> {
                return try describeCustomerGatewaysAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeCustomerGatewaysResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeCustomerGateways operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeCustomerGatewaysRequest object being passed to this operation.
     - Returns: The DescribeCustomerGatewaysResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeCustomerGatewaysSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeCustomerGatewaysRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeCustomerGatewaysResult {
        if let describeCustomerGatewaysSyncOverrideNonOptional = describeCustomerGatewaysSyncOverride {
            if let describeCustomerGatewaysSyncOverrideTyped = describeCustomerGatewaysSyncOverrideNonOptional
                    as? DescribeCustomerGatewaysSyncType<InvocationReportingType> {
                return try describeCustomerGatewaysSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeCustomerGatewaysResult.__default
    }

    /**
     Invokes the DescribeDhcpOptions operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeDhcpOptionsRequest object being passed to this operation.
         - completion: The DescribeDhcpOptionsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeDhcpOptionsResult
           object will be validated before being returned to caller.
     */
    public func describeDhcpOptionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeDhcpOptionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeDhcpOptionsResult, HTTPClientError>) -> ()) throws {
        if let describeDhcpOptionsAsyncOverrideNonOptional = describeDhcpOptionsAsyncOverride {
            if let describeDhcpOptionsAsyncOverrideTyped = describeDhcpOptionsAsyncOverrideNonOptional
                    as? DescribeDhcpOptionsAsyncType<InvocationReportingType> {
                return try describeDhcpOptionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeDhcpOptionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeDhcpOptions operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeDhcpOptionsRequest object being passed to this operation.
     - Returns: The DescribeDhcpOptionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeDhcpOptionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeDhcpOptionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeDhcpOptionsResult {
        if let describeDhcpOptionsSyncOverrideNonOptional = describeDhcpOptionsSyncOverride {
            if let describeDhcpOptionsSyncOverrideTyped = describeDhcpOptionsSyncOverrideNonOptional
                    as? DescribeDhcpOptionsSyncType<InvocationReportingType> {
                return try describeDhcpOptionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeDhcpOptionsResult.__default
    }

    /**
     Invokes the DescribeEgressOnlyInternetGateways operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeEgressOnlyInternetGatewaysRequest object being passed to this operation.
         - completion: The DescribeEgressOnlyInternetGatewaysResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeEgressOnlyInternetGatewaysResult
           object will be validated before being returned to caller.
     */
    public func describeEgressOnlyInternetGatewaysAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeEgressOnlyInternetGatewaysRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeEgressOnlyInternetGatewaysResult, HTTPClientError>) -> ()) throws {
        if let describeEgressOnlyInternetGatewaysAsyncOverrideNonOptional = describeEgressOnlyInternetGatewaysAsyncOverride {
            if let describeEgressOnlyInternetGatewaysAsyncOverrideTyped = describeEgressOnlyInternetGatewaysAsyncOverrideNonOptional
                    as? DescribeEgressOnlyInternetGatewaysAsyncType<InvocationReportingType> {
                return try describeEgressOnlyInternetGatewaysAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeEgressOnlyInternetGatewaysResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeEgressOnlyInternetGateways operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeEgressOnlyInternetGatewaysRequest object being passed to this operation.
     - Returns: The DescribeEgressOnlyInternetGatewaysResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeEgressOnlyInternetGatewaysSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeEgressOnlyInternetGatewaysRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeEgressOnlyInternetGatewaysResult {
        if let describeEgressOnlyInternetGatewaysSyncOverrideNonOptional = describeEgressOnlyInternetGatewaysSyncOverride {
            if let describeEgressOnlyInternetGatewaysSyncOverrideTyped = describeEgressOnlyInternetGatewaysSyncOverrideNonOptional
                    as? DescribeEgressOnlyInternetGatewaysSyncType<InvocationReportingType> {
                return try describeEgressOnlyInternetGatewaysSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeEgressOnlyInternetGatewaysResult.__default
    }

    /**
     Invokes the DescribeElasticGpus operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeElasticGpusRequest object being passed to this operation.
         - completion: The DescribeElasticGpusResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeElasticGpusResult
           object will be validated before being returned to caller.
     */
    public func describeElasticGpusAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeElasticGpusRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeElasticGpusResult, HTTPClientError>) -> ()) throws {
        if let describeElasticGpusAsyncOverrideNonOptional = describeElasticGpusAsyncOverride {
            if let describeElasticGpusAsyncOverrideTyped = describeElasticGpusAsyncOverrideNonOptional
                    as? DescribeElasticGpusAsyncType<InvocationReportingType> {
                return try describeElasticGpusAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeElasticGpusResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeElasticGpus operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeElasticGpusRequest object being passed to this operation.
     - Returns: The DescribeElasticGpusResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeElasticGpusSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeElasticGpusRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeElasticGpusResult {
        if let describeElasticGpusSyncOverrideNonOptional = describeElasticGpusSyncOverride {
            if let describeElasticGpusSyncOverrideTyped = describeElasticGpusSyncOverrideNonOptional
                    as? DescribeElasticGpusSyncType<InvocationReportingType> {
                return try describeElasticGpusSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeElasticGpusResult.__default
    }

    /**
     Invokes the DescribeExportImageTasks operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeExportImageTasksRequest object being passed to this operation.
         - completion: The DescribeExportImageTasksResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeExportImageTasksResult
           object will be validated before being returned to caller.
     */
    public func describeExportImageTasksAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeExportImageTasksRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeExportImageTasksResult, HTTPClientError>) -> ()) throws {
        if let describeExportImageTasksAsyncOverrideNonOptional = describeExportImageTasksAsyncOverride {
            if let describeExportImageTasksAsyncOverrideTyped = describeExportImageTasksAsyncOverrideNonOptional
                    as? DescribeExportImageTasksAsyncType<InvocationReportingType> {
                return try describeExportImageTasksAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeExportImageTasksResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeExportImageTasks operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeExportImageTasksRequest object being passed to this operation.
     - Returns: The DescribeExportImageTasksResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeExportImageTasksSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeExportImageTasksRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeExportImageTasksResult {
        if let describeExportImageTasksSyncOverrideNonOptional = describeExportImageTasksSyncOverride {
            if let describeExportImageTasksSyncOverrideTyped = describeExportImageTasksSyncOverrideNonOptional
                    as? DescribeExportImageTasksSyncType<InvocationReportingType> {
                return try describeExportImageTasksSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeExportImageTasksResult.__default
    }

    /**
     Invokes the DescribeExportTasks operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeExportTasksRequest object being passed to this operation.
         - completion: The DescribeExportTasksResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeExportTasksResult
           object will be validated before being returned to caller.
     */
    public func describeExportTasksAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeExportTasksRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeExportTasksResult, HTTPClientError>) -> ()) throws {
        if let describeExportTasksAsyncOverrideNonOptional = describeExportTasksAsyncOverride {
            if let describeExportTasksAsyncOverrideTyped = describeExportTasksAsyncOverrideNonOptional
                    as? DescribeExportTasksAsyncType<InvocationReportingType> {
                return try describeExportTasksAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeExportTasksResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeExportTasks operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeExportTasksRequest object being passed to this operation.
     - Returns: The DescribeExportTasksResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeExportTasksSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeExportTasksRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeExportTasksResult {
        if let describeExportTasksSyncOverrideNonOptional = describeExportTasksSyncOverride {
            if let describeExportTasksSyncOverrideTyped = describeExportTasksSyncOverrideNonOptional
                    as? DescribeExportTasksSyncType<InvocationReportingType> {
                return try describeExportTasksSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeExportTasksResult.__default
    }

    /**
     Invokes the DescribeFastSnapshotRestores operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeFastSnapshotRestoresRequest object being passed to this operation.
         - completion: The DescribeFastSnapshotRestoresResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeFastSnapshotRestoresResult
           object will be validated before being returned to caller.
     */
    public func describeFastSnapshotRestoresAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeFastSnapshotRestoresRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeFastSnapshotRestoresResult, HTTPClientError>) -> ()) throws {
        if let describeFastSnapshotRestoresAsyncOverrideNonOptional = describeFastSnapshotRestoresAsyncOverride {
            if let describeFastSnapshotRestoresAsyncOverrideTyped = describeFastSnapshotRestoresAsyncOverrideNonOptional
                    as? DescribeFastSnapshotRestoresAsyncType<InvocationReportingType> {
                return try describeFastSnapshotRestoresAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeFastSnapshotRestoresResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeFastSnapshotRestores operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeFastSnapshotRestoresRequest object being passed to this operation.
     - Returns: The DescribeFastSnapshotRestoresResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeFastSnapshotRestoresSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeFastSnapshotRestoresRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeFastSnapshotRestoresResult {
        if let describeFastSnapshotRestoresSyncOverrideNonOptional = describeFastSnapshotRestoresSyncOverride {
            if let describeFastSnapshotRestoresSyncOverrideTyped = describeFastSnapshotRestoresSyncOverrideNonOptional
                    as? DescribeFastSnapshotRestoresSyncType<InvocationReportingType> {
                return try describeFastSnapshotRestoresSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeFastSnapshotRestoresResult.__default
    }

    /**
     Invokes the DescribeFleetHistory operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeFleetHistoryRequest object being passed to this operation.
         - completion: The DescribeFleetHistoryResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeFleetHistoryResult
           object will be validated before being returned to caller.
     */
    public func describeFleetHistoryAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeFleetHistoryRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeFleetHistoryResult, HTTPClientError>) -> ()) throws {
        if let describeFleetHistoryAsyncOverrideNonOptional = describeFleetHistoryAsyncOverride {
            if let describeFleetHistoryAsyncOverrideTyped = describeFleetHistoryAsyncOverrideNonOptional
                    as? DescribeFleetHistoryAsyncType<InvocationReportingType> {
                return try describeFleetHistoryAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeFleetHistoryResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeFleetHistory operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeFleetHistoryRequest object being passed to this operation.
     - Returns: The DescribeFleetHistoryResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeFleetHistorySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeFleetHistoryRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeFleetHistoryResult {
        if let describeFleetHistorySyncOverrideNonOptional = describeFleetHistorySyncOverride {
            if let describeFleetHistorySyncOverrideTyped = describeFleetHistorySyncOverrideNonOptional
                    as? DescribeFleetHistorySyncType<InvocationReportingType> {
                return try describeFleetHistorySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeFleetHistoryResult.__default
    }

    /**
     Invokes the DescribeFleetInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeFleetInstancesRequest object being passed to this operation.
         - completion: The DescribeFleetInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeFleetInstancesResult
           object will be validated before being returned to caller.
     */
    public func describeFleetInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeFleetInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeFleetInstancesResult, HTTPClientError>) -> ()) throws {
        if let describeFleetInstancesAsyncOverrideNonOptional = describeFleetInstancesAsyncOverride {
            if let describeFleetInstancesAsyncOverrideTyped = describeFleetInstancesAsyncOverrideNonOptional
                    as? DescribeFleetInstancesAsyncType<InvocationReportingType> {
                return try describeFleetInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeFleetInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeFleetInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeFleetInstancesRequest object being passed to this operation.
     - Returns: The DescribeFleetInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeFleetInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeFleetInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeFleetInstancesResult {
        if let describeFleetInstancesSyncOverrideNonOptional = describeFleetInstancesSyncOverride {
            if let describeFleetInstancesSyncOverrideTyped = describeFleetInstancesSyncOverrideNonOptional
                    as? DescribeFleetInstancesSyncType<InvocationReportingType> {
                return try describeFleetInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeFleetInstancesResult.__default
    }

    /**
     Invokes the DescribeFleets operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeFleetsRequest object being passed to this operation.
         - completion: The DescribeFleetsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeFleetsResult
           object will be validated before being returned to caller.
     */
    public func describeFleetsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeFleetsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeFleetsResult, HTTPClientError>) -> ()) throws {
        if let describeFleetsAsyncOverrideNonOptional = describeFleetsAsyncOverride {
            if let describeFleetsAsyncOverrideTyped = describeFleetsAsyncOverrideNonOptional
                    as? DescribeFleetsAsyncType<InvocationReportingType> {
                return try describeFleetsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeFleetsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeFleets operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeFleetsRequest object being passed to this operation.
     - Returns: The DescribeFleetsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeFleetsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeFleetsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeFleetsResult {
        if let describeFleetsSyncOverrideNonOptional = describeFleetsSyncOverride {
            if let describeFleetsSyncOverrideTyped = describeFleetsSyncOverrideNonOptional
                    as? DescribeFleetsSyncType<InvocationReportingType> {
                return try describeFleetsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeFleetsResult.__default
    }

    /**
     Invokes the DescribeFlowLogs operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeFlowLogsRequest object being passed to this operation.
         - completion: The DescribeFlowLogsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeFlowLogsResult
           object will be validated before being returned to caller.
     */
    public func describeFlowLogsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeFlowLogsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeFlowLogsResult, HTTPClientError>) -> ()) throws {
        if let describeFlowLogsAsyncOverrideNonOptional = describeFlowLogsAsyncOverride {
            if let describeFlowLogsAsyncOverrideTyped = describeFlowLogsAsyncOverrideNonOptional
                    as? DescribeFlowLogsAsyncType<InvocationReportingType> {
                return try describeFlowLogsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeFlowLogsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeFlowLogs operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeFlowLogsRequest object being passed to this operation.
     - Returns: The DescribeFlowLogsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeFlowLogsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeFlowLogsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeFlowLogsResult {
        if let describeFlowLogsSyncOverrideNonOptional = describeFlowLogsSyncOverride {
            if let describeFlowLogsSyncOverrideTyped = describeFlowLogsSyncOverrideNonOptional
                    as? DescribeFlowLogsSyncType<InvocationReportingType> {
                return try describeFlowLogsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeFlowLogsResult.__default
    }

    /**
     Invokes the DescribeFpgaImageAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeFpgaImageAttributeRequest object being passed to this operation.
         - completion: The DescribeFpgaImageAttributeResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeFpgaImageAttributeResult
           object will be validated before being returned to caller.
     */
    public func describeFpgaImageAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeFpgaImageAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeFpgaImageAttributeResult, HTTPClientError>) -> ()) throws {
        if let describeFpgaImageAttributeAsyncOverrideNonOptional = describeFpgaImageAttributeAsyncOverride {
            if let describeFpgaImageAttributeAsyncOverrideTyped = describeFpgaImageAttributeAsyncOverrideNonOptional
                    as? DescribeFpgaImageAttributeAsyncType<InvocationReportingType> {
                return try describeFpgaImageAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeFpgaImageAttributeResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeFpgaImageAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeFpgaImageAttributeRequest object being passed to this operation.
     - Returns: The DescribeFpgaImageAttributeResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeFpgaImageAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeFpgaImageAttributeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeFpgaImageAttributeResult {
        if let describeFpgaImageAttributeSyncOverrideNonOptional = describeFpgaImageAttributeSyncOverride {
            if let describeFpgaImageAttributeSyncOverrideTyped = describeFpgaImageAttributeSyncOverrideNonOptional
                    as? DescribeFpgaImageAttributeSyncType<InvocationReportingType> {
                return try describeFpgaImageAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeFpgaImageAttributeResult.__default
    }

    /**
     Invokes the DescribeFpgaImages operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeFpgaImagesRequest object being passed to this operation.
         - completion: The DescribeFpgaImagesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeFpgaImagesResult
           object will be validated before being returned to caller.
     */
    public func describeFpgaImagesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeFpgaImagesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeFpgaImagesResult, HTTPClientError>) -> ()) throws {
        if let describeFpgaImagesAsyncOverrideNonOptional = describeFpgaImagesAsyncOverride {
            if let describeFpgaImagesAsyncOverrideTyped = describeFpgaImagesAsyncOverrideNonOptional
                    as? DescribeFpgaImagesAsyncType<InvocationReportingType> {
                return try describeFpgaImagesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeFpgaImagesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeFpgaImages operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeFpgaImagesRequest object being passed to this operation.
     - Returns: The DescribeFpgaImagesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeFpgaImagesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeFpgaImagesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeFpgaImagesResult {
        if let describeFpgaImagesSyncOverrideNonOptional = describeFpgaImagesSyncOverride {
            if let describeFpgaImagesSyncOverrideTyped = describeFpgaImagesSyncOverrideNonOptional
                    as? DescribeFpgaImagesSyncType<InvocationReportingType> {
                return try describeFpgaImagesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeFpgaImagesResult.__default
    }

    /**
     Invokes the DescribeHostReservationOfferings operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeHostReservationOfferingsRequest object being passed to this operation.
         - completion: The DescribeHostReservationOfferingsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeHostReservationOfferingsResult
           object will be validated before being returned to caller.
     */
    public func describeHostReservationOfferingsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeHostReservationOfferingsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeHostReservationOfferingsResult, HTTPClientError>) -> ()) throws {
        if let describeHostReservationOfferingsAsyncOverrideNonOptional = describeHostReservationOfferingsAsyncOverride {
            if let describeHostReservationOfferingsAsyncOverrideTyped = describeHostReservationOfferingsAsyncOverrideNonOptional
                    as? DescribeHostReservationOfferingsAsyncType<InvocationReportingType> {
                return try describeHostReservationOfferingsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeHostReservationOfferingsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeHostReservationOfferings operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeHostReservationOfferingsRequest object being passed to this operation.
     - Returns: The DescribeHostReservationOfferingsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeHostReservationOfferingsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeHostReservationOfferingsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeHostReservationOfferingsResult {
        if let describeHostReservationOfferingsSyncOverrideNonOptional = describeHostReservationOfferingsSyncOverride {
            if let describeHostReservationOfferingsSyncOverrideTyped = describeHostReservationOfferingsSyncOverrideNonOptional
                    as? DescribeHostReservationOfferingsSyncType<InvocationReportingType> {
                return try describeHostReservationOfferingsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeHostReservationOfferingsResult.__default
    }

    /**
     Invokes the DescribeHostReservations operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeHostReservationsRequest object being passed to this operation.
         - completion: The DescribeHostReservationsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeHostReservationsResult
           object will be validated before being returned to caller.
     */
    public func describeHostReservationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeHostReservationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeHostReservationsResult, HTTPClientError>) -> ()) throws {
        if let describeHostReservationsAsyncOverrideNonOptional = describeHostReservationsAsyncOverride {
            if let describeHostReservationsAsyncOverrideTyped = describeHostReservationsAsyncOverrideNonOptional
                    as? DescribeHostReservationsAsyncType<InvocationReportingType> {
                return try describeHostReservationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeHostReservationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeHostReservations operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeHostReservationsRequest object being passed to this operation.
     - Returns: The DescribeHostReservationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeHostReservationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeHostReservationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeHostReservationsResult {
        if let describeHostReservationsSyncOverrideNonOptional = describeHostReservationsSyncOverride {
            if let describeHostReservationsSyncOverrideTyped = describeHostReservationsSyncOverrideNonOptional
                    as? DescribeHostReservationsSyncType<InvocationReportingType> {
                return try describeHostReservationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeHostReservationsResult.__default
    }

    /**
     Invokes the DescribeHosts operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeHostsRequest object being passed to this operation.
         - completion: The DescribeHostsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeHostsResult
           object will be validated before being returned to caller.
     */
    public func describeHostsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeHostsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeHostsResult, HTTPClientError>) -> ()) throws {
        if let describeHostsAsyncOverrideNonOptional = describeHostsAsyncOverride {
            if let describeHostsAsyncOverrideTyped = describeHostsAsyncOverrideNonOptional
                    as? DescribeHostsAsyncType<InvocationReportingType> {
                return try describeHostsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeHostsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeHosts operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeHostsRequest object being passed to this operation.
     - Returns: The DescribeHostsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeHostsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeHostsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeHostsResult {
        if let describeHostsSyncOverrideNonOptional = describeHostsSyncOverride {
            if let describeHostsSyncOverrideTyped = describeHostsSyncOverrideNonOptional
                    as? DescribeHostsSyncType<InvocationReportingType> {
                return try describeHostsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeHostsResult.__default
    }

    /**
     Invokes the DescribeIamInstanceProfileAssociations operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeIamInstanceProfileAssociationsRequest object being passed to this operation.
         - completion: The DescribeIamInstanceProfileAssociationsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeIamInstanceProfileAssociationsResult
           object will be validated before being returned to caller.
     */
    public func describeIamInstanceProfileAssociationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeIamInstanceProfileAssociationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeIamInstanceProfileAssociationsResult, HTTPClientError>) -> ()) throws {
        if let describeIamInstanceProfileAssociationsAsyncOverrideNonOptional = describeIamInstanceProfileAssociationsAsyncOverride {
            if let describeIamInstanceProfileAssociationsAsyncOverrideTyped = describeIamInstanceProfileAssociationsAsyncOverrideNonOptional
                    as? DescribeIamInstanceProfileAssociationsAsyncType<InvocationReportingType> {
                return try describeIamInstanceProfileAssociationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeIamInstanceProfileAssociationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeIamInstanceProfileAssociations operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeIamInstanceProfileAssociationsRequest object being passed to this operation.
     - Returns: The DescribeIamInstanceProfileAssociationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeIamInstanceProfileAssociationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeIamInstanceProfileAssociationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeIamInstanceProfileAssociationsResult {
        if let describeIamInstanceProfileAssociationsSyncOverrideNonOptional = describeIamInstanceProfileAssociationsSyncOverride {
            if let describeIamInstanceProfileAssociationsSyncOverrideTyped = describeIamInstanceProfileAssociationsSyncOverrideNonOptional
                    as? DescribeIamInstanceProfileAssociationsSyncType<InvocationReportingType> {
                return try describeIamInstanceProfileAssociationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeIamInstanceProfileAssociationsResult.__default
    }

    /**
     Invokes the DescribeIdFormat operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeIdFormatRequest object being passed to this operation.
         - completion: The DescribeIdFormatResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeIdFormatResult
           object will be validated before being returned to caller.
     */
    public func describeIdFormatAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeIdFormatRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeIdFormatResult, HTTPClientError>) -> ()) throws {
        if let describeIdFormatAsyncOverrideNonOptional = describeIdFormatAsyncOverride {
            if let describeIdFormatAsyncOverrideTyped = describeIdFormatAsyncOverrideNonOptional
                    as? DescribeIdFormatAsyncType<InvocationReportingType> {
                return try describeIdFormatAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeIdFormatResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeIdFormat operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeIdFormatRequest object being passed to this operation.
     - Returns: The DescribeIdFormatResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeIdFormatSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeIdFormatRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeIdFormatResult {
        if let describeIdFormatSyncOverrideNonOptional = describeIdFormatSyncOverride {
            if let describeIdFormatSyncOverrideTyped = describeIdFormatSyncOverrideNonOptional
                    as? DescribeIdFormatSyncType<InvocationReportingType> {
                return try describeIdFormatSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeIdFormatResult.__default
    }

    /**
     Invokes the DescribeIdentityIdFormat operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeIdentityIdFormatRequest object being passed to this operation.
         - completion: The DescribeIdentityIdFormatResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeIdentityIdFormatResult
           object will be validated before being returned to caller.
     */
    public func describeIdentityIdFormatAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeIdentityIdFormatRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeIdentityIdFormatResult, HTTPClientError>) -> ()) throws {
        if let describeIdentityIdFormatAsyncOverrideNonOptional = describeIdentityIdFormatAsyncOverride {
            if let describeIdentityIdFormatAsyncOverrideTyped = describeIdentityIdFormatAsyncOverrideNonOptional
                    as? DescribeIdentityIdFormatAsyncType<InvocationReportingType> {
                return try describeIdentityIdFormatAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeIdentityIdFormatResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeIdentityIdFormat operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeIdentityIdFormatRequest object being passed to this operation.
     - Returns: The DescribeIdentityIdFormatResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeIdentityIdFormatSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeIdentityIdFormatRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeIdentityIdFormatResult {
        if let describeIdentityIdFormatSyncOverrideNonOptional = describeIdentityIdFormatSyncOverride {
            if let describeIdentityIdFormatSyncOverrideTyped = describeIdentityIdFormatSyncOverrideNonOptional
                    as? DescribeIdentityIdFormatSyncType<InvocationReportingType> {
                return try describeIdentityIdFormatSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeIdentityIdFormatResult.__default
    }

    /**
     Invokes the DescribeImageAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeImageAttributeRequest object being passed to this operation.
         - completion: The ImageAttribute object or an error will be passed to this 
           callback when the operation is complete. The ImageAttribute
           object will be validated before being returned to caller.
     */
    public func describeImageAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeImageAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ImageAttribute, HTTPClientError>) -> ()) throws {
        if let describeImageAttributeAsyncOverrideNonOptional = describeImageAttributeAsyncOverride {
            if let describeImageAttributeAsyncOverrideTyped = describeImageAttributeAsyncOverrideNonOptional
                    as? DescribeImageAttributeAsyncType<InvocationReportingType> {
                return try describeImageAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ImageAttribute.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeImageAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeImageAttributeRequest object being passed to this operation.
     - Returns: The ImageAttribute object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeImageAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeImageAttributeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ImageAttribute {
        if let describeImageAttributeSyncOverrideNonOptional = describeImageAttributeSyncOverride {
            if let describeImageAttributeSyncOverrideTyped = describeImageAttributeSyncOverrideNonOptional
                    as? DescribeImageAttributeSyncType<InvocationReportingType> {
                return try describeImageAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ImageAttribute.__default
    }

    /**
     Invokes the DescribeImages operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeImagesRequest object being passed to this operation.
         - completion: The DescribeImagesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeImagesResult
           object will be validated before being returned to caller.
     */
    public func describeImagesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeImagesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeImagesResult, HTTPClientError>) -> ()) throws {
        if let describeImagesAsyncOverrideNonOptional = describeImagesAsyncOverride {
            if let describeImagesAsyncOverrideTyped = describeImagesAsyncOverrideNonOptional
                    as? DescribeImagesAsyncType<InvocationReportingType> {
                return try describeImagesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeImagesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeImages operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeImagesRequest object being passed to this operation.
     - Returns: The DescribeImagesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeImagesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeImagesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeImagesResult {
        if let describeImagesSyncOverrideNonOptional = describeImagesSyncOverride {
            if let describeImagesSyncOverrideTyped = describeImagesSyncOverrideNonOptional
                    as? DescribeImagesSyncType<InvocationReportingType> {
                return try describeImagesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeImagesResult.__default
    }

    /**
     Invokes the DescribeImportImageTasks operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeImportImageTasksRequest object being passed to this operation.
         - completion: The DescribeImportImageTasksResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeImportImageTasksResult
           object will be validated before being returned to caller.
     */
    public func describeImportImageTasksAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeImportImageTasksRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeImportImageTasksResult, HTTPClientError>) -> ()) throws {
        if let describeImportImageTasksAsyncOverrideNonOptional = describeImportImageTasksAsyncOverride {
            if let describeImportImageTasksAsyncOverrideTyped = describeImportImageTasksAsyncOverrideNonOptional
                    as? DescribeImportImageTasksAsyncType<InvocationReportingType> {
                return try describeImportImageTasksAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeImportImageTasksResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeImportImageTasks operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeImportImageTasksRequest object being passed to this operation.
     - Returns: The DescribeImportImageTasksResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeImportImageTasksSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeImportImageTasksRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeImportImageTasksResult {
        if let describeImportImageTasksSyncOverrideNonOptional = describeImportImageTasksSyncOverride {
            if let describeImportImageTasksSyncOverrideTyped = describeImportImageTasksSyncOverrideNonOptional
                    as? DescribeImportImageTasksSyncType<InvocationReportingType> {
                return try describeImportImageTasksSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeImportImageTasksResult.__default
    }

    /**
     Invokes the DescribeImportSnapshotTasks operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeImportSnapshotTasksRequest object being passed to this operation.
         - completion: The DescribeImportSnapshotTasksResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeImportSnapshotTasksResult
           object will be validated before being returned to caller.
     */
    public func describeImportSnapshotTasksAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeImportSnapshotTasksRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeImportSnapshotTasksResult, HTTPClientError>) -> ()) throws {
        if let describeImportSnapshotTasksAsyncOverrideNonOptional = describeImportSnapshotTasksAsyncOverride {
            if let describeImportSnapshotTasksAsyncOverrideTyped = describeImportSnapshotTasksAsyncOverrideNonOptional
                    as? DescribeImportSnapshotTasksAsyncType<InvocationReportingType> {
                return try describeImportSnapshotTasksAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeImportSnapshotTasksResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeImportSnapshotTasks operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeImportSnapshotTasksRequest object being passed to this operation.
     - Returns: The DescribeImportSnapshotTasksResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeImportSnapshotTasksSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeImportSnapshotTasksRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeImportSnapshotTasksResult {
        if let describeImportSnapshotTasksSyncOverrideNonOptional = describeImportSnapshotTasksSyncOverride {
            if let describeImportSnapshotTasksSyncOverrideTyped = describeImportSnapshotTasksSyncOverrideNonOptional
                    as? DescribeImportSnapshotTasksSyncType<InvocationReportingType> {
                return try describeImportSnapshotTasksSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeImportSnapshotTasksResult.__default
    }

    /**
     Invokes the DescribeInstanceAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeInstanceAttributeRequest object being passed to this operation.
         - completion: The InstanceAttribute object or an error will be passed to this 
           callback when the operation is complete. The InstanceAttribute
           object will be validated before being returned to caller.
     */
    public func describeInstanceAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeInstanceAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.InstanceAttribute, HTTPClientError>) -> ()) throws {
        if let describeInstanceAttributeAsyncOverrideNonOptional = describeInstanceAttributeAsyncOverride {
            if let describeInstanceAttributeAsyncOverrideTyped = describeInstanceAttributeAsyncOverrideNonOptional
                    as? DescribeInstanceAttributeAsyncType<InvocationReportingType> {
                return try describeInstanceAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = InstanceAttribute.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeInstanceAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeInstanceAttributeRequest object being passed to this operation.
     - Returns: The InstanceAttribute object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeInstanceAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeInstanceAttributeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.InstanceAttribute {
        if let describeInstanceAttributeSyncOverrideNonOptional = describeInstanceAttributeSyncOverride {
            if let describeInstanceAttributeSyncOverrideTyped = describeInstanceAttributeSyncOverrideNonOptional
                    as? DescribeInstanceAttributeSyncType<InvocationReportingType> {
                return try describeInstanceAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return InstanceAttribute.__default
    }

    /**
     Invokes the DescribeInstanceCreditSpecifications operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeInstanceCreditSpecificationsRequest object being passed to this operation.
         - completion: The DescribeInstanceCreditSpecificationsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeInstanceCreditSpecificationsResult
           object will be validated before being returned to caller.
     */
    public func describeInstanceCreditSpecificationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeInstanceCreditSpecificationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeInstanceCreditSpecificationsResult, HTTPClientError>) -> ()) throws {
        if let describeInstanceCreditSpecificationsAsyncOverrideNonOptional = describeInstanceCreditSpecificationsAsyncOverride {
            if let describeInstanceCreditSpecificationsAsyncOverrideTyped = describeInstanceCreditSpecificationsAsyncOverrideNonOptional
                    as? DescribeInstanceCreditSpecificationsAsyncType<InvocationReportingType> {
                return try describeInstanceCreditSpecificationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeInstanceCreditSpecificationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeInstanceCreditSpecifications operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeInstanceCreditSpecificationsRequest object being passed to this operation.
     - Returns: The DescribeInstanceCreditSpecificationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeInstanceCreditSpecificationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeInstanceCreditSpecificationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeInstanceCreditSpecificationsResult {
        if let describeInstanceCreditSpecificationsSyncOverrideNonOptional = describeInstanceCreditSpecificationsSyncOverride {
            if let describeInstanceCreditSpecificationsSyncOverrideTyped = describeInstanceCreditSpecificationsSyncOverrideNonOptional
                    as? DescribeInstanceCreditSpecificationsSyncType<InvocationReportingType> {
                return try describeInstanceCreditSpecificationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeInstanceCreditSpecificationsResult.__default
    }

    /**
     Invokes the DescribeInstanceStatus operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeInstanceStatusRequest object being passed to this operation.
         - completion: The DescribeInstanceStatusResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeInstanceStatusResult
           object will be validated before being returned to caller.
     */
    public func describeInstanceStatusAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeInstanceStatusRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeInstanceStatusResult, HTTPClientError>) -> ()) throws {
        if let describeInstanceStatusAsyncOverrideNonOptional = describeInstanceStatusAsyncOverride {
            if let describeInstanceStatusAsyncOverrideTyped = describeInstanceStatusAsyncOverrideNonOptional
                    as? DescribeInstanceStatusAsyncType<InvocationReportingType> {
                return try describeInstanceStatusAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeInstanceStatusResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeInstanceStatus operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeInstanceStatusRequest object being passed to this operation.
     - Returns: The DescribeInstanceStatusResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeInstanceStatusSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeInstanceStatusRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeInstanceStatusResult {
        if let describeInstanceStatusSyncOverrideNonOptional = describeInstanceStatusSyncOverride {
            if let describeInstanceStatusSyncOverrideTyped = describeInstanceStatusSyncOverrideNonOptional
                    as? DescribeInstanceStatusSyncType<InvocationReportingType> {
                return try describeInstanceStatusSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeInstanceStatusResult.__default
    }

    /**
     Invokes the DescribeInstanceTypeOfferings operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeInstanceTypeOfferingsRequest object being passed to this operation.
         - completion: The DescribeInstanceTypeOfferingsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeInstanceTypeOfferingsResult
           object will be validated before being returned to caller.
     */
    public func describeInstanceTypeOfferingsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeInstanceTypeOfferingsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeInstanceTypeOfferingsResult, HTTPClientError>) -> ()) throws {
        if let describeInstanceTypeOfferingsAsyncOverrideNonOptional = describeInstanceTypeOfferingsAsyncOverride {
            if let describeInstanceTypeOfferingsAsyncOverrideTyped = describeInstanceTypeOfferingsAsyncOverrideNonOptional
                    as? DescribeInstanceTypeOfferingsAsyncType<InvocationReportingType> {
                return try describeInstanceTypeOfferingsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeInstanceTypeOfferingsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeInstanceTypeOfferings operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeInstanceTypeOfferingsRequest object being passed to this operation.
     - Returns: The DescribeInstanceTypeOfferingsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeInstanceTypeOfferingsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeInstanceTypeOfferingsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeInstanceTypeOfferingsResult {
        if let describeInstanceTypeOfferingsSyncOverrideNonOptional = describeInstanceTypeOfferingsSyncOverride {
            if let describeInstanceTypeOfferingsSyncOverrideTyped = describeInstanceTypeOfferingsSyncOverrideNonOptional
                    as? DescribeInstanceTypeOfferingsSyncType<InvocationReportingType> {
                return try describeInstanceTypeOfferingsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeInstanceTypeOfferingsResult.__default
    }

    /**
     Invokes the DescribeInstanceTypes operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeInstanceTypesRequest object being passed to this operation.
         - completion: The DescribeInstanceTypesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeInstanceTypesResult
           object will be validated before being returned to caller.
     */
    public func describeInstanceTypesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeInstanceTypesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeInstanceTypesResult, HTTPClientError>) -> ()) throws {
        if let describeInstanceTypesAsyncOverrideNonOptional = describeInstanceTypesAsyncOverride {
            if let describeInstanceTypesAsyncOverrideTyped = describeInstanceTypesAsyncOverrideNonOptional
                    as? DescribeInstanceTypesAsyncType<InvocationReportingType> {
                return try describeInstanceTypesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeInstanceTypesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeInstanceTypes operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeInstanceTypesRequest object being passed to this operation.
     - Returns: The DescribeInstanceTypesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeInstanceTypesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeInstanceTypesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeInstanceTypesResult {
        if let describeInstanceTypesSyncOverrideNonOptional = describeInstanceTypesSyncOverride {
            if let describeInstanceTypesSyncOverrideTyped = describeInstanceTypesSyncOverrideNonOptional
                    as? DescribeInstanceTypesSyncType<InvocationReportingType> {
                return try describeInstanceTypesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeInstanceTypesResult.__default
    }

    /**
     Invokes the DescribeInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeInstancesRequest object being passed to this operation.
         - completion: The DescribeInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeInstancesResult
           object will be validated before being returned to caller.
     */
    public func describeInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeInstancesResult, HTTPClientError>) -> ()) throws {
        if let describeInstancesAsyncOverrideNonOptional = describeInstancesAsyncOverride {
            if let describeInstancesAsyncOverrideTyped = describeInstancesAsyncOverrideNonOptional
                    as? DescribeInstancesAsyncType<InvocationReportingType> {
                return try describeInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeInstancesRequest object being passed to this operation.
     - Returns: The DescribeInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeInstancesResult {
        if let describeInstancesSyncOverrideNonOptional = describeInstancesSyncOverride {
            if let describeInstancesSyncOverrideTyped = describeInstancesSyncOverrideNonOptional
                    as? DescribeInstancesSyncType<InvocationReportingType> {
                return try describeInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeInstancesResult.__default
    }

    /**
     Invokes the DescribeInternetGateways operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeInternetGatewaysRequest object being passed to this operation.
         - completion: The DescribeInternetGatewaysResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeInternetGatewaysResult
           object will be validated before being returned to caller.
     */
    public func describeInternetGatewaysAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeInternetGatewaysRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeInternetGatewaysResult, HTTPClientError>) -> ()) throws {
        if let describeInternetGatewaysAsyncOverrideNonOptional = describeInternetGatewaysAsyncOverride {
            if let describeInternetGatewaysAsyncOverrideTyped = describeInternetGatewaysAsyncOverrideNonOptional
                    as? DescribeInternetGatewaysAsyncType<InvocationReportingType> {
                return try describeInternetGatewaysAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeInternetGatewaysResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeInternetGateways operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeInternetGatewaysRequest object being passed to this operation.
     - Returns: The DescribeInternetGatewaysResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeInternetGatewaysSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeInternetGatewaysRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeInternetGatewaysResult {
        if let describeInternetGatewaysSyncOverrideNonOptional = describeInternetGatewaysSyncOverride {
            if let describeInternetGatewaysSyncOverrideTyped = describeInternetGatewaysSyncOverrideNonOptional
                    as? DescribeInternetGatewaysSyncType<InvocationReportingType> {
                return try describeInternetGatewaysSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeInternetGatewaysResult.__default
    }

    /**
     Invokes the DescribeIpv6Pools operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeIpv6PoolsRequest object being passed to this operation.
         - completion: The DescribeIpv6PoolsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeIpv6PoolsResult
           object will be validated before being returned to caller.
     */
    public func describeIpv6PoolsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeIpv6PoolsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeIpv6PoolsResult, HTTPClientError>) -> ()) throws {
        if let describeIpv6PoolsAsyncOverrideNonOptional = describeIpv6PoolsAsyncOverride {
            if let describeIpv6PoolsAsyncOverrideTyped = describeIpv6PoolsAsyncOverrideNonOptional
                    as? DescribeIpv6PoolsAsyncType<InvocationReportingType> {
                return try describeIpv6PoolsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeIpv6PoolsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeIpv6Pools operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeIpv6PoolsRequest object being passed to this operation.
     - Returns: The DescribeIpv6PoolsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeIpv6PoolsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeIpv6PoolsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeIpv6PoolsResult {
        if let describeIpv6PoolsSyncOverrideNonOptional = describeIpv6PoolsSyncOverride {
            if let describeIpv6PoolsSyncOverrideTyped = describeIpv6PoolsSyncOverrideNonOptional
                    as? DescribeIpv6PoolsSyncType<InvocationReportingType> {
                return try describeIpv6PoolsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeIpv6PoolsResult.__default
    }

    /**
     Invokes the DescribeKeyPairs operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeKeyPairsRequest object being passed to this operation.
         - completion: The DescribeKeyPairsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeKeyPairsResult
           object will be validated before being returned to caller.
     */
    public func describeKeyPairsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeKeyPairsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeKeyPairsResult, HTTPClientError>) -> ()) throws {
        if let describeKeyPairsAsyncOverrideNonOptional = describeKeyPairsAsyncOverride {
            if let describeKeyPairsAsyncOverrideTyped = describeKeyPairsAsyncOverrideNonOptional
                    as? DescribeKeyPairsAsyncType<InvocationReportingType> {
                return try describeKeyPairsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeKeyPairsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeKeyPairs operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeKeyPairsRequest object being passed to this operation.
     - Returns: The DescribeKeyPairsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeKeyPairsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeKeyPairsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeKeyPairsResult {
        if let describeKeyPairsSyncOverrideNonOptional = describeKeyPairsSyncOverride {
            if let describeKeyPairsSyncOverrideTyped = describeKeyPairsSyncOverrideNonOptional
                    as? DescribeKeyPairsSyncType<InvocationReportingType> {
                return try describeKeyPairsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeKeyPairsResult.__default
    }

    /**
     Invokes the DescribeLaunchTemplateVersions operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeLaunchTemplateVersionsRequest object being passed to this operation.
         - completion: The DescribeLaunchTemplateVersionsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeLaunchTemplateVersionsResult
           object will be validated before being returned to caller.
     */
    public func describeLaunchTemplateVersionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLaunchTemplateVersionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeLaunchTemplateVersionsResult, HTTPClientError>) -> ()) throws {
        if let describeLaunchTemplateVersionsAsyncOverrideNonOptional = describeLaunchTemplateVersionsAsyncOverride {
            if let describeLaunchTemplateVersionsAsyncOverrideTyped = describeLaunchTemplateVersionsAsyncOverrideNonOptional
                    as? DescribeLaunchTemplateVersionsAsyncType<InvocationReportingType> {
                return try describeLaunchTemplateVersionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeLaunchTemplateVersionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeLaunchTemplateVersions operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeLaunchTemplateVersionsRequest object being passed to this operation.
     - Returns: The DescribeLaunchTemplateVersionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeLaunchTemplateVersionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLaunchTemplateVersionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeLaunchTemplateVersionsResult {
        if let describeLaunchTemplateVersionsSyncOverrideNonOptional = describeLaunchTemplateVersionsSyncOverride {
            if let describeLaunchTemplateVersionsSyncOverrideTyped = describeLaunchTemplateVersionsSyncOverrideNonOptional
                    as? DescribeLaunchTemplateVersionsSyncType<InvocationReportingType> {
                return try describeLaunchTemplateVersionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeLaunchTemplateVersionsResult.__default
    }

    /**
     Invokes the DescribeLaunchTemplates operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeLaunchTemplatesRequest object being passed to this operation.
         - completion: The DescribeLaunchTemplatesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeLaunchTemplatesResult
           object will be validated before being returned to caller.
     */
    public func describeLaunchTemplatesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLaunchTemplatesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeLaunchTemplatesResult, HTTPClientError>) -> ()) throws {
        if let describeLaunchTemplatesAsyncOverrideNonOptional = describeLaunchTemplatesAsyncOverride {
            if let describeLaunchTemplatesAsyncOverrideTyped = describeLaunchTemplatesAsyncOverrideNonOptional
                    as? DescribeLaunchTemplatesAsyncType<InvocationReportingType> {
                return try describeLaunchTemplatesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeLaunchTemplatesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeLaunchTemplates operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeLaunchTemplatesRequest object being passed to this operation.
     - Returns: The DescribeLaunchTemplatesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeLaunchTemplatesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLaunchTemplatesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeLaunchTemplatesResult {
        if let describeLaunchTemplatesSyncOverrideNonOptional = describeLaunchTemplatesSyncOverride {
            if let describeLaunchTemplatesSyncOverrideTyped = describeLaunchTemplatesSyncOverrideNonOptional
                    as? DescribeLaunchTemplatesSyncType<InvocationReportingType> {
                return try describeLaunchTemplatesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeLaunchTemplatesResult.__default
    }

    /**
     Invokes the DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest object being passed to this operation.
         - completion: The DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult
           object will be validated before being returned to caller.
     */
    public func describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult, HTTPClientError>) -> ()) throws {
        if let describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsyncOverrideNonOptional = describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsyncOverride {
            if let describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsyncOverrideTyped = describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsyncOverrideNonOptional
                    as? DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsyncType<InvocationReportingType> {
                return try describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest object being passed to this operation.
     - Returns: The DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult {
        if let describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsSyncOverrideNonOptional = describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsSyncOverride {
            if let describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsSyncOverrideTyped = describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsSyncOverrideNonOptional
                    as? DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsSyncType<InvocationReportingType> {
                return try describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult.__default
    }

    /**
     Invokes the DescribeLocalGatewayRouteTableVpcAssociations operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeLocalGatewayRouteTableVpcAssociationsRequest object being passed to this operation.
         - completion: The DescribeLocalGatewayRouteTableVpcAssociationsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeLocalGatewayRouteTableVpcAssociationsResult
           object will be validated before being returned to caller.
     */
    public func describeLocalGatewayRouteTableVpcAssociationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLocalGatewayRouteTableVpcAssociationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeLocalGatewayRouteTableVpcAssociationsResult, HTTPClientError>) -> ()) throws {
        if let describeLocalGatewayRouteTableVpcAssociationsAsyncOverrideNonOptional = describeLocalGatewayRouteTableVpcAssociationsAsyncOverride {
            if let describeLocalGatewayRouteTableVpcAssociationsAsyncOverrideTyped = describeLocalGatewayRouteTableVpcAssociationsAsyncOverrideNonOptional
                    as? DescribeLocalGatewayRouteTableVpcAssociationsAsyncType<InvocationReportingType> {
                return try describeLocalGatewayRouteTableVpcAssociationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeLocalGatewayRouteTableVpcAssociationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeLocalGatewayRouteTableVpcAssociations operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeLocalGatewayRouteTableVpcAssociationsRequest object being passed to this operation.
     - Returns: The DescribeLocalGatewayRouteTableVpcAssociationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeLocalGatewayRouteTableVpcAssociationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLocalGatewayRouteTableVpcAssociationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeLocalGatewayRouteTableVpcAssociationsResult {
        if let describeLocalGatewayRouteTableVpcAssociationsSyncOverrideNonOptional = describeLocalGatewayRouteTableVpcAssociationsSyncOverride {
            if let describeLocalGatewayRouteTableVpcAssociationsSyncOverrideTyped = describeLocalGatewayRouteTableVpcAssociationsSyncOverrideNonOptional
                    as? DescribeLocalGatewayRouteTableVpcAssociationsSyncType<InvocationReportingType> {
                return try describeLocalGatewayRouteTableVpcAssociationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeLocalGatewayRouteTableVpcAssociationsResult.__default
    }

    /**
     Invokes the DescribeLocalGatewayRouteTables operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeLocalGatewayRouteTablesRequest object being passed to this operation.
         - completion: The DescribeLocalGatewayRouteTablesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeLocalGatewayRouteTablesResult
           object will be validated before being returned to caller.
     */
    public func describeLocalGatewayRouteTablesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLocalGatewayRouteTablesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeLocalGatewayRouteTablesResult, HTTPClientError>) -> ()) throws {
        if let describeLocalGatewayRouteTablesAsyncOverrideNonOptional = describeLocalGatewayRouteTablesAsyncOverride {
            if let describeLocalGatewayRouteTablesAsyncOverrideTyped = describeLocalGatewayRouteTablesAsyncOverrideNonOptional
                    as? DescribeLocalGatewayRouteTablesAsyncType<InvocationReportingType> {
                return try describeLocalGatewayRouteTablesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeLocalGatewayRouteTablesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeLocalGatewayRouteTables operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeLocalGatewayRouteTablesRequest object being passed to this operation.
     - Returns: The DescribeLocalGatewayRouteTablesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeLocalGatewayRouteTablesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLocalGatewayRouteTablesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeLocalGatewayRouteTablesResult {
        if let describeLocalGatewayRouteTablesSyncOverrideNonOptional = describeLocalGatewayRouteTablesSyncOverride {
            if let describeLocalGatewayRouteTablesSyncOverrideTyped = describeLocalGatewayRouteTablesSyncOverrideNonOptional
                    as? DescribeLocalGatewayRouteTablesSyncType<InvocationReportingType> {
                return try describeLocalGatewayRouteTablesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeLocalGatewayRouteTablesResult.__default
    }

    /**
     Invokes the DescribeLocalGatewayVirtualInterfaceGroups operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeLocalGatewayVirtualInterfaceGroupsRequest object being passed to this operation.
         - completion: The DescribeLocalGatewayVirtualInterfaceGroupsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeLocalGatewayVirtualInterfaceGroupsResult
           object will be validated before being returned to caller.
     */
    public func describeLocalGatewayVirtualInterfaceGroupsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLocalGatewayVirtualInterfaceGroupsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeLocalGatewayVirtualInterfaceGroupsResult, HTTPClientError>) -> ()) throws {
        if let describeLocalGatewayVirtualInterfaceGroupsAsyncOverrideNonOptional = describeLocalGatewayVirtualInterfaceGroupsAsyncOverride {
            if let describeLocalGatewayVirtualInterfaceGroupsAsyncOverrideTyped = describeLocalGatewayVirtualInterfaceGroupsAsyncOverrideNonOptional
                    as? DescribeLocalGatewayVirtualInterfaceGroupsAsyncType<InvocationReportingType> {
                return try describeLocalGatewayVirtualInterfaceGroupsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeLocalGatewayVirtualInterfaceGroupsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeLocalGatewayVirtualInterfaceGroups operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeLocalGatewayVirtualInterfaceGroupsRequest object being passed to this operation.
     - Returns: The DescribeLocalGatewayVirtualInterfaceGroupsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeLocalGatewayVirtualInterfaceGroupsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLocalGatewayVirtualInterfaceGroupsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeLocalGatewayVirtualInterfaceGroupsResult {
        if let describeLocalGatewayVirtualInterfaceGroupsSyncOverrideNonOptional = describeLocalGatewayVirtualInterfaceGroupsSyncOverride {
            if let describeLocalGatewayVirtualInterfaceGroupsSyncOverrideTyped = describeLocalGatewayVirtualInterfaceGroupsSyncOverrideNonOptional
                    as? DescribeLocalGatewayVirtualInterfaceGroupsSyncType<InvocationReportingType> {
                return try describeLocalGatewayVirtualInterfaceGroupsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeLocalGatewayVirtualInterfaceGroupsResult.__default
    }

    /**
     Invokes the DescribeLocalGatewayVirtualInterfaces operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeLocalGatewayVirtualInterfacesRequest object being passed to this operation.
         - completion: The DescribeLocalGatewayVirtualInterfacesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeLocalGatewayVirtualInterfacesResult
           object will be validated before being returned to caller.
     */
    public func describeLocalGatewayVirtualInterfacesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLocalGatewayVirtualInterfacesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeLocalGatewayVirtualInterfacesResult, HTTPClientError>) -> ()) throws {
        if let describeLocalGatewayVirtualInterfacesAsyncOverrideNonOptional = describeLocalGatewayVirtualInterfacesAsyncOverride {
            if let describeLocalGatewayVirtualInterfacesAsyncOverrideTyped = describeLocalGatewayVirtualInterfacesAsyncOverrideNonOptional
                    as? DescribeLocalGatewayVirtualInterfacesAsyncType<InvocationReportingType> {
                return try describeLocalGatewayVirtualInterfacesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeLocalGatewayVirtualInterfacesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeLocalGatewayVirtualInterfaces operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeLocalGatewayVirtualInterfacesRequest object being passed to this operation.
     - Returns: The DescribeLocalGatewayVirtualInterfacesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeLocalGatewayVirtualInterfacesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLocalGatewayVirtualInterfacesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeLocalGatewayVirtualInterfacesResult {
        if let describeLocalGatewayVirtualInterfacesSyncOverrideNonOptional = describeLocalGatewayVirtualInterfacesSyncOverride {
            if let describeLocalGatewayVirtualInterfacesSyncOverrideTyped = describeLocalGatewayVirtualInterfacesSyncOverrideNonOptional
                    as? DescribeLocalGatewayVirtualInterfacesSyncType<InvocationReportingType> {
                return try describeLocalGatewayVirtualInterfacesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeLocalGatewayVirtualInterfacesResult.__default
    }

    /**
     Invokes the DescribeLocalGateways operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeLocalGatewaysRequest object being passed to this operation.
         - completion: The DescribeLocalGatewaysResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeLocalGatewaysResult
           object will be validated before being returned to caller.
     */
    public func describeLocalGatewaysAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLocalGatewaysRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeLocalGatewaysResult, HTTPClientError>) -> ()) throws {
        if let describeLocalGatewaysAsyncOverrideNonOptional = describeLocalGatewaysAsyncOverride {
            if let describeLocalGatewaysAsyncOverrideTyped = describeLocalGatewaysAsyncOverrideNonOptional
                    as? DescribeLocalGatewaysAsyncType<InvocationReportingType> {
                return try describeLocalGatewaysAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeLocalGatewaysResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeLocalGateways operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeLocalGatewaysRequest object being passed to this operation.
     - Returns: The DescribeLocalGatewaysResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeLocalGatewaysSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeLocalGatewaysRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeLocalGatewaysResult {
        if let describeLocalGatewaysSyncOverrideNonOptional = describeLocalGatewaysSyncOverride {
            if let describeLocalGatewaysSyncOverrideTyped = describeLocalGatewaysSyncOverrideNonOptional
                    as? DescribeLocalGatewaysSyncType<InvocationReportingType> {
                return try describeLocalGatewaysSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeLocalGatewaysResult.__default
    }

    /**
     Invokes the DescribeMovingAddresses operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeMovingAddressesRequest object being passed to this operation.
         - completion: The DescribeMovingAddressesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeMovingAddressesResult
           object will be validated before being returned to caller.
     */
    public func describeMovingAddressesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeMovingAddressesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeMovingAddressesResult, HTTPClientError>) -> ()) throws {
        if let describeMovingAddressesAsyncOverrideNonOptional = describeMovingAddressesAsyncOverride {
            if let describeMovingAddressesAsyncOverrideTyped = describeMovingAddressesAsyncOverrideNonOptional
                    as? DescribeMovingAddressesAsyncType<InvocationReportingType> {
                return try describeMovingAddressesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeMovingAddressesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeMovingAddresses operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeMovingAddressesRequest object being passed to this operation.
     - Returns: The DescribeMovingAddressesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeMovingAddressesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeMovingAddressesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeMovingAddressesResult {
        if let describeMovingAddressesSyncOverrideNonOptional = describeMovingAddressesSyncOverride {
            if let describeMovingAddressesSyncOverrideTyped = describeMovingAddressesSyncOverrideNonOptional
                    as? DescribeMovingAddressesSyncType<InvocationReportingType> {
                return try describeMovingAddressesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeMovingAddressesResult.__default
    }

    /**
     Invokes the DescribeNatGateways operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeNatGatewaysRequest object being passed to this operation.
         - completion: The DescribeNatGatewaysResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeNatGatewaysResult
           object will be validated before being returned to caller.
     */
    public func describeNatGatewaysAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeNatGatewaysRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeNatGatewaysResult, HTTPClientError>) -> ()) throws {
        if let describeNatGatewaysAsyncOverrideNonOptional = describeNatGatewaysAsyncOverride {
            if let describeNatGatewaysAsyncOverrideTyped = describeNatGatewaysAsyncOverrideNonOptional
                    as? DescribeNatGatewaysAsyncType<InvocationReportingType> {
                return try describeNatGatewaysAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeNatGatewaysResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeNatGateways operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeNatGatewaysRequest object being passed to this operation.
     - Returns: The DescribeNatGatewaysResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeNatGatewaysSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeNatGatewaysRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeNatGatewaysResult {
        if let describeNatGatewaysSyncOverrideNonOptional = describeNatGatewaysSyncOverride {
            if let describeNatGatewaysSyncOverrideTyped = describeNatGatewaysSyncOverrideNonOptional
                    as? DescribeNatGatewaysSyncType<InvocationReportingType> {
                return try describeNatGatewaysSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeNatGatewaysResult.__default
    }

    /**
     Invokes the DescribeNetworkAcls operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeNetworkAclsRequest object being passed to this operation.
         - completion: The DescribeNetworkAclsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeNetworkAclsResult
           object will be validated before being returned to caller.
     */
    public func describeNetworkAclsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeNetworkAclsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeNetworkAclsResult, HTTPClientError>) -> ()) throws {
        if let describeNetworkAclsAsyncOverrideNonOptional = describeNetworkAclsAsyncOverride {
            if let describeNetworkAclsAsyncOverrideTyped = describeNetworkAclsAsyncOverrideNonOptional
                    as? DescribeNetworkAclsAsyncType<InvocationReportingType> {
                return try describeNetworkAclsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeNetworkAclsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeNetworkAcls operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeNetworkAclsRequest object being passed to this operation.
     - Returns: The DescribeNetworkAclsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeNetworkAclsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeNetworkAclsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeNetworkAclsResult {
        if let describeNetworkAclsSyncOverrideNonOptional = describeNetworkAclsSyncOverride {
            if let describeNetworkAclsSyncOverrideTyped = describeNetworkAclsSyncOverrideNonOptional
                    as? DescribeNetworkAclsSyncType<InvocationReportingType> {
                return try describeNetworkAclsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeNetworkAclsResult.__default
    }

    /**
     Invokes the DescribeNetworkInterfaceAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeNetworkInterfaceAttributeRequest object being passed to this operation.
         - completion: The DescribeNetworkInterfaceAttributeResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeNetworkInterfaceAttributeResult
           object will be validated before being returned to caller.
     */
    public func describeNetworkInterfaceAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeNetworkInterfaceAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeNetworkInterfaceAttributeResult, HTTPClientError>) -> ()) throws {
        if let describeNetworkInterfaceAttributeAsyncOverrideNonOptional = describeNetworkInterfaceAttributeAsyncOverride {
            if let describeNetworkInterfaceAttributeAsyncOverrideTyped = describeNetworkInterfaceAttributeAsyncOverrideNonOptional
                    as? DescribeNetworkInterfaceAttributeAsyncType<InvocationReportingType> {
                return try describeNetworkInterfaceAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeNetworkInterfaceAttributeResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeNetworkInterfaceAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeNetworkInterfaceAttributeRequest object being passed to this operation.
     - Returns: The DescribeNetworkInterfaceAttributeResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeNetworkInterfaceAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeNetworkInterfaceAttributeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeNetworkInterfaceAttributeResult {
        if let describeNetworkInterfaceAttributeSyncOverrideNonOptional = describeNetworkInterfaceAttributeSyncOverride {
            if let describeNetworkInterfaceAttributeSyncOverrideTyped = describeNetworkInterfaceAttributeSyncOverrideNonOptional
                    as? DescribeNetworkInterfaceAttributeSyncType<InvocationReportingType> {
                return try describeNetworkInterfaceAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeNetworkInterfaceAttributeResult.__default
    }

    /**
     Invokes the DescribeNetworkInterfacePermissions operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeNetworkInterfacePermissionsRequest object being passed to this operation.
         - completion: The DescribeNetworkInterfacePermissionsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeNetworkInterfacePermissionsResult
           object will be validated before being returned to caller.
     */
    public func describeNetworkInterfacePermissionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeNetworkInterfacePermissionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeNetworkInterfacePermissionsResult, HTTPClientError>) -> ()) throws {
        if let describeNetworkInterfacePermissionsAsyncOverrideNonOptional = describeNetworkInterfacePermissionsAsyncOverride {
            if let describeNetworkInterfacePermissionsAsyncOverrideTyped = describeNetworkInterfacePermissionsAsyncOverrideNonOptional
                    as? DescribeNetworkInterfacePermissionsAsyncType<InvocationReportingType> {
                return try describeNetworkInterfacePermissionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeNetworkInterfacePermissionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeNetworkInterfacePermissions operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeNetworkInterfacePermissionsRequest object being passed to this operation.
     - Returns: The DescribeNetworkInterfacePermissionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeNetworkInterfacePermissionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeNetworkInterfacePermissionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeNetworkInterfacePermissionsResult {
        if let describeNetworkInterfacePermissionsSyncOverrideNonOptional = describeNetworkInterfacePermissionsSyncOverride {
            if let describeNetworkInterfacePermissionsSyncOverrideTyped = describeNetworkInterfacePermissionsSyncOverrideNonOptional
                    as? DescribeNetworkInterfacePermissionsSyncType<InvocationReportingType> {
                return try describeNetworkInterfacePermissionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeNetworkInterfacePermissionsResult.__default
    }

    /**
     Invokes the DescribeNetworkInterfaces operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeNetworkInterfacesRequest object being passed to this operation.
         - completion: The DescribeNetworkInterfacesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeNetworkInterfacesResult
           object will be validated before being returned to caller.
     */
    public func describeNetworkInterfacesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeNetworkInterfacesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeNetworkInterfacesResult, HTTPClientError>) -> ()) throws {
        if let describeNetworkInterfacesAsyncOverrideNonOptional = describeNetworkInterfacesAsyncOverride {
            if let describeNetworkInterfacesAsyncOverrideTyped = describeNetworkInterfacesAsyncOverrideNonOptional
                    as? DescribeNetworkInterfacesAsyncType<InvocationReportingType> {
                return try describeNetworkInterfacesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeNetworkInterfacesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeNetworkInterfaces operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeNetworkInterfacesRequest object being passed to this operation.
     - Returns: The DescribeNetworkInterfacesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeNetworkInterfacesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeNetworkInterfacesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeNetworkInterfacesResult {
        if let describeNetworkInterfacesSyncOverrideNonOptional = describeNetworkInterfacesSyncOverride {
            if let describeNetworkInterfacesSyncOverrideTyped = describeNetworkInterfacesSyncOverrideNonOptional
                    as? DescribeNetworkInterfacesSyncType<InvocationReportingType> {
                return try describeNetworkInterfacesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeNetworkInterfacesResult.__default
    }

    /**
     Invokes the DescribePlacementGroups operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribePlacementGroupsRequest object being passed to this operation.
         - completion: The DescribePlacementGroupsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribePlacementGroupsResult
           object will be validated before being returned to caller.
     */
    public func describePlacementGroupsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribePlacementGroupsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribePlacementGroupsResult, HTTPClientError>) -> ()) throws {
        if let describePlacementGroupsAsyncOverrideNonOptional = describePlacementGroupsAsyncOverride {
            if let describePlacementGroupsAsyncOverrideTyped = describePlacementGroupsAsyncOverrideNonOptional
                    as? DescribePlacementGroupsAsyncType<InvocationReportingType> {
                return try describePlacementGroupsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribePlacementGroupsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribePlacementGroups operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribePlacementGroupsRequest object being passed to this operation.
     - Returns: The DescribePlacementGroupsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describePlacementGroupsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribePlacementGroupsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribePlacementGroupsResult {
        if let describePlacementGroupsSyncOverrideNonOptional = describePlacementGroupsSyncOverride {
            if let describePlacementGroupsSyncOverrideTyped = describePlacementGroupsSyncOverrideNonOptional
                    as? DescribePlacementGroupsSyncType<InvocationReportingType> {
                return try describePlacementGroupsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribePlacementGroupsResult.__default
    }

    /**
     Invokes the DescribePrefixLists operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribePrefixListsRequest object being passed to this operation.
         - completion: The DescribePrefixListsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribePrefixListsResult
           object will be validated before being returned to caller.
     */
    public func describePrefixListsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribePrefixListsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribePrefixListsResult, HTTPClientError>) -> ()) throws {
        if let describePrefixListsAsyncOverrideNonOptional = describePrefixListsAsyncOverride {
            if let describePrefixListsAsyncOverrideTyped = describePrefixListsAsyncOverrideNonOptional
                    as? DescribePrefixListsAsyncType<InvocationReportingType> {
                return try describePrefixListsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribePrefixListsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribePrefixLists operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribePrefixListsRequest object being passed to this operation.
     - Returns: The DescribePrefixListsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describePrefixListsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribePrefixListsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribePrefixListsResult {
        if let describePrefixListsSyncOverrideNonOptional = describePrefixListsSyncOverride {
            if let describePrefixListsSyncOverrideTyped = describePrefixListsSyncOverrideNonOptional
                    as? DescribePrefixListsSyncType<InvocationReportingType> {
                return try describePrefixListsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribePrefixListsResult.__default
    }

    /**
     Invokes the DescribePrincipalIdFormat operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribePrincipalIdFormatRequest object being passed to this operation.
         - completion: The DescribePrincipalIdFormatResult object or an error will be passed to this 
           callback when the operation is complete. The DescribePrincipalIdFormatResult
           object will be validated before being returned to caller.
     */
    public func describePrincipalIdFormatAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribePrincipalIdFormatRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribePrincipalIdFormatResult, HTTPClientError>) -> ()) throws {
        if let describePrincipalIdFormatAsyncOverrideNonOptional = describePrincipalIdFormatAsyncOverride {
            if let describePrincipalIdFormatAsyncOverrideTyped = describePrincipalIdFormatAsyncOverrideNonOptional
                    as? DescribePrincipalIdFormatAsyncType<InvocationReportingType> {
                return try describePrincipalIdFormatAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribePrincipalIdFormatResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribePrincipalIdFormat operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribePrincipalIdFormatRequest object being passed to this operation.
     - Returns: The DescribePrincipalIdFormatResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describePrincipalIdFormatSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribePrincipalIdFormatRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribePrincipalIdFormatResult {
        if let describePrincipalIdFormatSyncOverrideNonOptional = describePrincipalIdFormatSyncOverride {
            if let describePrincipalIdFormatSyncOverrideTyped = describePrincipalIdFormatSyncOverrideNonOptional
                    as? DescribePrincipalIdFormatSyncType<InvocationReportingType> {
                return try describePrincipalIdFormatSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribePrincipalIdFormatResult.__default
    }

    /**
     Invokes the DescribePublicIpv4Pools operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribePublicIpv4PoolsRequest object being passed to this operation.
         - completion: The DescribePublicIpv4PoolsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribePublicIpv4PoolsResult
           object will be validated before being returned to caller.
     */
    public func describePublicIpv4PoolsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribePublicIpv4PoolsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribePublicIpv4PoolsResult, HTTPClientError>) -> ()) throws {
        if let describePublicIpv4PoolsAsyncOverrideNonOptional = describePublicIpv4PoolsAsyncOverride {
            if let describePublicIpv4PoolsAsyncOverrideTyped = describePublicIpv4PoolsAsyncOverrideNonOptional
                    as? DescribePublicIpv4PoolsAsyncType<InvocationReportingType> {
                return try describePublicIpv4PoolsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribePublicIpv4PoolsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribePublicIpv4Pools operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribePublicIpv4PoolsRequest object being passed to this operation.
     - Returns: The DescribePublicIpv4PoolsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describePublicIpv4PoolsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribePublicIpv4PoolsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribePublicIpv4PoolsResult {
        if let describePublicIpv4PoolsSyncOverrideNonOptional = describePublicIpv4PoolsSyncOverride {
            if let describePublicIpv4PoolsSyncOverrideTyped = describePublicIpv4PoolsSyncOverrideNonOptional
                    as? DescribePublicIpv4PoolsSyncType<InvocationReportingType> {
                return try describePublicIpv4PoolsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribePublicIpv4PoolsResult.__default
    }

    /**
     Invokes the DescribeRegions operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeRegionsRequest object being passed to this operation.
         - completion: The DescribeRegionsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeRegionsResult
           object will be validated before being returned to caller.
     */
    public func describeRegionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeRegionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeRegionsResult, HTTPClientError>) -> ()) throws {
        if let describeRegionsAsyncOverrideNonOptional = describeRegionsAsyncOverride {
            if let describeRegionsAsyncOverrideTyped = describeRegionsAsyncOverrideNonOptional
                    as? DescribeRegionsAsyncType<InvocationReportingType> {
                return try describeRegionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeRegionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeRegions operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeRegionsRequest object being passed to this operation.
     - Returns: The DescribeRegionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeRegionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeRegionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeRegionsResult {
        if let describeRegionsSyncOverrideNonOptional = describeRegionsSyncOverride {
            if let describeRegionsSyncOverrideTyped = describeRegionsSyncOverrideNonOptional
                    as? DescribeRegionsSyncType<InvocationReportingType> {
                return try describeRegionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeRegionsResult.__default
    }

    /**
     Invokes the DescribeReservedInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeReservedInstancesRequest object being passed to this operation.
         - completion: The DescribeReservedInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeReservedInstancesResult
           object will be validated before being returned to caller.
     */
    public func describeReservedInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeReservedInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeReservedInstancesResult, HTTPClientError>) -> ()) throws {
        if let describeReservedInstancesAsyncOverrideNonOptional = describeReservedInstancesAsyncOverride {
            if let describeReservedInstancesAsyncOverrideTyped = describeReservedInstancesAsyncOverrideNonOptional
                    as? DescribeReservedInstancesAsyncType<InvocationReportingType> {
                return try describeReservedInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeReservedInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeReservedInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeReservedInstancesRequest object being passed to this operation.
     - Returns: The DescribeReservedInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeReservedInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeReservedInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeReservedInstancesResult {
        if let describeReservedInstancesSyncOverrideNonOptional = describeReservedInstancesSyncOverride {
            if let describeReservedInstancesSyncOverrideTyped = describeReservedInstancesSyncOverrideNonOptional
                    as? DescribeReservedInstancesSyncType<InvocationReportingType> {
                return try describeReservedInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeReservedInstancesResult.__default
    }

    /**
     Invokes the DescribeReservedInstancesListings operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeReservedInstancesListingsRequest object being passed to this operation.
         - completion: The DescribeReservedInstancesListingsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeReservedInstancesListingsResult
           object will be validated before being returned to caller.
     */
    public func describeReservedInstancesListingsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeReservedInstancesListingsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeReservedInstancesListingsResult, HTTPClientError>) -> ()) throws {
        if let describeReservedInstancesListingsAsyncOverrideNonOptional = describeReservedInstancesListingsAsyncOverride {
            if let describeReservedInstancesListingsAsyncOverrideTyped = describeReservedInstancesListingsAsyncOverrideNonOptional
                    as? DescribeReservedInstancesListingsAsyncType<InvocationReportingType> {
                return try describeReservedInstancesListingsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeReservedInstancesListingsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeReservedInstancesListings operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeReservedInstancesListingsRequest object being passed to this operation.
     - Returns: The DescribeReservedInstancesListingsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeReservedInstancesListingsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeReservedInstancesListingsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeReservedInstancesListingsResult {
        if let describeReservedInstancesListingsSyncOverrideNonOptional = describeReservedInstancesListingsSyncOverride {
            if let describeReservedInstancesListingsSyncOverrideTyped = describeReservedInstancesListingsSyncOverrideNonOptional
                    as? DescribeReservedInstancesListingsSyncType<InvocationReportingType> {
                return try describeReservedInstancesListingsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeReservedInstancesListingsResult.__default
    }

    /**
     Invokes the DescribeReservedInstancesModifications operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeReservedInstancesModificationsRequest object being passed to this operation.
         - completion: The DescribeReservedInstancesModificationsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeReservedInstancesModificationsResult
           object will be validated before being returned to caller.
     */
    public func describeReservedInstancesModificationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeReservedInstancesModificationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeReservedInstancesModificationsResult, HTTPClientError>) -> ()) throws {
        if let describeReservedInstancesModificationsAsyncOverrideNonOptional = describeReservedInstancesModificationsAsyncOverride {
            if let describeReservedInstancesModificationsAsyncOverrideTyped = describeReservedInstancesModificationsAsyncOverrideNonOptional
                    as? DescribeReservedInstancesModificationsAsyncType<InvocationReportingType> {
                return try describeReservedInstancesModificationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeReservedInstancesModificationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeReservedInstancesModifications operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeReservedInstancesModificationsRequest object being passed to this operation.
     - Returns: The DescribeReservedInstancesModificationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeReservedInstancesModificationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeReservedInstancesModificationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeReservedInstancesModificationsResult {
        if let describeReservedInstancesModificationsSyncOverrideNonOptional = describeReservedInstancesModificationsSyncOverride {
            if let describeReservedInstancesModificationsSyncOverrideTyped = describeReservedInstancesModificationsSyncOverrideNonOptional
                    as? DescribeReservedInstancesModificationsSyncType<InvocationReportingType> {
                return try describeReservedInstancesModificationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeReservedInstancesModificationsResult.__default
    }

    /**
     Invokes the DescribeReservedInstancesOfferings operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeReservedInstancesOfferingsRequest object being passed to this operation.
         - completion: The DescribeReservedInstancesOfferingsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeReservedInstancesOfferingsResult
           object will be validated before being returned to caller.
     */
    public func describeReservedInstancesOfferingsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeReservedInstancesOfferingsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeReservedInstancesOfferingsResult, HTTPClientError>) -> ()) throws {
        if let describeReservedInstancesOfferingsAsyncOverrideNonOptional = describeReservedInstancesOfferingsAsyncOverride {
            if let describeReservedInstancesOfferingsAsyncOverrideTyped = describeReservedInstancesOfferingsAsyncOverrideNonOptional
                    as? DescribeReservedInstancesOfferingsAsyncType<InvocationReportingType> {
                return try describeReservedInstancesOfferingsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeReservedInstancesOfferingsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeReservedInstancesOfferings operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeReservedInstancesOfferingsRequest object being passed to this operation.
     - Returns: The DescribeReservedInstancesOfferingsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeReservedInstancesOfferingsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeReservedInstancesOfferingsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeReservedInstancesOfferingsResult {
        if let describeReservedInstancesOfferingsSyncOverrideNonOptional = describeReservedInstancesOfferingsSyncOverride {
            if let describeReservedInstancesOfferingsSyncOverrideTyped = describeReservedInstancesOfferingsSyncOverrideNonOptional
                    as? DescribeReservedInstancesOfferingsSyncType<InvocationReportingType> {
                return try describeReservedInstancesOfferingsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeReservedInstancesOfferingsResult.__default
    }

    /**
     Invokes the DescribeRouteTables operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeRouteTablesRequest object being passed to this operation.
         - completion: The DescribeRouteTablesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeRouteTablesResult
           object will be validated before being returned to caller.
     */
    public func describeRouteTablesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeRouteTablesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeRouteTablesResult, HTTPClientError>) -> ()) throws {
        if let describeRouteTablesAsyncOverrideNonOptional = describeRouteTablesAsyncOverride {
            if let describeRouteTablesAsyncOverrideTyped = describeRouteTablesAsyncOverrideNonOptional
                    as? DescribeRouteTablesAsyncType<InvocationReportingType> {
                return try describeRouteTablesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeRouteTablesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeRouteTables operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeRouteTablesRequest object being passed to this operation.
     - Returns: The DescribeRouteTablesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeRouteTablesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeRouteTablesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeRouteTablesResult {
        if let describeRouteTablesSyncOverrideNonOptional = describeRouteTablesSyncOverride {
            if let describeRouteTablesSyncOverrideTyped = describeRouteTablesSyncOverrideNonOptional
                    as? DescribeRouteTablesSyncType<InvocationReportingType> {
                return try describeRouteTablesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeRouteTablesResult.__default
    }

    /**
     Invokes the DescribeScheduledInstanceAvailability operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeScheduledInstanceAvailabilityRequest object being passed to this operation.
         - completion: The DescribeScheduledInstanceAvailabilityResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeScheduledInstanceAvailabilityResult
           object will be validated before being returned to caller.
     */
    public func describeScheduledInstanceAvailabilityAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeScheduledInstanceAvailabilityRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeScheduledInstanceAvailabilityResult, HTTPClientError>) -> ()) throws {
        if let describeScheduledInstanceAvailabilityAsyncOverrideNonOptional = describeScheduledInstanceAvailabilityAsyncOverride {
            if let describeScheduledInstanceAvailabilityAsyncOverrideTyped = describeScheduledInstanceAvailabilityAsyncOverrideNonOptional
                    as? DescribeScheduledInstanceAvailabilityAsyncType<InvocationReportingType> {
                return try describeScheduledInstanceAvailabilityAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeScheduledInstanceAvailabilityResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeScheduledInstanceAvailability operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeScheduledInstanceAvailabilityRequest object being passed to this operation.
     - Returns: The DescribeScheduledInstanceAvailabilityResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeScheduledInstanceAvailabilitySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeScheduledInstanceAvailabilityRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeScheduledInstanceAvailabilityResult {
        if let describeScheduledInstanceAvailabilitySyncOverrideNonOptional = describeScheduledInstanceAvailabilitySyncOverride {
            if let describeScheduledInstanceAvailabilitySyncOverrideTyped = describeScheduledInstanceAvailabilitySyncOverrideNonOptional
                    as? DescribeScheduledInstanceAvailabilitySyncType<InvocationReportingType> {
                return try describeScheduledInstanceAvailabilitySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeScheduledInstanceAvailabilityResult.__default
    }

    /**
     Invokes the DescribeScheduledInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeScheduledInstancesRequest object being passed to this operation.
         - completion: The DescribeScheduledInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeScheduledInstancesResult
           object will be validated before being returned to caller.
     */
    public func describeScheduledInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeScheduledInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeScheduledInstancesResult, HTTPClientError>) -> ()) throws {
        if let describeScheduledInstancesAsyncOverrideNonOptional = describeScheduledInstancesAsyncOverride {
            if let describeScheduledInstancesAsyncOverrideTyped = describeScheduledInstancesAsyncOverrideNonOptional
                    as? DescribeScheduledInstancesAsyncType<InvocationReportingType> {
                return try describeScheduledInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeScheduledInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeScheduledInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeScheduledInstancesRequest object being passed to this operation.
     - Returns: The DescribeScheduledInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeScheduledInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeScheduledInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeScheduledInstancesResult {
        if let describeScheduledInstancesSyncOverrideNonOptional = describeScheduledInstancesSyncOverride {
            if let describeScheduledInstancesSyncOverrideTyped = describeScheduledInstancesSyncOverrideNonOptional
                    as? DescribeScheduledInstancesSyncType<InvocationReportingType> {
                return try describeScheduledInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeScheduledInstancesResult.__default
    }

    /**
     Invokes the DescribeSecurityGroupReferences operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeSecurityGroupReferencesRequest object being passed to this operation.
         - completion: The DescribeSecurityGroupReferencesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeSecurityGroupReferencesResult
           object will be validated before being returned to caller.
     */
    public func describeSecurityGroupReferencesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSecurityGroupReferencesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeSecurityGroupReferencesResult, HTTPClientError>) -> ()) throws {
        if let describeSecurityGroupReferencesAsyncOverrideNonOptional = describeSecurityGroupReferencesAsyncOverride {
            if let describeSecurityGroupReferencesAsyncOverrideTyped = describeSecurityGroupReferencesAsyncOverrideNonOptional
                    as? DescribeSecurityGroupReferencesAsyncType<InvocationReportingType> {
                return try describeSecurityGroupReferencesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeSecurityGroupReferencesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeSecurityGroupReferences operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeSecurityGroupReferencesRequest object being passed to this operation.
     - Returns: The DescribeSecurityGroupReferencesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeSecurityGroupReferencesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSecurityGroupReferencesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeSecurityGroupReferencesResult {
        if let describeSecurityGroupReferencesSyncOverrideNonOptional = describeSecurityGroupReferencesSyncOverride {
            if let describeSecurityGroupReferencesSyncOverrideTyped = describeSecurityGroupReferencesSyncOverrideNonOptional
                    as? DescribeSecurityGroupReferencesSyncType<InvocationReportingType> {
                return try describeSecurityGroupReferencesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeSecurityGroupReferencesResult.__default
    }

    /**
     Invokes the DescribeSecurityGroups operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeSecurityGroupsRequest object being passed to this operation.
         - completion: The DescribeSecurityGroupsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeSecurityGroupsResult
           object will be validated before being returned to caller.
     */
    public func describeSecurityGroupsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSecurityGroupsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeSecurityGroupsResult, HTTPClientError>) -> ()) throws {
        if let describeSecurityGroupsAsyncOverrideNonOptional = describeSecurityGroupsAsyncOverride {
            if let describeSecurityGroupsAsyncOverrideTyped = describeSecurityGroupsAsyncOverrideNonOptional
                    as? DescribeSecurityGroupsAsyncType<InvocationReportingType> {
                return try describeSecurityGroupsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeSecurityGroupsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeSecurityGroups operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeSecurityGroupsRequest object being passed to this operation.
     - Returns: The DescribeSecurityGroupsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeSecurityGroupsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSecurityGroupsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeSecurityGroupsResult {
        if let describeSecurityGroupsSyncOverrideNonOptional = describeSecurityGroupsSyncOverride {
            if let describeSecurityGroupsSyncOverrideTyped = describeSecurityGroupsSyncOverrideNonOptional
                    as? DescribeSecurityGroupsSyncType<InvocationReportingType> {
                return try describeSecurityGroupsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeSecurityGroupsResult.__default
    }

    /**
     Invokes the DescribeSnapshotAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeSnapshotAttributeRequest object being passed to this operation.
         - completion: The DescribeSnapshotAttributeResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeSnapshotAttributeResult
           object will be validated before being returned to caller.
     */
    public func describeSnapshotAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSnapshotAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeSnapshotAttributeResult, HTTPClientError>) -> ()) throws {
        if let describeSnapshotAttributeAsyncOverrideNonOptional = describeSnapshotAttributeAsyncOverride {
            if let describeSnapshotAttributeAsyncOverrideTyped = describeSnapshotAttributeAsyncOverrideNonOptional
                    as? DescribeSnapshotAttributeAsyncType<InvocationReportingType> {
                return try describeSnapshotAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeSnapshotAttributeResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeSnapshotAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeSnapshotAttributeRequest object being passed to this operation.
     - Returns: The DescribeSnapshotAttributeResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeSnapshotAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSnapshotAttributeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeSnapshotAttributeResult {
        if let describeSnapshotAttributeSyncOverrideNonOptional = describeSnapshotAttributeSyncOverride {
            if let describeSnapshotAttributeSyncOverrideTyped = describeSnapshotAttributeSyncOverrideNonOptional
                    as? DescribeSnapshotAttributeSyncType<InvocationReportingType> {
                return try describeSnapshotAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeSnapshotAttributeResult.__default
    }

    /**
     Invokes the DescribeSnapshots operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeSnapshotsRequest object being passed to this operation.
         - completion: The DescribeSnapshotsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeSnapshotsResult
           object will be validated before being returned to caller.
     */
    public func describeSnapshotsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSnapshotsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeSnapshotsResult, HTTPClientError>) -> ()) throws {
        if let describeSnapshotsAsyncOverrideNonOptional = describeSnapshotsAsyncOverride {
            if let describeSnapshotsAsyncOverrideTyped = describeSnapshotsAsyncOverrideNonOptional
                    as? DescribeSnapshotsAsyncType<InvocationReportingType> {
                return try describeSnapshotsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeSnapshotsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeSnapshots operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeSnapshotsRequest object being passed to this operation.
     - Returns: The DescribeSnapshotsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeSnapshotsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSnapshotsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeSnapshotsResult {
        if let describeSnapshotsSyncOverrideNonOptional = describeSnapshotsSyncOverride {
            if let describeSnapshotsSyncOverrideTyped = describeSnapshotsSyncOverrideNonOptional
                    as? DescribeSnapshotsSyncType<InvocationReportingType> {
                return try describeSnapshotsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeSnapshotsResult.__default
    }

    /**
     Invokes the DescribeSpotDatafeedSubscription operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeSpotDatafeedSubscriptionRequest object being passed to this operation.
         - completion: The DescribeSpotDatafeedSubscriptionResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeSpotDatafeedSubscriptionResult
           object will be validated before being returned to caller.
     */
    public func describeSpotDatafeedSubscriptionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSpotDatafeedSubscriptionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeSpotDatafeedSubscriptionResult, HTTPClientError>) -> ()) throws {
        if let describeSpotDatafeedSubscriptionAsyncOverrideNonOptional = describeSpotDatafeedSubscriptionAsyncOverride {
            if let describeSpotDatafeedSubscriptionAsyncOverrideTyped = describeSpotDatafeedSubscriptionAsyncOverrideNonOptional
                    as? DescribeSpotDatafeedSubscriptionAsyncType<InvocationReportingType> {
                return try describeSpotDatafeedSubscriptionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeSpotDatafeedSubscriptionResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeSpotDatafeedSubscription operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeSpotDatafeedSubscriptionRequest object being passed to this operation.
     - Returns: The DescribeSpotDatafeedSubscriptionResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeSpotDatafeedSubscriptionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSpotDatafeedSubscriptionRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeSpotDatafeedSubscriptionResult {
        if let describeSpotDatafeedSubscriptionSyncOverrideNonOptional = describeSpotDatafeedSubscriptionSyncOverride {
            if let describeSpotDatafeedSubscriptionSyncOverrideTyped = describeSpotDatafeedSubscriptionSyncOverrideNonOptional
                    as? DescribeSpotDatafeedSubscriptionSyncType<InvocationReportingType> {
                return try describeSpotDatafeedSubscriptionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeSpotDatafeedSubscriptionResult.__default
    }

    /**
     Invokes the DescribeSpotFleetInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeSpotFleetInstancesRequest object being passed to this operation.
         - completion: The DescribeSpotFleetInstancesResponse object or an error will be passed to this 
           callback when the operation is complete. The DescribeSpotFleetInstancesResponse
           object will be validated before being returned to caller.
     */
    public func describeSpotFleetInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSpotFleetInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeSpotFleetInstancesResponse, HTTPClientError>) -> ()) throws {
        if let describeSpotFleetInstancesAsyncOverrideNonOptional = describeSpotFleetInstancesAsyncOverride {
            if let describeSpotFleetInstancesAsyncOverrideTyped = describeSpotFleetInstancesAsyncOverrideNonOptional
                    as? DescribeSpotFleetInstancesAsyncType<InvocationReportingType> {
                return try describeSpotFleetInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeSpotFleetInstancesResponse.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeSpotFleetInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeSpotFleetInstancesRequest object being passed to this operation.
     - Returns: The DescribeSpotFleetInstancesResponse object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeSpotFleetInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSpotFleetInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeSpotFleetInstancesResponse {
        if let describeSpotFleetInstancesSyncOverrideNonOptional = describeSpotFleetInstancesSyncOverride {
            if let describeSpotFleetInstancesSyncOverrideTyped = describeSpotFleetInstancesSyncOverrideNonOptional
                    as? DescribeSpotFleetInstancesSyncType<InvocationReportingType> {
                return try describeSpotFleetInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeSpotFleetInstancesResponse.__default
    }

    /**
     Invokes the DescribeSpotFleetRequestHistory operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeSpotFleetRequestHistoryRequest object being passed to this operation.
         - completion: The DescribeSpotFleetRequestHistoryResponse object or an error will be passed to this 
           callback when the operation is complete. The DescribeSpotFleetRequestHistoryResponse
           object will be validated before being returned to caller.
     */
    public func describeSpotFleetRequestHistoryAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSpotFleetRequestHistoryRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeSpotFleetRequestHistoryResponse, HTTPClientError>) -> ()) throws {
        if let describeSpotFleetRequestHistoryAsyncOverrideNonOptional = describeSpotFleetRequestHistoryAsyncOverride {
            if let describeSpotFleetRequestHistoryAsyncOverrideTyped = describeSpotFleetRequestHistoryAsyncOverrideNonOptional
                    as? DescribeSpotFleetRequestHistoryAsyncType<InvocationReportingType> {
                return try describeSpotFleetRequestHistoryAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeSpotFleetRequestHistoryResponse.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeSpotFleetRequestHistory operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeSpotFleetRequestHistoryRequest object being passed to this operation.
     - Returns: The DescribeSpotFleetRequestHistoryResponse object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeSpotFleetRequestHistorySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSpotFleetRequestHistoryRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeSpotFleetRequestHistoryResponse {
        if let describeSpotFleetRequestHistorySyncOverrideNonOptional = describeSpotFleetRequestHistorySyncOverride {
            if let describeSpotFleetRequestHistorySyncOverrideTyped = describeSpotFleetRequestHistorySyncOverrideNonOptional
                    as? DescribeSpotFleetRequestHistorySyncType<InvocationReportingType> {
                return try describeSpotFleetRequestHistorySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeSpotFleetRequestHistoryResponse.__default
    }

    /**
     Invokes the DescribeSpotFleetRequests operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeSpotFleetRequestsRequest object being passed to this operation.
         - completion: The DescribeSpotFleetRequestsResponse object or an error will be passed to this 
           callback when the operation is complete. The DescribeSpotFleetRequestsResponse
           object will be validated before being returned to caller.
     */
    public func describeSpotFleetRequestsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSpotFleetRequestsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeSpotFleetRequestsResponse, HTTPClientError>) -> ()) throws {
        if let describeSpotFleetRequestsAsyncOverrideNonOptional = describeSpotFleetRequestsAsyncOverride {
            if let describeSpotFleetRequestsAsyncOverrideTyped = describeSpotFleetRequestsAsyncOverrideNonOptional
                    as? DescribeSpotFleetRequestsAsyncType<InvocationReportingType> {
                return try describeSpotFleetRequestsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeSpotFleetRequestsResponse.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeSpotFleetRequests operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeSpotFleetRequestsRequest object being passed to this operation.
     - Returns: The DescribeSpotFleetRequestsResponse object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeSpotFleetRequestsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSpotFleetRequestsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeSpotFleetRequestsResponse {
        if let describeSpotFleetRequestsSyncOverrideNonOptional = describeSpotFleetRequestsSyncOverride {
            if let describeSpotFleetRequestsSyncOverrideTyped = describeSpotFleetRequestsSyncOverrideNonOptional
                    as? DescribeSpotFleetRequestsSyncType<InvocationReportingType> {
                return try describeSpotFleetRequestsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeSpotFleetRequestsResponse.__default
    }

    /**
     Invokes the DescribeSpotInstanceRequests operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeSpotInstanceRequestsRequest object being passed to this operation.
         - completion: The DescribeSpotInstanceRequestsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeSpotInstanceRequestsResult
           object will be validated before being returned to caller.
     */
    public func describeSpotInstanceRequestsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSpotInstanceRequestsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeSpotInstanceRequestsResult, HTTPClientError>) -> ()) throws {
        if let describeSpotInstanceRequestsAsyncOverrideNonOptional = describeSpotInstanceRequestsAsyncOverride {
            if let describeSpotInstanceRequestsAsyncOverrideTyped = describeSpotInstanceRequestsAsyncOverrideNonOptional
                    as? DescribeSpotInstanceRequestsAsyncType<InvocationReportingType> {
                return try describeSpotInstanceRequestsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeSpotInstanceRequestsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeSpotInstanceRequests operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeSpotInstanceRequestsRequest object being passed to this operation.
     - Returns: The DescribeSpotInstanceRequestsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeSpotInstanceRequestsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSpotInstanceRequestsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeSpotInstanceRequestsResult {
        if let describeSpotInstanceRequestsSyncOverrideNonOptional = describeSpotInstanceRequestsSyncOverride {
            if let describeSpotInstanceRequestsSyncOverrideTyped = describeSpotInstanceRequestsSyncOverrideNonOptional
                    as? DescribeSpotInstanceRequestsSyncType<InvocationReportingType> {
                return try describeSpotInstanceRequestsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeSpotInstanceRequestsResult.__default
    }

    /**
     Invokes the DescribeSpotPriceHistory operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeSpotPriceHistoryRequest object being passed to this operation.
         - completion: The DescribeSpotPriceHistoryResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeSpotPriceHistoryResult
           object will be validated before being returned to caller.
     */
    public func describeSpotPriceHistoryAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSpotPriceHistoryRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeSpotPriceHistoryResult, HTTPClientError>) -> ()) throws {
        if let describeSpotPriceHistoryAsyncOverrideNonOptional = describeSpotPriceHistoryAsyncOverride {
            if let describeSpotPriceHistoryAsyncOverrideTyped = describeSpotPriceHistoryAsyncOverrideNonOptional
                    as? DescribeSpotPriceHistoryAsyncType<InvocationReportingType> {
                return try describeSpotPriceHistoryAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeSpotPriceHistoryResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeSpotPriceHistory operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeSpotPriceHistoryRequest object being passed to this operation.
     - Returns: The DescribeSpotPriceHistoryResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeSpotPriceHistorySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSpotPriceHistoryRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeSpotPriceHistoryResult {
        if let describeSpotPriceHistorySyncOverrideNonOptional = describeSpotPriceHistorySyncOverride {
            if let describeSpotPriceHistorySyncOverrideTyped = describeSpotPriceHistorySyncOverrideNonOptional
                    as? DescribeSpotPriceHistorySyncType<InvocationReportingType> {
                return try describeSpotPriceHistorySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeSpotPriceHistoryResult.__default
    }

    /**
     Invokes the DescribeStaleSecurityGroups operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeStaleSecurityGroupsRequest object being passed to this operation.
         - completion: The DescribeStaleSecurityGroupsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeStaleSecurityGroupsResult
           object will be validated before being returned to caller.
     */
    public func describeStaleSecurityGroupsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeStaleSecurityGroupsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeStaleSecurityGroupsResult, HTTPClientError>) -> ()) throws {
        if let describeStaleSecurityGroupsAsyncOverrideNonOptional = describeStaleSecurityGroupsAsyncOverride {
            if let describeStaleSecurityGroupsAsyncOverrideTyped = describeStaleSecurityGroupsAsyncOverrideNonOptional
                    as? DescribeStaleSecurityGroupsAsyncType<InvocationReportingType> {
                return try describeStaleSecurityGroupsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeStaleSecurityGroupsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeStaleSecurityGroups operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeStaleSecurityGroupsRequest object being passed to this operation.
     - Returns: The DescribeStaleSecurityGroupsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeStaleSecurityGroupsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeStaleSecurityGroupsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeStaleSecurityGroupsResult {
        if let describeStaleSecurityGroupsSyncOverrideNonOptional = describeStaleSecurityGroupsSyncOverride {
            if let describeStaleSecurityGroupsSyncOverrideTyped = describeStaleSecurityGroupsSyncOverrideNonOptional
                    as? DescribeStaleSecurityGroupsSyncType<InvocationReportingType> {
                return try describeStaleSecurityGroupsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeStaleSecurityGroupsResult.__default
    }

    /**
     Invokes the DescribeSubnets operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeSubnetsRequest object being passed to this operation.
         - completion: The DescribeSubnetsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeSubnetsResult
           object will be validated before being returned to caller.
     */
    public func describeSubnetsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSubnetsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeSubnetsResult, HTTPClientError>) -> ()) throws {
        if let describeSubnetsAsyncOverrideNonOptional = describeSubnetsAsyncOverride {
            if let describeSubnetsAsyncOverrideTyped = describeSubnetsAsyncOverrideNonOptional
                    as? DescribeSubnetsAsyncType<InvocationReportingType> {
                return try describeSubnetsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeSubnetsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeSubnets operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeSubnetsRequest object being passed to this operation.
     - Returns: The DescribeSubnetsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeSubnetsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeSubnetsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeSubnetsResult {
        if let describeSubnetsSyncOverrideNonOptional = describeSubnetsSyncOverride {
            if let describeSubnetsSyncOverrideTyped = describeSubnetsSyncOverrideNonOptional
                    as? DescribeSubnetsSyncType<InvocationReportingType> {
                return try describeSubnetsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeSubnetsResult.__default
    }

    /**
     Invokes the DescribeTags operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeTagsRequest object being passed to this operation.
         - completion: The DescribeTagsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeTagsResult
           object will be validated before being returned to caller.
     */
    public func describeTagsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTagsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeTagsResult, HTTPClientError>) -> ()) throws {
        if let describeTagsAsyncOverrideNonOptional = describeTagsAsyncOverride {
            if let describeTagsAsyncOverrideTyped = describeTagsAsyncOverrideNonOptional
                    as? DescribeTagsAsyncType<InvocationReportingType> {
                return try describeTagsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeTagsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeTags operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeTagsRequest object being passed to this operation.
     - Returns: The DescribeTagsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeTagsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTagsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeTagsResult {
        if let describeTagsSyncOverrideNonOptional = describeTagsSyncOverride {
            if let describeTagsSyncOverrideTyped = describeTagsSyncOverrideNonOptional
                    as? DescribeTagsSyncType<InvocationReportingType> {
                return try describeTagsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeTagsResult.__default
    }

    /**
     Invokes the DescribeTrafficMirrorFilters operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeTrafficMirrorFiltersRequest object being passed to this operation.
         - completion: The DescribeTrafficMirrorFiltersResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeTrafficMirrorFiltersResult
           object will be validated before being returned to caller.
     */
    public func describeTrafficMirrorFiltersAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTrafficMirrorFiltersRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeTrafficMirrorFiltersResult, HTTPClientError>) -> ()) throws {
        if let describeTrafficMirrorFiltersAsyncOverrideNonOptional = describeTrafficMirrorFiltersAsyncOverride {
            if let describeTrafficMirrorFiltersAsyncOverrideTyped = describeTrafficMirrorFiltersAsyncOverrideNonOptional
                    as? DescribeTrafficMirrorFiltersAsyncType<InvocationReportingType> {
                return try describeTrafficMirrorFiltersAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeTrafficMirrorFiltersResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeTrafficMirrorFilters operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeTrafficMirrorFiltersRequest object being passed to this operation.
     - Returns: The DescribeTrafficMirrorFiltersResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeTrafficMirrorFiltersSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTrafficMirrorFiltersRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeTrafficMirrorFiltersResult {
        if let describeTrafficMirrorFiltersSyncOverrideNonOptional = describeTrafficMirrorFiltersSyncOverride {
            if let describeTrafficMirrorFiltersSyncOverrideTyped = describeTrafficMirrorFiltersSyncOverrideNonOptional
                    as? DescribeTrafficMirrorFiltersSyncType<InvocationReportingType> {
                return try describeTrafficMirrorFiltersSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeTrafficMirrorFiltersResult.__default
    }

    /**
     Invokes the DescribeTrafficMirrorSessions operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeTrafficMirrorSessionsRequest object being passed to this operation.
         - completion: The DescribeTrafficMirrorSessionsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeTrafficMirrorSessionsResult
           object will be validated before being returned to caller.
     */
    public func describeTrafficMirrorSessionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTrafficMirrorSessionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeTrafficMirrorSessionsResult, HTTPClientError>) -> ()) throws {
        if let describeTrafficMirrorSessionsAsyncOverrideNonOptional = describeTrafficMirrorSessionsAsyncOverride {
            if let describeTrafficMirrorSessionsAsyncOverrideTyped = describeTrafficMirrorSessionsAsyncOverrideNonOptional
                    as? DescribeTrafficMirrorSessionsAsyncType<InvocationReportingType> {
                return try describeTrafficMirrorSessionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeTrafficMirrorSessionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeTrafficMirrorSessions operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeTrafficMirrorSessionsRequest object being passed to this operation.
     - Returns: The DescribeTrafficMirrorSessionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeTrafficMirrorSessionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTrafficMirrorSessionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeTrafficMirrorSessionsResult {
        if let describeTrafficMirrorSessionsSyncOverrideNonOptional = describeTrafficMirrorSessionsSyncOverride {
            if let describeTrafficMirrorSessionsSyncOverrideTyped = describeTrafficMirrorSessionsSyncOverrideNonOptional
                    as? DescribeTrafficMirrorSessionsSyncType<InvocationReportingType> {
                return try describeTrafficMirrorSessionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeTrafficMirrorSessionsResult.__default
    }

    /**
     Invokes the DescribeTrafficMirrorTargets operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeTrafficMirrorTargetsRequest object being passed to this operation.
         - completion: The DescribeTrafficMirrorTargetsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeTrafficMirrorTargetsResult
           object will be validated before being returned to caller.
     */
    public func describeTrafficMirrorTargetsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTrafficMirrorTargetsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeTrafficMirrorTargetsResult, HTTPClientError>) -> ()) throws {
        if let describeTrafficMirrorTargetsAsyncOverrideNonOptional = describeTrafficMirrorTargetsAsyncOverride {
            if let describeTrafficMirrorTargetsAsyncOverrideTyped = describeTrafficMirrorTargetsAsyncOverrideNonOptional
                    as? DescribeTrafficMirrorTargetsAsyncType<InvocationReportingType> {
                return try describeTrafficMirrorTargetsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeTrafficMirrorTargetsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeTrafficMirrorTargets operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeTrafficMirrorTargetsRequest object being passed to this operation.
     - Returns: The DescribeTrafficMirrorTargetsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeTrafficMirrorTargetsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTrafficMirrorTargetsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeTrafficMirrorTargetsResult {
        if let describeTrafficMirrorTargetsSyncOverrideNonOptional = describeTrafficMirrorTargetsSyncOverride {
            if let describeTrafficMirrorTargetsSyncOverrideTyped = describeTrafficMirrorTargetsSyncOverrideNonOptional
                    as? DescribeTrafficMirrorTargetsSyncType<InvocationReportingType> {
                return try describeTrafficMirrorTargetsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeTrafficMirrorTargetsResult.__default
    }

    /**
     Invokes the DescribeTransitGatewayAttachments operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeTransitGatewayAttachmentsRequest object being passed to this operation.
         - completion: The DescribeTransitGatewayAttachmentsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeTransitGatewayAttachmentsResult
           object will be validated before being returned to caller.
     */
    public func describeTransitGatewayAttachmentsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTransitGatewayAttachmentsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeTransitGatewayAttachmentsResult, HTTPClientError>) -> ()) throws {
        if let describeTransitGatewayAttachmentsAsyncOverrideNonOptional = describeTransitGatewayAttachmentsAsyncOverride {
            if let describeTransitGatewayAttachmentsAsyncOverrideTyped = describeTransitGatewayAttachmentsAsyncOverrideNonOptional
                    as? DescribeTransitGatewayAttachmentsAsyncType<InvocationReportingType> {
                return try describeTransitGatewayAttachmentsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeTransitGatewayAttachmentsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeTransitGatewayAttachments operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeTransitGatewayAttachmentsRequest object being passed to this operation.
     - Returns: The DescribeTransitGatewayAttachmentsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeTransitGatewayAttachmentsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTransitGatewayAttachmentsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeTransitGatewayAttachmentsResult {
        if let describeTransitGatewayAttachmentsSyncOverrideNonOptional = describeTransitGatewayAttachmentsSyncOverride {
            if let describeTransitGatewayAttachmentsSyncOverrideTyped = describeTransitGatewayAttachmentsSyncOverrideNonOptional
                    as? DescribeTransitGatewayAttachmentsSyncType<InvocationReportingType> {
                return try describeTransitGatewayAttachmentsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeTransitGatewayAttachmentsResult.__default
    }

    /**
     Invokes the DescribeTransitGatewayMulticastDomains operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeTransitGatewayMulticastDomainsRequest object being passed to this operation.
         - completion: The DescribeTransitGatewayMulticastDomainsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeTransitGatewayMulticastDomainsResult
           object will be validated before being returned to caller.
     */
    public func describeTransitGatewayMulticastDomainsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTransitGatewayMulticastDomainsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeTransitGatewayMulticastDomainsResult, HTTPClientError>) -> ()) throws {
        if let describeTransitGatewayMulticastDomainsAsyncOverrideNonOptional = describeTransitGatewayMulticastDomainsAsyncOverride {
            if let describeTransitGatewayMulticastDomainsAsyncOverrideTyped = describeTransitGatewayMulticastDomainsAsyncOverrideNonOptional
                    as? DescribeTransitGatewayMulticastDomainsAsyncType<InvocationReportingType> {
                return try describeTransitGatewayMulticastDomainsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeTransitGatewayMulticastDomainsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeTransitGatewayMulticastDomains operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeTransitGatewayMulticastDomainsRequest object being passed to this operation.
     - Returns: The DescribeTransitGatewayMulticastDomainsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeTransitGatewayMulticastDomainsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTransitGatewayMulticastDomainsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeTransitGatewayMulticastDomainsResult {
        if let describeTransitGatewayMulticastDomainsSyncOverrideNonOptional = describeTransitGatewayMulticastDomainsSyncOverride {
            if let describeTransitGatewayMulticastDomainsSyncOverrideTyped = describeTransitGatewayMulticastDomainsSyncOverrideNonOptional
                    as? DescribeTransitGatewayMulticastDomainsSyncType<InvocationReportingType> {
                return try describeTransitGatewayMulticastDomainsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeTransitGatewayMulticastDomainsResult.__default
    }

    /**
     Invokes the DescribeTransitGatewayPeeringAttachments operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeTransitGatewayPeeringAttachmentsRequest object being passed to this operation.
         - completion: The DescribeTransitGatewayPeeringAttachmentsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeTransitGatewayPeeringAttachmentsResult
           object will be validated before being returned to caller.
     */
    public func describeTransitGatewayPeeringAttachmentsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTransitGatewayPeeringAttachmentsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeTransitGatewayPeeringAttachmentsResult, HTTPClientError>) -> ()) throws {
        if let describeTransitGatewayPeeringAttachmentsAsyncOverrideNonOptional = describeTransitGatewayPeeringAttachmentsAsyncOverride {
            if let describeTransitGatewayPeeringAttachmentsAsyncOverrideTyped = describeTransitGatewayPeeringAttachmentsAsyncOverrideNonOptional
                    as? DescribeTransitGatewayPeeringAttachmentsAsyncType<InvocationReportingType> {
                return try describeTransitGatewayPeeringAttachmentsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeTransitGatewayPeeringAttachmentsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeTransitGatewayPeeringAttachments operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeTransitGatewayPeeringAttachmentsRequest object being passed to this operation.
     - Returns: The DescribeTransitGatewayPeeringAttachmentsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeTransitGatewayPeeringAttachmentsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTransitGatewayPeeringAttachmentsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeTransitGatewayPeeringAttachmentsResult {
        if let describeTransitGatewayPeeringAttachmentsSyncOverrideNonOptional = describeTransitGatewayPeeringAttachmentsSyncOverride {
            if let describeTransitGatewayPeeringAttachmentsSyncOverrideTyped = describeTransitGatewayPeeringAttachmentsSyncOverrideNonOptional
                    as? DescribeTransitGatewayPeeringAttachmentsSyncType<InvocationReportingType> {
                return try describeTransitGatewayPeeringAttachmentsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeTransitGatewayPeeringAttachmentsResult.__default
    }

    /**
     Invokes the DescribeTransitGatewayRouteTables operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeTransitGatewayRouteTablesRequest object being passed to this operation.
         - completion: The DescribeTransitGatewayRouteTablesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeTransitGatewayRouteTablesResult
           object will be validated before being returned to caller.
     */
    public func describeTransitGatewayRouteTablesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTransitGatewayRouteTablesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeTransitGatewayRouteTablesResult, HTTPClientError>) -> ()) throws {
        if let describeTransitGatewayRouteTablesAsyncOverrideNonOptional = describeTransitGatewayRouteTablesAsyncOverride {
            if let describeTransitGatewayRouteTablesAsyncOverrideTyped = describeTransitGatewayRouteTablesAsyncOverrideNonOptional
                    as? DescribeTransitGatewayRouteTablesAsyncType<InvocationReportingType> {
                return try describeTransitGatewayRouteTablesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeTransitGatewayRouteTablesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeTransitGatewayRouteTables operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeTransitGatewayRouteTablesRequest object being passed to this operation.
     - Returns: The DescribeTransitGatewayRouteTablesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeTransitGatewayRouteTablesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTransitGatewayRouteTablesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeTransitGatewayRouteTablesResult {
        if let describeTransitGatewayRouteTablesSyncOverrideNonOptional = describeTransitGatewayRouteTablesSyncOverride {
            if let describeTransitGatewayRouteTablesSyncOverrideTyped = describeTransitGatewayRouteTablesSyncOverrideNonOptional
                    as? DescribeTransitGatewayRouteTablesSyncType<InvocationReportingType> {
                return try describeTransitGatewayRouteTablesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeTransitGatewayRouteTablesResult.__default
    }

    /**
     Invokes the DescribeTransitGatewayVpcAttachments operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeTransitGatewayVpcAttachmentsRequest object being passed to this operation.
         - completion: The DescribeTransitGatewayVpcAttachmentsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeTransitGatewayVpcAttachmentsResult
           object will be validated before being returned to caller.
     */
    public func describeTransitGatewayVpcAttachmentsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTransitGatewayVpcAttachmentsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeTransitGatewayVpcAttachmentsResult, HTTPClientError>) -> ()) throws {
        if let describeTransitGatewayVpcAttachmentsAsyncOverrideNonOptional = describeTransitGatewayVpcAttachmentsAsyncOverride {
            if let describeTransitGatewayVpcAttachmentsAsyncOverrideTyped = describeTransitGatewayVpcAttachmentsAsyncOverrideNonOptional
                    as? DescribeTransitGatewayVpcAttachmentsAsyncType<InvocationReportingType> {
                return try describeTransitGatewayVpcAttachmentsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeTransitGatewayVpcAttachmentsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeTransitGatewayVpcAttachments operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeTransitGatewayVpcAttachmentsRequest object being passed to this operation.
     - Returns: The DescribeTransitGatewayVpcAttachmentsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeTransitGatewayVpcAttachmentsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTransitGatewayVpcAttachmentsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeTransitGatewayVpcAttachmentsResult {
        if let describeTransitGatewayVpcAttachmentsSyncOverrideNonOptional = describeTransitGatewayVpcAttachmentsSyncOverride {
            if let describeTransitGatewayVpcAttachmentsSyncOverrideTyped = describeTransitGatewayVpcAttachmentsSyncOverrideNonOptional
                    as? DescribeTransitGatewayVpcAttachmentsSyncType<InvocationReportingType> {
                return try describeTransitGatewayVpcAttachmentsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeTransitGatewayVpcAttachmentsResult.__default
    }

    /**
     Invokes the DescribeTransitGateways operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeTransitGatewaysRequest object being passed to this operation.
         - completion: The DescribeTransitGatewaysResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeTransitGatewaysResult
           object will be validated before being returned to caller.
     */
    public func describeTransitGatewaysAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTransitGatewaysRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeTransitGatewaysResult, HTTPClientError>) -> ()) throws {
        if let describeTransitGatewaysAsyncOverrideNonOptional = describeTransitGatewaysAsyncOverride {
            if let describeTransitGatewaysAsyncOverrideTyped = describeTransitGatewaysAsyncOverrideNonOptional
                    as? DescribeTransitGatewaysAsyncType<InvocationReportingType> {
                return try describeTransitGatewaysAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeTransitGatewaysResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeTransitGateways operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeTransitGatewaysRequest object being passed to this operation.
     - Returns: The DescribeTransitGatewaysResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeTransitGatewaysSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeTransitGatewaysRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeTransitGatewaysResult {
        if let describeTransitGatewaysSyncOverrideNonOptional = describeTransitGatewaysSyncOverride {
            if let describeTransitGatewaysSyncOverrideTyped = describeTransitGatewaysSyncOverrideNonOptional
                    as? DescribeTransitGatewaysSyncType<InvocationReportingType> {
                return try describeTransitGatewaysSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeTransitGatewaysResult.__default
    }

    /**
     Invokes the DescribeVolumeAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVolumeAttributeRequest object being passed to this operation.
         - completion: The DescribeVolumeAttributeResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVolumeAttributeResult
           object will be validated before being returned to caller.
     */
    public func describeVolumeAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVolumeAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVolumeAttributeResult, HTTPClientError>) -> ()) throws {
        if let describeVolumeAttributeAsyncOverrideNonOptional = describeVolumeAttributeAsyncOverride {
            if let describeVolumeAttributeAsyncOverrideTyped = describeVolumeAttributeAsyncOverrideNonOptional
                    as? DescribeVolumeAttributeAsyncType<InvocationReportingType> {
                return try describeVolumeAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVolumeAttributeResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVolumeAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVolumeAttributeRequest object being passed to this operation.
     - Returns: The DescribeVolumeAttributeResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVolumeAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVolumeAttributeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVolumeAttributeResult {
        if let describeVolumeAttributeSyncOverrideNonOptional = describeVolumeAttributeSyncOverride {
            if let describeVolumeAttributeSyncOverrideTyped = describeVolumeAttributeSyncOverrideNonOptional
                    as? DescribeVolumeAttributeSyncType<InvocationReportingType> {
                return try describeVolumeAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVolumeAttributeResult.__default
    }

    /**
     Invokes the DescribeVolumeStatus operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVolumeStatusRequest object being passed to this operation.
         - completion: The DescribeVolumeStatusResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVolumeStatusResult
           object will be validated before being returned to caller.
     */
    public func describeVolumeStatusAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVolumeStatusRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVolumeStatusResult, HTTPClientError>) -> ()) throws {
        if let describeVolumeStatusAsyncOverrideNonOptional = describeVolumeStatusAsyncOverride {
            if let describeVolumeStatusAsyncOverrideTyped = describeVolumeStatusAsyncOverrideNonOptional
                    as? DescribeVolumeStatusAsyncType<InvocationReportingType> {
                return try describeVolumeStatusAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVolumeStatusResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVolumeStatus operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVolumeStatusRequest object being passed to this operation.
     - Returns: The DescribeVolumeStatusResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVolumeStatusSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVolumeStatusRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVolumeStatusResult {
        if let describeVolumeStatusSyncOverrideNonOptional = describeVolumeStatusSyncOverride {
            if let describeVolumeStatusSyncOverrideTyped = describeVolumeStatusSyncOverrideNonOptional
                    as? DescribeVolumeStatusSyncType<InvocationReportingType> {
                return try describeVolumeStatusSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVolumeStatusResult.__default
    }

    /**
     Invokes the DescribeVolumes operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVolumesRequest object being passed to this operation.
         - completion: The DescribeVolumesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVolumesResult
           object will be validated before being returned to caller.
     */
    public func describeVolumesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVolumesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVolumesResult, HTTPClientError>) -> ()) throws {
        if let describeVolumesAsyncOverrideNonOptional = describeVolumesAsyncOverride {
            if let describeVolumesAsyncOverrideTyped = describeVolumesAsyncOverrideNonOptional
                    as? DescribeVolumesAsyncType<InvocationReportingType> {
                return try describeVolumesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVolumesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVolumes operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVolumesRequest object being passed to this operation.
     - Returns: The DescribeVolumesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVolumesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVolumesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVolumesResult {
        if let describeVolumesSyncOverrideNonOptional = describeVolumesSyncOverride {
            if let describeVolumesSyncOverrideTyped = describeVolumesSyncOverrideNonOptional
                    as? DescribeVolumesSyncType<InvocationReportingType> {
                return try describeVolumesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVolumesResult.__default
    }

    /**
     Invokes the DescribeVolumesModifications operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVolumesModificationsRequest object being passed to this operation.
         - completion: The DescribeVolumesModificationsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVolumesModificationsResult
           object will be validated before being returned to caller.
     */
    public func describeVolumesModificationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVolumesModificationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVolumesModificationsResult, HTTPClientError>) -> ()) throws {
        if let describeVolumesModificationsAsyncOverrideNonOptional = describeVolumesModificationsAsyncOverride {
            if let describeVolumesModificationsAsyncOverrideTyped = describeVolumesModificationsAsyncOverrideNonOptional
                    as? DescribeVolumesModificationsAsyncType<InvocationReportingType> {
                return try describeVolumesModificationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVolumesModificationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVolumesModifications operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVolumesModificationsRequest object being passed to this operation.
     - Returns: The DescribeVolumesModificationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVolumesModificationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVolumesModificationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVolumesModificationsResult {
        if let describeVolumesModificationsSyncOverrideNonOptional = describeVolumesModificationsSyncOverride {
            if let describeVolumesModificationsSyncOverrideTyped = describeVolumesModificationsSyncOverrideNonOptional
                    as? DescribeVolumesModificationsSyncType<InvocationReportingType> {
                return try describeVolumesModificationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVolumesModificationsResult.__default
    }

    /**
     Invokes the DescribeVpcAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVpcAttributeRequest object being passed to this operation.
         - completion: The DescribeVpcAttributeResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVpcAttributeResult
           object will be validated before being returned to caller.
     */
    public func describeVpcAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVpcAttributeResult, HTTPClientError>) -> ()) throws {
        if let describeVpcAttributeAsyncOverrideNonOptional = describeVpcAttributeAsyncOverride {
            if let describeVpcAttributeAsyncOverrideTyped = describeVpcAttributeAsyncOverrideNonOptional
                    as? DescribeVpcAttributeAsyncType<InvocationReportingType> {
                return try describeVpcAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVpcAttributeResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVpcAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVpcAttributeRequest object being passed to this operation.
     - Returns: The DescribeVpcAttributeResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVpcAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcAttributeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVpcAttributeResult {
        if let describeVpcAttributeSyncOverrideNonOptional = describeVpcAttributeSyncOverride {
            if let describeVpcAttributeSyncOverrideTyped = describeVpcAttributeSyncOverrideNonOptional
                    as? DescribeVpcAttributeSyncType<InvocationReportingType> {
                return try describeVpcAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVpcAttributeResult.__default
    }

    /**
     Invokes the DescribeVpcClassicLink operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVpcClassicLinkRequest object being passed to this operation.
         - completion: The DescribeVpcClassicLinkResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVpcClassicLinkResult
           object will be validated before being returned to caller.
     */
    public func describeVpcClassicLinkAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcClassicLinkRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVpcClassicLinkResult, HTTPClientError>) -> ()) throws {
        if let describeVpcClassicLinkAsyncOverrideNonOptional = describeVpcClassicLinkAsyncOverride {
            if let describeVpcClassicLinkAsyncOverrideTyped = describeVpcClassicLinkAsyncOverrideNonOptional
                    as? DescribeVpcClassicLinkAsyncType<InvocationReportingType> {
                return try describeVpcClassicLinkAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVpcClassicLinkResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVpcClassicLink operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVpcClassicLinkRequest object being passed to this operation.
     - Returns: The DescribeVpcClassicLinkResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVpcClassicLinkSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcClassicLinkRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVpcClassicLinkResult {
        if let describeVpcClassicLinkSyncOverrideNonOptional = describeVpcClassicLinkSyncOverride {
            if let describeVpcClassicLinkSyncOverrideTyped = describeVpcClassicLinkSyncOverrideNonOptional
                    as? DescribeVpcClassicLinkSyncType<InvocationReportingType> {
                return try describeVpcClassicLinkSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVpcClassicLinkResult.__default
    }

    /**
     Invokes the DescribeVpcClassicLinkDnsSupport operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVpcClassicLinkDnsSupportRequest object being passed to this operation.
         - completion: The DescribeVpcClassicLinkDnsSupportResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVpcClassicLinkDnsSupportResult
           object will be validated before being returned to caller.
     */
    public func describeVpcClassicLinkDnsSupportAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcClassicLinkDnsSupportRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVpcClassicLinkDnsSupportResult, HTTPClientError>) -> ()) throws {
        if let describeVpcClassicLinkDnsSupportAsyncOverrideNonOptional = describeVpcClassicLinkDnsSupportAsyncOverride {
            if let describeVpcClassicLinkDnsSupportAsyncOverrideTyped = describeVpcClassicLinkDnsSupportAsyncOverrideNonOptional
                    as? DescribeVpcClassicLinkDnsSupportAsyncType<InvocationReportingType> {
                return try describeVpcClassicLinkDnsSupportAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVpcClassicLinkDnsSupportResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVpcClassicLinkDnsSupport operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVpcClassicLinkDnsSupportRequest object being passed to this operation.
     - Returns: The DescribeVpcClassicLinkDnsSupportResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVpcClassicLinkDnsSupportSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcClassicLinkDnsSupportRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVpcClassicLinkDnsSupportResult {
        if let describeVpcClassicLinkDnsSupportSyncOverrideNonOptional = describeVpcClassicLinkDnsSupportSyncOverride {
            if let describeVpcClassicLinkDnsSupportSyncOverrideTyped = describeVpcClassicLinkDnsSupportSyncOverrideNonOptional
                    as? DescribeVpcClassicLinkDnsSupportSyncType<InvocationReportingType> {
                return try describeVpcClassicLinkDnsSupportSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVpcClassicLinkDnsSupportResult.__default
    }

    /**
     Invokes the DescribeVpcEndpointConnectionNotifications operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVpcEndpointConnectionNotificationsRequest object being passed to this operation.
         - completion: The DescribeVpcEndpointConnectionNotificationsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVpcEndpointConnectionNotificationsResult
           object will be validated before being returned to caller.
     */
    public func describeVpcEndpointConnectionNotificationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcEndpointConnectionNotificationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVpcEndpointConnectionNotificationsResult, HTTPClientError>) -> ()) throws {
        if let describeVpcEndpointConnectionNotificationsAsyncOverrideNonOptional = describeVpcEndpointConnectionNotificationsAsyncOverride {
            if let describeVpcEndpointConnectionNotificationsAsyncOverrideTyped = describeVpcEndpointConnectionNotificationsAsyncOverrideNonOptional
                    as? DescribeVpcEndpointConnectionNotificationsAsyncType<InvocationReportingType> {
                return try describeVpcEndpointConnectionNotificationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVpcEndpointConnectionNotificationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVpcEndpointConnectionNotifications operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVpcEndpointConnectionNotificationsRequest object being passed to this operation.
     - Returns: The DescribeVpcEndpointConnectionNotificationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVpcEndpointConnectionNotificationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcEndpointConnectionNotificationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVpcEndpointConnectionNotificationsResult {
        if let describeVpcEndpointConnectionNotificationsSyncOverrideNonOptional = describeVpcEndpointConnectionNotificationsSyncOverride {
            if let describeVpcEndpointConnectionNotificationsSyncOverrideTyped = describeVpcEndpointConnectionNotificationsSyncOverrideNonOptional
                    as? DescribeVpcEndpointConnectionNotificationsSyncType<InvocationReportingType> {
                return try describeVpcEndpointConnectionNotificationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVpcEndpointConnectionNotificationsResult.__default
    }

    /**
     Invokes the DescribeVpcEndpointConnections operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVpcEndpointConnectionsRequest object being passed to this operation.
         - completion: The DescribeVpcEndpointConnectionsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVpcEndpointConnectionsResult
           object will be validated before being returned to caller.
     */
    public func describeVpcEndpointConnectionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcEndpointConnectionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVpcEndpointConnectionsResult, HTTPClientError>) -> ()) throws {
        if let describeVpcEndpointConnectionsAsyncOverrideNonOptional = describeVpcEndpointConnectionsAsyncOverride {
            if let describeVpcEndpointConnectionsAsyncOverrideTyped = describeVpcEndpointConnectionsAsyncOverrideNonOptional
                    as? DescribeVpcEndpointConnectionsAsyncType<InvocationReportingType> {
                return try describeVpcEndpointConnectionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVpcEndpointConnectionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVpcEndpointConnections operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVpcEndpointConnectionsRequest object being passed to this operation.
     - Returns: The DescribeVpcEndpointConnectionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVpcEndpointConnectionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcEndpointConnectionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVpcEndpointConnectionsResult {
        if let describeVpcEndpointConnectionsSyncOverrideNonOptional = describeVpcEndpointConnectionsSyncOverride {
            if let describeVpcEndpointConnectionsSyncOverrideTyped = describeVpcEndpointConnectionsSyncOverrideNonOptional
                    as? DescribeVpcEndpointConnectionsSyncType<InvocationReportingType> {
                return try describeVpcEndpointConnectionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVpcEndpointConnectionsResult.__default
    }

    /**
     Invokes the DescribeVpcEndpointServiceConfigurations operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVpcEndpointServiceConfigurationsRequest object being passed to this operation.
         - completion: The DescribeVpcEndpointServiceConfigurationsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVpcEndpointServiceConfigurationsResult
           object will be validated before being returned to caller.
     */
    public func describeVpcEndpointServiceConfigurationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcEndpointServiceConfigurationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVpcEndpointServiceConfigurationsResult, HTTPClientError>) -> ()) throws {
        if let describeVpcEndpointServiceConfigurationsAsyncOverrideNonOptional = describeVpcEndpointServiceConfigurationsAsyncOverride {
            if let describeVpcEndpointServiceConfigurationsAsyncOverrideTyped = describeVpcEndpointServiceConfigurationsAsyncOverrideNonOptional
                    as? DescribeVpcEndpointServiceConfigurationsAsyncType<InvocationReportingType> {
                return try describeVpcEndpointServiceConfigurationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVpcEndpointServiceConfigurationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVpcEndpointServiceConfigurations operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVpcEndpointServiceConfigurationsRequest object being passed to this operation.
     - Returns: The DescribeVpcEndpointServiceConfigurationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVpcEndpointServiceConfigurationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcEndpointServiceConfigurationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVpcEndpointServiceConfigurationsResult {
        if let describeVpcEndpointServiceConfigurationsSyncOverrideNonOptional = describeVpcEndpointServiceConfigurationsSyncOverride {
            if let describeVpcEndpointServiceConfigurationsSyncOverrideTyped = describeVpcEndpointServiceConfigurationsSyncOverrideNonOptional
                    as? DescribeVpcEndpointServiceConfigurationsSyncType<InvocationReportingType> {
                return try describeVpcEndpointServiceConfigurationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVpcEndpointServiceConfigurationsResult.__default
    }

    /**
     Invokes the DescribeVpcEndpointServicePermissions operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVpcEndpointServicePermissionsRequest object being passed to this operation.
         - completion: The DescribeVpcEndpointServicePermissionsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVpcEndpointServicePermissionsResult
           object will be validated before being returned to caller.
     */
    public func describeVpcEndpointServicePermissionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcEndpointServicePermissionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVpcEndpointServicePermissionsResult, HTTPClientError>) -> ()) throws {
        if let describeVpcEndpointServicePermissionsAsyncOverrideNonOptional = describeVpcEndpointServicePermissionsAsyncOverride {
            if let describeVpcEndpointServicePermissionsAsyncOverrideTyped = describeVpcEndpointServicePermissionsAsyncOverrideNonOptional
                    as? DescribeVpcEndpointServicePermissionsAsyncType<InvocationReportingType> {
                return try describeVpcEndpointServicePermissionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVpcEndpointServicePermissionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVpcEndpointServicePermissions operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVpcEndpointServicePermissionsRequest object being passed to this operation.
     - Returns: The DescribeVpcEndpointServicePermissionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVpcEndpointServicePermissionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcEndpointServicePermissionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVpcEndpointServicePermissionsResult {
        if let describeVpcEndpointServicePermissionsSyncOverrideNonOptional = describeVpcEndpointServicePermissionsSyncOverride {
            if let describeVpcEndpointServicePermissionsSyncOverrideTyped = describeVpcEndpointServicePermissionsSyncOverrideNonOptional
                    as? DescribeVpcEndpointServicePermissionsSyncType<InvocationReportingType> {
                return try describeVpcEndpointServicePermissionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVpcEndpointServicePermissionsResult.__default
    }

    /**
     Invokes the DescribeVpcEndpointServices operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVpcEndpointServicesRequest object being passed to this operation.
         - completion: The DescribeVpcEndpointServicesResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVpcEndpointServicesResult
           object will be validated before being returned to caller.
     */
    public func describeVpcEndpointServicesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcEndpointServicesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVpcEndpointServicesResult, HTTPClientError>) -> ()) throws {
        if let describeVpcEndpointServicesAsyncOverrideNonOptional = describeVpcEndpointServicesAsyncOverride {
            if let describeVpcEndpointServicesAsyncOverrideTyped = describeVpcEndpointServicesAsyncOverrideNonOptional
                    as? DescribeVpcEndpointServicesAsyncType<InvocationReportingType> {
                return try describeVpcEndpointServicesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVpcEndpointServicesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVpcEndpointServices operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVpcEndpointServicesRequest object being passed to this operation.
     - Returns: The DescribeVpcEndpointServicesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVpcEndpointServicesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcEndpointServicesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVpcEndpointServicesResult {
        if let describeVpcEndpointServicesSyncOverrideNonOptional = describeVpcEndpointServicesSyncOverride {
            if let describeVpcEndpointServicesSyncOverrideTyped = describeVpcEndpointServicesSyncOverrideNonOptional
                    as? DescribeVpcEndpointServicesSyncType<InvocationReportingType> {
                return try describeVpcEndpointServicesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVpcEndpointServicesResult.__default
    }

    /**
     Invokes the DescribeVpcEndpoints operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVpcEndpointsRequest object being passed to this operation.
         - completion: The DescribeVpcEndpointsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVpcEndpointsResult
           object will be validated before being returned to caller.
     */
    public func describeVpcEndpointsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcEndpointsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVpcEndpointsResult, HTTPClientError>) -> ()) throws {
        if let describeVpcEndpointsAsyncOverrideNonOptional = describeVpcEndpointsAsyncOverride {
            if let describeVpcEndpointsAsyncOverrideTyped = describeVpcEndpointsAsyncOverrideNonOptional
                    as? DescribeVpcEndpointsAsyncType<InvocationReportingType> {
                return try describeVpcEndpointsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVpcEndpointsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVpcEndpoints operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVpcEndpointsRequest object being passed to this operation.
     - Returns: The DescribeVpcEndpointsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVpcEndpointsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcEndpointsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVpcEndpointsResult {
        if let describeVpcEndpointsSyncOverrideNonOptional = describeVpcEndpointsSyncOverride {
            if let describeVpcEndpointsSyncOverrideTyped = describeVpcEndpointsSyncOverrideNonOptional
                    as? DescribeVpcEndpointsSyncType<InvocationReportingType> {
                return try describeVpcEndpointsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVpcEndpointsResult.__default
    }

    /**
     Invokes the DescribeVpcPeeringConnections operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVpcPeeringConnectionsRequest object being passed to this operation.
         - completion: The DescribeVpcPeeringConnectionsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVpcPeeringConnectionsResult
           object will be validated before being returned to caller.
     */
    public func describeVpcPeeringConnectionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcPeeringConnectionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVpcPeeringConnectionsResult, HTTPClientError>) -> ()) throws {
        if let describeVpcPeeringConnectionsAsyncOverrideNonOptional = describeVpcPeeringConnectionsAsyncOverride {
            if let describeVpcPeeringConnectionsAsyncOverrideTyped = describeVpcPeeringConnectionsAsyncOverrideNonOptional
                    as? DescribeVpcPeeringConnectionsAsyncType<InvocationReportingType> {
                return try describeVpcPeeringConnectionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVpcPeeringConnectionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVpcPeeringConnections operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVpcPeeringConnectionsRequest object being passed to this operation.
     - Returns: The DescribeVpcPeeringConnectionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVpcPeeringConnectionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcPeeringConnectionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVpcPeeringConnectionsResult {
        if let describeVpcPeeringConnectionsSyncOverrideNonOptional = describeVpcPeeringConnectionsSyncOverride {
            if let describeVpcPeeringConnectionsSyncOverrideTyped = describeVpcPeeringConnectionsSyncOverrideNonOptional
                    as? DescribeVpcPeeringConnectionsSyncType<InvocationReportingType> {
                return try describeVpcPeeringConnectionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVpcPeeringConnectionsResult.__default
    }

    /**
     Invokes the DescribeVpcs operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVpcsRequest object being passed to this operation.
         - completion: The DescribeVpcsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVpcsResult
           object will be validated before being returned to caller.
     */
    public func describeVpcsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVpcsResult, HTTPClientError>) -> ()) throws {
        if let describeVpcsAsyncOverrideNonOptional = describeVpcsAsyncOverride {
            if let describeVpcsAsyncOverrideTyped = describeVpcsAsyncOverrideNonOptional
                    as? DescribeVpcsAsyncType<InvocationReportingType> {
                return try describeVpcsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVpcsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVpcs operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVpcsRequest object being passed to this operation.
     - Returns: The DescribeVpcsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVpcsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpcsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVpcsResult {
        if let describeVpcsSyncOverrideNonOptional = describeVpcsSyncOverride {
            if let describeVpcsSyncOverrideTyped = describeVpcsSyncOverrideNonOptional
                    as? DescribeVpcsSyncType<InvocationReportingType> {
                return try describeVpcsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVpcsResult.__default
    }

    /**
     Invokes the DescribeVpnConnections operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVpnConnectionsRequest object being passed to this operation.
         - completion: The DescribeVpnConnectionsResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVpnConnectionsResult
           object will be validated before being returned to caller.
     */
    public func describeVpnConnectionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpnConnectionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVpnConnectionsResult, HTTPClientError>) -> ()) throws {
        if let describeVpnConnectionsAsyncOverrideNonOptional = describeVpnConnectionsAsyncOverride {
            if let describeVpnConnectionsAsyncOverrideTyped = describeVpnConnectionsAsyncOverrideNonOptional
                    as? DescribeVpnConnectionsAsyncType<InvocationReportingType> {
                return try describeVpnConnectionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVpnConnectionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVpnConnections operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVpnConnectionsRequest object being passed to this operation.
     - Returns: The DescribeVpnConnectionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVpnConnectionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpnConnectionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVpnConnectionsResult {
        if let describeVpnConnectionsSyncOverrideNonOptional = describeVpnConnectionsSyncOverride {
            if let describeVpnConnectionsSyncOverrideTyped = describeVpnConnectionsSyncOverrideNonOptional
                    as? DescribeVpnConnectionsSyncType<InvocationReportingType> {
                return try describeVpnConnectionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVpnConnectionsResult.__default
    }

    /**
     Invokes the DescribeVpnGateways operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DescribeVpnGatewaysRequest object being passed to this operation.
         - completion: The DescribeVpnGatewaysResult object or an error will be passed to this 
           callback when the operation is complete. The DescribeVpnGatewaysResult
           object will be validated before being returned to caller.
     */
    public func describeVpnGatewaysAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpnGatewaysRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DescribeVpnGatewaysResult, HTTPClientError>) -> ()) throws {
        if let describeVpnGatewaysAsyncOverrideNonOptional = describeVpnGatewaysAsyncOverride {
            if let describeVpnGatewaysAsyncOverrideTyped = describeVpnGatewaysAsyncOverrideNonOptional
                    as? DescribeVpnGatewaysAsyncType<InvocationReportingType> {
                return try describeVpnGatewaysAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DescribeVpnGatewaysResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DescribeVpnGateways operation waiting for the response before returning.

     - Parameters:
         - input: The validated DescribeVpnGatewaysRequest object being passed to this operation.
     - Returns: The DescribeVpnGatewaysResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func describeVpnGatewaysSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DescribeVpnGatewaysRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DescribeVpnGatewaysResult {
        if let describeVpnGatewaysSyncOverrideNonOptional = describeVpnGatewaysSyncOverride {
            if let describeVpnGatewaysSyncOverrideTyped = describeVpnGatewaysSyncOverrideNonOptional
                    as? DescribeVpnGatewaysSyncType<InvocationReportingType> {
                return try describeVpnGatewaysSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DescribeVpnGatewaysResult.__default
    }

    /**
     Invokes the DetachClassicLinkVpc operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DetachClassicLinkVpcRequest object being passed to this operation.
         - completion: The DetachClassicLinkVpcResult object or an error will be passed to this 
           callback when the operation is complete. The DetachClassicLinkVpcResult
           object will be validated before being returned to caller.
     */
    public func detachClassicLinkVpcAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DetachClassicLinkVpcRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DetachClassicLinkVpcResult, HTTPClientError>) -> ()) throws {
        if let detachClassicLinkVpcAsyncOverrideNonOptional = detachClassicLinkVpcAsyncOverride {
            if let detachClassicLinkVpcAsyncOverrideTyped = detachClassicLinkVpcAsyncOverrideNonOptional
                    as? DetachClassicLinkVpcAsyncType<InvocationReportingType> {
                return try detachClassicLinkVpcAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DetachClassicLinkVpcResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DetachClassicLinkVpc operation waiting for the response before returning.

     - Parameters:
         - input: The validated DetachClassicLinkVpcRequest object being passed to this operation.
     - Returns: The DetachClassicLinkVpcResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func detachClassicLinkVpcSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DetachClassicLinkVpcRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DetachClassicLinkVpcResult {
        if let detachClassicLinkVpcSyncOverrideNonOptional = detachClassicLinkVpcSyncOverride {
            if let detachClassicLinkVpcSyncOverrideTyped = detachClassicLinkVpcSyncOverrideNonOptional
                    as? DetachClassicLinkVpcSyncType<InvocationReportingType> {
                return try detachClassicLinkVpcSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DetachClassicLinkVpcResult.__default
    }

    /**
     Invokes the DetachInternetGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DetachInternetGatewayRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func detachInternetGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DetachInternetGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let detachInternetGatewayAsyncOverrideNonOptional = detachInternetGatewayAsyncOverride {
            if let detachInternetGatewayAsyncOverrideTyped = detachInternetGatewayAsyncOverrideNonOptional
                    as? DetachInternetGatewayAsyncType<InvocationReportingType> {
                return try detachInternetGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DetachInternetGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated DetachInternetGatewayRequest object being passed to this operation.
     */
    public func detachInternetGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DetachInternetGatewayRequest,
            reporting: InvocationReportingType) throws {
        if let detachInternetGatewaySyncOverrideNonOptional = detachInternetGatewaySyncOverride {
            if let detachInternetGatewaySyncOverrideTyped = detachInternetGatewaySyncOverrideNonOptional
                    as? DetachInternetGatewaySyncType<InvocationReportingType> {
                return try detachInternetGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DetachNetworkInterface operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DetachNetworkInterfaceRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func detachNetworkInterfaceAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DetachNetworkInterfaceRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let detachNetworkInterfaceAsyncOverrideNonOptional = detachNetworkInterfaceAsyncOverride {
            if let detachNetworkInterfaceAsyncOverrideTyped = detachNetworkInterfaceAsyncOverrideNonOptional
                    as? DetachNetworkInterfaceAsyncType<InvocationReportingType> {
                return try detachNetworkInterfaceAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DetachNetworkInterface operation waiting for the response before returning.

     - Parameters:
         - input: The validated DetachNetworkInterfaceRequest object being passed to this operation.
     */
    public func detachNetworkInterfaceSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DetachNetworkInterfaceRequest,
            reporting: InvocationReportingType) throws {
        if let detachNetworkInterfaceSyncOverrideNonOptional = detachNetworkInterfaceSyncOverride {
            if let detachNetworkInterfaceSyncOverrideTyped = detachNetworkInterfaceSyncOverrideNonOptional
                    as? DetachNetworkInterfaceSyncType<InvocationReportingType> {
                return try detachNetworkInterfaceSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DetachVolume operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DetachVolumeRequest object being passed to this operation.
         - completion: The VolumeAttachment object or an error will be passed to this 
           callback when the operation is complete. The VolumeAttachment
           object will be validated before being returned to caller.
     */
    public func detachVolumeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DetachVolumeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.VolumeAttachment, HTTPClientError>) -> ()) throws {
        if let detachVolumeAsyncOverrideNonOptional = detachVolumeAsyncOverride {
            if let detachVolumeAsyncOverrideTyped = detachVolumeAsyncOverrideNonOptional
                    as? DetachVolumeAsyncType<InvocationReportingType> {
                return try detachVolumeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = VolumeAttachment.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DetachVolume operation waiting for the response before returning.

     - Parameters:
         - input: The validated DetachVolumeRequest object being passed to this operation.
     - Returns: The VolumeAttachment object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func detachVolumeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DetachVolumeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.VolumeAttachment {
        if let detachVolumeSyncOverrideNonOptional = detachVolumeSyncOverride {
            if let detachVolumeSyncOverrideTyped = detachVolumeSyncOverrideNonOptional
                    as? DetachVolumeSyncType<InvocationReportingType> {
                return try detachVolumeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return VolumeAttachment.__default
    }

    /**
     Invokes the DetachVpnGateway operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DetachVpnGatewayRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func detachVpnGatewayAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DetachVpnGatewayRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let detachVpnGatewayAsyncOverrideNonOptional = detachVpnGatewayAsyncOverride {
            if let detachVpnGatewayAsyncOverrideTyped = detachVpnGatewayAsyncOverrideNonOptional
                    as? DetachVpnGatewayAsyncType<InvocationReportingType> {
                return try detachVpnGatewayAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DetachVpnGateway operation waiting for the response before returning.

     - Parameters:
         - input: The validated DetachVpnGatewayRequest object being passed to this operation.
     */
    public func detachVpnGatewaySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DetachVpnGatewayRequest,
            reporting: InvocationReportingType) throws {
        if let detachVpnGatewaySyncOverrideNonOptional = detachVpnGatewaySyncOverride {
            if let detachVpnGatewaySyncOverrideTyped = detachVpnGatewaySyncOverrideNonOptional
                    as? DetachVpnGatewaySyncType<InvocationReportingType> {
                return try detachVpnGatewaySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DisableEbsEncryptionByDefault operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DisableEbsEncryptionByDefaultRequest object being passed to this operation.
         - completion: The DisableEbsEncryptionByDefaultResult object or an error will be passed to this 
           callback when the operation is complete. The DisableEbsEncryptionByDefaultResult
           object will be validated before being returned to caller.
     */
    public func disableEbsEncryptionByDefaultAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisableEbsEncryptionByDefaultRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DisableEbsEncryptionByDefaultResult, HTTPClientError>) -> ()) throws {
        if let disableEbsEncryptionByDefaultAsyncOverrideNonOptional = disableEbsEncryptionByDefaultAsyncOverride {
            if let disableEbsEncryptionByDefaultAsyncOverrideTyped = disableEbsEncryptionByDefaultAsyncOverrideNonOptional
                    as? DisableEbsEncryptionByDefaultAsyncType<InvocationReportingType> {
                return try disableEbsEncryptionByDefaultAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DisableEbsEncryptionByDefaultResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DisableEbsEncryptionByDefault operation waiting for the response before returning.

     - Parameters:
         - input: The validated DisableEbsEncryptionByDefaultRequest object being passed to this operation.
     - Returns: The DisableEbsEncryptionByDefaultResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func disableEbsEncryptionByDefaultSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisableEbsEncryptionByDefaultRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DisableEbsEncryptionByDefaultResult {
        if let disableEbsEncryptionByDefaultSyncOverrideNonOptional = disableEbsEncryptionByDefaultSyncOverride {
            if let disableEbsEncryptionByDefaultSyncOverrideTyped = disableEbsEncryptionByDefaultSyncOverrideNonOptional
                    as? DisableEbsEncryptionByDefaultSyncType<InvocationReportingType> {
                return try disableEbsEncryptionByDefaultSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DisableEbsEncryptionByDefaultResult.__default
    }

    /**
     Invokes the DisableFastSnapshotRestores operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DisableFastSnapshotRestoresRequest object being passed to this operation.
         - completion: The DisableFastSnapshotRestoresResult object or an error will be passed to this 
           callback when the operation is complete. The DisableFastSnapshotRestoresResult
           object will be validated before being returned to caller.
     */
    public func disableFastSnapshotRestoresAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisableFastSnapshotRestoresRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DisableFastSnapshotRestoresResult, HTTPClientError>) -> ()) throws {
        if let disableFastSnapshotRestoresAsyncOverrideNonOptional = disableFastSnapshotRestoresAsyncOverride {
            if let disableFastSnapshotRestoresAsyncOverrideTyped = disableFastSnapshotRestoresAsyncOverrideNonOptional
                    as? DisableFastSnapshotRestoresAsyncType<InvocationReportingType> {
                return try disableFastSnapshotRestoresAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DisableFastSnapshotRestoresResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DisableFastSnapshotRestores operation waiting for the response before returning.

     - Parameters:
         - input: The validated DisableFastSnapshotRestoresRequest object being passed to this operation.
     - Returns: The DisableFastSnapshotRestoresResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func disableFastSnapshotRestoresSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisableFastSnapshotRestoresRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DisableFastSnapshotRestoresResult {
        if let disableFastSnapshotRestoresSyncOverrideNonOptional = disableFastSnapshotRestoresSyncOverride {
            if let disableFastSnapshotRestoresSyncOverrideTyped = disableFastSnapshotRestoresSyncOverrideNonOptional
                    as? DisableFastSnapshotRestoresSyncType<InvocationReportingType> {
                return try disableFastSnapshotRestoresSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DisableFastSnapshotRestoresResult.__default
    }

    /**
     Invokes the DisableTransitGatewayRouteTablePropagation operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DisableTransitGatewayRouteTablePropagationRequest object being passed to this operation.
         - completion: The DisableTransitGatewayRouteTablePropagationResult object or an error will be passed to this 
           callback when the operation is complete. The DisableTransitGatewayRouteTablePropagationResult
           object will be validated before being returned to caller.
     */
    public func disableTransitGatewayRouteTablePropagationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisableTransitGatewayRouteTablePropagationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DisableTransitGatewayRouteTablePropagationResult, HTTPClientError>) -> ()) throws {
        if let disableTransitGatewayRouteTablePropagationAsyncOverrideNonOptional = disableTransitGatewayRouteTablePropagationAsyncOverride {
            if let disableTransitGatewayRouteTablePropagationAsyncOverrideTyped = disableTransitGatewayRouteTablePropagationAsyncOverrideNonOptional
                    as? DisableTransitGatewayRouteTablePropagationAsyncType<InvocationReportingType> {
                return try disableTransitGatewayRouteTablePropagationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DisableTransitGatewayRouteTablePropagationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DisableTransitGatewayRouteTablePropagation operation waiting for the response before returning.

     - Parameters:
         - input: The validated DisableTransitGatewayRouteTablePropagationRequest object being passed to this operation.
     - Returns: The DisableTransitGatewayRouteTablePropagationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func disableTransitGatewayRouteTablePropagationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisableTransitGatewayRouteTablePropagationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DisableTransitGatewayRouteTablePropagationResult {
        if let disableTransitGatewayRouteTablePropagationSyncOverrideNonOptional = disableTransitGatewayRouteTablePropagationSyncOverride {
            if let disableTransitGatewayRouteTablePropagationSyncOverrideTyped = disableTransitGatewayRouteTablePropagationSyncOverrideNonOptional
                    as? DisableTransitGatewayRouteTablePropagationSyncType<InvocationReportingType> {
                return try disableTransitGatewayRouteTablePropagationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DisableTransitGatewayRouteTablePropagationResult.__default
    }

    /**
     Invokes the DisableVgwRoutePropagation operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DisableVgwRoutePropagationRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func disableVgwRoutePropagationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisableVgwRoutePropagationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let disableVgwRoutePropagationAsyncOverrideNonOptional = disableVgwRoutePropagationAsyncOverride {
            if let disableVgwRoutePropagationAsyncOverrideTyped = disableVgwRoutePropagationAsyncOverrideNonOptional
                    as? DisableVgwRoutePropagationAsyncType<InvocationReportingType> {
                return try disableVgwRoutePropagationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DisableVgwRoutePropagation operation waiting for the response before returning.

     - Parameters:
         - input: The validated DisableVgwRoutePropagationRequest object being passed to this operation.
     */
    public func disableVgwRoutePropagationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisableVgwRoutePropagationRequest,
            reporting: InvocationReportingType) throws {
        if let disableVgwRoutePropagationSyncOverrideNonOptional = disableVgwRoutePropagationSyncOverride {
            if let disableVgwRoutePropagationSyncOverrideTyped = disableVgwRoutePropagationSyncOverrideNonOptional
                    as? DisableVgwRoutePropagationSyncType<InvocationReportingType> {
                return try disableVgwRoutePropagationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DisableVpcClassicLink operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DisableVpcClassicLinkRequest object being passed to this operation.
         - completion: The DisableVpcClassicLinkResult object or an error will be passed to this 
           callback when the operation is complete. The DisableVpcClassicLinkResult
           object will be validated before being returned to caller.
     */
    public func disableVpcClassicLinkAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisableVpcClassicLinkRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DisableVpcClassicLinkResult, HTTPClientError>) -> ()) throws {
        if let disableVpcClassicLinkAsyncOverrideNonOptional = disableVpcClassicLinkAsyncOverride {
            if let disableVpcClassicLinkAsyncOverrideTyped = disableVpcClassicLinkAsyncOverrideNonOptional
                    as? DisableVpcClassicLinkAsyncType<InvocationReportingType> {
                return try disableVpcClassicLinkAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DisableVpcClassicLinkResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DisableVpcClassicLink operation waiting for the response before returning.

     - Parameters:
         - input: The validated DisableVpcClassicLinkRequest object being passed to this operation.
     - Returns: The DisableVpcClassicLinkResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func disableVpcClassicLinkSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisableVpcClassicLinkRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DisableVpcClassicLinkResult {
        if let disableVpcClassicLinkSyncOverrideNonOptional = disableVpcClassicLinkSyncOverride {
            if let disableVpcClassicLinkSyncOverrideTyped = disableVpcClassicLinkSyncOverrideNonOptional
                    as? DisableVpcClassicLinkSyncType<InvocationReportingType> {
                return try disableVpcClassicLinkSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DisableVpcClassicLinkResult.__default
    }

    /**
     Invokes the DisableVpcClassicLinkDnsSupport operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DisableVpcClassicLinkDnsSupportRequest object being passed to this operation.
         - completion: The DisableVpcClassicLinkDnsSupportResult object or an error will be passed to this 
           callback when the operation is complete. The DisableVpcClassicLinkDnsSupportResult
           object will be validated before being returned to caller.
     */
    public func disableVpcClassicLinkDnsSupportAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisableVpcClassicLinkDnsSupportRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DisableVpcClassicLinkDnsSupportResult, HTTPClientError>) -> ()) throws {
        if let disableVpcClassicLinkDnsSupportAsyncOverrideNonOptional = disableVpcClassicLinkDnsSupportAsyncOverride {
            if let disableVpcClassicLinkDnsSupportAsyncOverrideTyped = disableVpcClassicLinkDnsSupportAsyncOverrideNonOptional
                    as? DisableVpcClassicLinkDnsSupportAsyncType<InvocationReportingType> {
                return try disableVpcClassicLinkDnsSupportAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DisableVpcClassicLinkDnsSupportResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DisableVpcClassicLinkDnsSupport operation waiting for the response before returning.

     - Parameters:
         - input: The validated DisableVpcClassicLinkDnsSupportRequest object being passed to this operation.
     - Returns: The DisableVpcClassicLinkDnsSupportResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func disableVpcClassicLinkDnsSupportSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisableVpcClassicLinkDnsSupportRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DisableVpcClassicLinkDnsSupportResult {
        if let disableVpcClassicLinkDnsSupportSyncOverrideNonOptional = disableVpcClassicLinkDnsSupportSyncOverride {
            if let disableVpcClassicLinkDnsSupportSyncOverrideTyped = disableVpcClassicLinkDnsSupportSyncOverrideNonOptional
                    as? DisableVpcClassicLinkDnsSupportSyncType<InvocationReportingType> {
                return try disableVpcClassicLinkDnsSupportSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DisableVpcClassicLinkDnsSupportResult.__default
    }

    /**
     Invokes the DisassociateAddress operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DisassociateAddressRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func disassociateAddressAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateAddressRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let disassociateAddressAsyncOverrideNonOptional = disassociateAddressAsyncOverride {
            if let disassociateAddressAsyncOverrideTyped = disassociateAddressAsyncOverrideNonOptional
                    as? DisassociateAddressAsyncType<InvocationReportingType> {
                return try disassociateAddressAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DisassociateAddress operation waiting for the response before returning.

     - Parameters:
         - input: The validated DisassociateAddressRequest object being passed to this operation.
     */
    public func disassociateAddressSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateAddressRequest,
            reporting: InvocationReportingType) throws {
        if let disassociateAddressSyncOverrideNonOptional = disassociateAddressSyncOverride {
            if let disassociateAddressSyncOverrideTyped = disassociateAddressSyncOverrideNonOptional
                    as? DisassociateAddressSyncType<InvocationReportingType> {
                return try disassociateAddressSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DisassociateClientVpnTargetNetwork operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DisassociateClientVpnTargetNetworkRequest object being passed to this operation.
         - completion: The DisassociateClientVpnTargetNetworkResult object or an error will be passed to this 
           callback when the operation is complete. The DisassociateClientVpnTargetNetworkResult
           object will be validated before being returned to caller.
     */
    public func disassociateClientVpnTargetNetworkAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateClientVpnTargetNetworkRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DisassociateClientVpnTargetNetworkResult, HTTPClientError>) -> ()) throws {
        if let disassociateClientVpnTargetNetworkAsyncOverrideNonOptional = disassociateClientVpnTargetNetworkAsyncOverride {
            if let disassociateClientVpnTargetNetworkAsyncOverrideTyped = disassociateClientVpnTargetNetworkAsyncOverrideNonOptional
                    as? DisassociateClientVpnTargetNetworkAsyncType<InvocationReportingType> {
                return try disassociateClientVpnTargetNetworkAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DisassociateClientVpnTargetNetworkResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DisassociateClientVpnTargetNetwork operation waiting for the response before returning.

     - Parameters:
         - input: The validated DisassociateClientVpnTargetNetworkRequest object being passed to this operation.
     - Returns: The DisassociateClientVpnTargetNetworkResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func disassociateClientVpnTargetNetworkSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateClientVpnTargetNetworkRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DisassociateClientVpnTargetNetworkResult {
        if let disassociateClientVpnTargetNetworkSyncOverrideNonOptional = disassociateClientVpnTargetNetworkSyncOverride {
            if let disassociateClientVpnTargetNetworkSyncOverrideTyped = disassociateClientVpnTargetNetworkSyncOverrideNonOptional
                    as? DisassociateClientVpnTargetNetworkSyncType<InvocationReportingType> {
                return try disassociateClientVpnTargetNetworkSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DisassociateClientVpnTargetNetworkResult.__default
    }

    /**
     Invokes the DisassociateIamInstanceProfile operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DisassociateIamInstanceProfileRequest object being passed to this operation.
         - completion: The DisassociateIamInstanceProfileResult object or an error will be passed to this 
           callback when the operation is complete. The DisassociateIamInstanceProfileResult
           object will be validated before being returned to caller.
     */
    public func disassociateIamInstanceProfileAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateIamInstanceProfileRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DisassociateIamInstanceProfileResult, HTTPClientError>) -> ()) throws {
        if let disassociateIamInstanceProfileAsyncOverrideNonOptional = disassociateIamInstanceProfileAsyncOverride {
            if let disassociateIamInstanceProfileAsyncOverrideTyped = disassociateIamInstanceProfileAsyncOverrideNonOptional
                    as? DisassociateIamInstanceProfileAsyncType<InvocationReportingType> {
                return try disassociateIamInstanceProfileAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DisassociateIamInstanceProfileResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DisassociateIamInstanceProfile operation waiting for the response before returning.

     - Parameters:
         - input: The validated DisassociateIamInstanceProfileRequest object being passed to this operation.
     - Returns: The DisassociateIamInstanceProfileResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func disassociateIamInstanceProfileSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateIamInstanceProfileRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DisassociateIamInstanceProfileResult {
        if let disassociateIamInstanceProfileSyncOverrideNonOptional = disassociateIamInstanceProfileSyncOverride {
            if let disassociateIamInstanceProfileSyncOverrideTyped = disassociateIamInstanceProfileSyncOverrideNonOptional
                    as? DisassociateIamInstanceProfileSyncType<InvocationReportingType> {
                return try disassociateIamInstanceProfileSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DisassociateIamInstanceProfileResult.__default
    }

    /**
     Invokes the DisassociateRouteTable operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DisassociateRouteTableRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func disassociateRouteTableAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateRouteTableRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let disassociateRouteTableAsyncOverrideNonOptional = disassociateRouteTableAsyncOverride {
            if let disassociateRouteTableAsyncOverrideTyped = disassociateRouteTableAsyncOverrideNonOptional
                    as? DisassociateRouteTableAsyncType<InvocationReportingType> {
                return try disassociateRouteTableAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the DisassociateRouteTable operation waiting for the response before returning.

     - Parameters:
         - input: The validated DisassociateRouteTableRequest object being passed to this operation.
     */
    public func disassociateRouteTableSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateRouteTableRequest,
            reporting: InvocationReportingType) throws {
        if let disassociateRouteTableSyncOverrideNonOptional = disassociateRouteTableSyncOverride {
            if let disassociateRouteTableSyncOverrideTyped = disassociateRouteTableSyncOverrideNonOptional
                    as? DisassociateRouteTableSyncType<InvocationReportingType> {
                return try disassociateRouteTableSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the DisassociateSubnetCidrBlock operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DisassociateSubnetCidrBlockRequest object being passed to this operation.
         - completion: The DisassociateSubnetCidrBlockResult object or an error will be passed to this 
           callback when the operation is complete. The DisassociateSubnetCidrBlockResult
           object will be validated before being returned to caller.
     */
    public func disassociateSubnetCidrBlockAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateSubnetCidrBlockRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DisassociateSubnetCidrBlockResult, HTTPClientError>) -> ()) throws {
        if let disassociateSubnetCidrBlockAsyncOverrideNonOptional = disassociateSubnetCidrBlockAsyncOverride {
            if let disassociateSubnetCidrBlockAsyncOverrideTyped = disassociateSubnetCidrBlockAsyncOverrideNonOptional
                    as? DisassociateSubnetCidrBlockAsyncType<InvocationReportingType> {
                return try disassociateSubnetCidrBlockAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DisassociateSubnetCidrBlockResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DisassociateSubnetCidrBlock operation waiting for the response before returning.

     - Parameters:
         - input: The validated DisassociateSubnetCidrBlockRequest object being passed to this operation.
     - Returns: The DisassociateSubnetCidrBlockResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func disassociateSubnetCidrBlockSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateSubnetCidrBlockRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DisassociateSubnetCidrBlockResult {
        if let disassociateSubnetCidrBlockSyncOverrideNonOptional = disassociateSubnetCidrBlockSyncOverride {
            if let disassociateSubnetCidrBlockSyncOverrideTyped = disassociateSubnetCidrBlockSyncOverrideNonOptional
                    as? DisassociateSubnetCidrBlockSyncType<InvocationReportingType> {
                return try disassociateSubnetCidrBlockSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DisassociateSubnetCidrBlockResult.__default
    }

    /**
     Invokes the DisassociateTransitGatewayMulticastDomain operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DisassociateTransitGatewayMulticastDomainRequest object being passed to this operation.
         - completion: The DisassociateTransitGatewayMulticastDomainResult object or an error will be passed to this 
           callback when the operation is complete. The DisassociateTransitGatewayMulticastDomainResult
           object will be validated before being returned to caller.
     */
    public func disassociateTransitGatewayMulticastDomainAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateTransitGatewayMulticastDomainRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DisassociateTransitGatewayMulticastDomainResult, HTTPClientError>) -> ()) throws {
        if let disassociateTransitGatewayMulticastDomainAsyncOverrideNonOptional = disassociateTransitGatewayMulticastDomainAsyncOverride {
            if let disassociateTransitGatewayMulticastDomainAsyncOverrideTyped = disassociateTransitGatewayMulticastDomainAsyncOverrideNonOptional
                    as? DisassociateTransitGatewayMulticastDomainAsyncType<InvocationReportingType> {
                return try disassociateTransitGatewayMulticastDomainAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DisassociateTransitGatewayMulticastDomainResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DisassociateTransitGatewayMulticastDomain operation waiting for the response before returning.

     - Parameters:
         - input: The validated DisassociateTransitGatewayMulticastDomainRequest object being passed to this operation.
     - Returns: The DisassociateTransitGatewayMulticastDomainResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func disassociateTransitGatewayMulticastDomainSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateTransitGatewayMulticastDomainRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DisassociateTransitGatewayMulticastDomainResult {
        if let disassociateTransitGatewayMulticastDomainSyncOverrideNonOptional = disassociateTransitGatewayMulticastDomainSyncOverride {
            if let disassociateTransitGatewayMulticastDomainSyncOverrideTyped = disassociateTransitGatewayMulticastDomainSyncOverrideNonOptional
                    as? DisassociateTransitGatewayMulticastDomainSyncType<InvocationReportingType> {
                return try disassociateTransitGatewayMulticastDomainSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DisassociateTransitGatewayMulticastDomainResult.__default
    }

    /**
     Invokes the DisassociateTransitGatewayRouteTable operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DisassociateTransitGatewayRouteTableRequest object being passed to this operation.
         - completion: The DisassociateTransitGatewayRouteTableResult object or an error will be passed to this 
           callback when the operation is complete. The DisassociateTransitGatewayRouteTableResult
           object will be validated before being returned to caller.
     */
    public func disassociateTransitGatewayRouteTableAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateTransitGatewayRouteTableRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DisassociateTransitGatewayRouteTableResult, HTTPClientError>) -> ()) throws {
        if let disassociateTransitGatewayRouteTableAsyncOverrideNonOptional = disassociateTransitGatewayRouteTableAsyncOverride {
            if let disassociateTransitGatewayRouteTableAsyncOverrideTyped = disassociateTransitGatewayRouteTableAsyncOverrideNonOptional
                    as? DisassociateTransitGatewayRouteTableAsyncType<InvocationReportingType> {
                return try disassociateTransitGatewayRouteTableAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DisassociateTransitGatewayRouteTableResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DisassociateTransitGatewayRouteTable operation waiting for the response before returning.

     - Parameters:
         - input: The validated DisassociateTransitGatewayRouteTableRequest object being passed to this operation.
     - Returns: The DisassociateTransitGatewayRouteTableResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func disassociateTransitGatewayRouteTableSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateTransitGatewayRouteTableRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DisassociateTransitGatewayRouteTableResult {
        if let disassociateTransitGatewayRouteTableSyncOverrideNonOptional = disassociateTransitGatewayRouteTableSyncOverride {
            if let disassociateTransitGatewayRouteTableSyncOverrideTyped = disassociateTransitGatewayRouteTableSyncOverrideNonOptional
                    as? DisassociateTransitGatewayRouteTableSyncType<InvocationReportingType> {
                return try disassociateTransitGatewayRouteTableSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DisassociateTransitGatewayRouteTableResult.__default
    }

    /**
     Invokes the DisassociateVpcCidrBlock operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated DisassociateVpcCidrBlockRequest object being passed to this operation.
         - completion: The DisassociateVpcCidrBlockResult object or an error will be passed to this 
           callback when the operation is complete. The DisassociateVpcCidrBlockResult
           object will be validated before being returned to caller.
     */
    public func disassociateVpcCidrBlockAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateVpcCidrBlockRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.DisassociateVpcCidrBlockResult, HTTPClientError>) -> ()) throws {
        if let disassociateVpcCidrBlockAsyncOverrideNonOptional = disassociateVpcCidrBlockAsyncOverride {
            if let disassociateVpcCidrBlockAsyncOverrideTyped = disassociateVpcCidrBlockAsyncOverrideNonOptional
                    as? DisassociateVpcCidrBlockAsyncType<InvocationReportingType> {
                return try disassociateVpcCidrBlockAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = DisassociateVpcCidrBlockResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the DisassociateVpcCidrBlock operation waiting for the response before returning.

     - Parameters:
         - input: The validated DisassociateVpcCidrBlockRequest object being passed to this operation.
     - Returns: The DisassociateVpcCidrBlockResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func disassociateVpcCidrBlockSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.DisassociateVpcCidrBlockRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.DisassociateVpcCidrBlockResult {
        if let disassociateVpcCidrBlockSyncOverrideNonOptional = disassociateVpcCidrBlockSyncOverride {
            if let disassociateVpcCidrBlockSyncOverrideTyped = disassociateVpcCidrBlockSyncOverrideNonOptional
                    as? DisassociateVpcCidrBlockSyncType<InvocationReportingType> {
                return try disassociateVpcCidrBlockSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return DisassociateVpcCidrBlockResult.__default
    }

    /**
     Invokes the EnableEbsEncryptionByDefault operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated EnableEbsEncryptionByDefaultRequest object being passed to this operation.
         - completion: The EnableEbsEncryptionByDefaultResult object or an error will be passed to this 
           callback when the operation is complete. The EnableEbsEncryptionByDefaultResult
           object will be validated before being returned to caller.
     */
    public func enableEbsEncryptionByDefaultAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.EnableEbsEncryptionByDefaultRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.EnableEbsEncryptionByDefaultResult, HTTPClientError>) -> ()) throws {
        if let enableEbsEncryptionByDefaultAsyncOverrideNonOptional = enableEbsEncryptionByDefaultAsyncOverride {
            if let enableEbsEncryptionByDefaultAsyncOverrideTyped = enableEbsEncryptionByDefaultAsyncOverrideNonOptional
                    as? EnableEbsEncryptionByDefaultAsyncType<InvocationReportingType> {
                return try enableEbsEncryptionByDefaultAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = EnableEbsEncryptionByDefaultResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the EnableEbsEncryptionByDefault operation waiting for the response before returning.

     - Parameters:
         - input: The validated EnableEbsEncryptionByDefaultRequest object being passed to this operation.
     - Returns: The EnableEbsEncryptionByDefaultResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func enableEbsEncryptionByDefaultSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.EnableEbsEncryptionByDefaultRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.EnableEbsEncryptionByDefaultResult {
        if let enableEbsEncryptionByDefaultSyncOverrideNonOptional = enableEbsEncryptionByDefaultSyncOverride {
            if let enableEbsEncryptionByDefaultSyncOverrideTyped = enableEbsEncryptionByDefaultSyncOverrideNonOptional
                    as? EnableEbsEncryptionByDefaultSyncType<InvocationReportingType> {
                return try enableEbsEncryptionByDefaultSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return EnableEbsEncryptionByDefaultResult.__default
    }

    /**
     Invokes the EnableFastSnapshotRestores operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated EnableFastSnapshotRestoresRequest object being passed to this operation.
         - completion: The EnableFastSnapshotRestoresResult object or an error will be passed to this 
           callback when the operation is complete. The EnableFastSnapshotRestoresResult
           object will be validated before being returned to caller.
     */
    public func enableFastSnapshotRestoresAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.EnableFastSnapshotRestoresRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.EnableFastSnapshotRestoresResult, HTTPClientError>) -> ()) throws {
        if let enableFastSnapshotRestoresAsyncOverrideNonOptional = enableFastSnapshotRestoresAsyncOverride {
            if let enableFastSnapshotRestoresAsyncOverrideTyped = enableFastSnapshotRestoresAsyncOverrideNonOptional
                    as? EnableFastSnapshotRestoresAsyncType<InvocationReportingType> {
                return try enableFastSnapshotRestoresAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = EnableFastSnapshotRestoresResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the EnableFastSnapshotRestores operation waiting for the response before returning.

     - Parameters:
         - input: The validated EnableFastSnapshotRestoresRequest object being passed to this operation.
     - Returns: The EnableFastSnapshotRestoresResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func enableFastSnapshotRestoresSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.EnableFastSnapshotRestoresRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.EnableFastSnapshotRestoresResult {
        if let enableFastSnapshotRestoresSyncOverrideNonOptional = enableFastSnapshotRestoresSyncOverride {
            if let enableFastSnapshotRestoresSyncOverrideTyped = enableFastSnapshotRestoresSyncOverrideNonOptional
                    as? EnableFastSnapshotRestoresSyncType<InvocationReportingType> {
                return try enableFastSnapshotRestoresSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return EnableFastSnapshotRestoresResult.__default
    }

    /**
     Invokes the EnableTransitGatewayRouteTablePropagation operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated EnableTransitGatewayRouteTablePropagationRequest object being passed to this operation.
         - completion: The EnableTransitGatewayRouteTablePropagationResult object or an error will be passed to this 
           callback when the operation is complete. The EnableTransitGatewayRouteTablePropagationResult
           object will be validated before being returned to caller.
     */
    public func enableTransitGatewayRouteTablePropagationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.EnableTransitGatewayRouteTablePropagationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.EnableTransitGatewayRouteTablePropagationResult, HTTPClientError>) -> ()) throws {
        if let enableTransitGatewayRouteTablePropagationAsyncOverrideNonOptional = enableTransitGatewayRouteTablePropagationAsyncOverride {
            if let enableTransitGatewayRouteTablePropagationAsyncOverrideTyped = enableTransitGatewayRouteTablePropagationAsyncOverrideNonOptional
                    as? EnableTransitGatewayRouteTablePropagationAsyncType<InvocationReportingType> {
                return try enableTransitGatewayRouteTablePropagationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = EnableTransitGatewayRouteTablePropagationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the EnableTransitGatewayRouteTablePropagation operation waiting for the response before returning.

     - Parameters:
         - input: The validated EnableTransitGatewayRouteTablePropagationRequest object being passed to this operation.
     - Returns: The EnableTransitGatewayRouteTablePropagationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func enableTransitGatewayRouteTablePropagationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.EnableTransitGatewayRouteTablePropagationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.EnableTransitGatewayRouteTablePropagationResult {
        if let enableTransitGatewayRouteTablePropagationSyncOverrideNonOptional = enableTransitGatewayRouteTablePropagationSyncOverride {
            if let enableTransitGatewayRouteTablePropagationSyncOverrideTyped = enableTransitGatewayRouteTablePropagationSyncOverrideNonOptional
                    as? EnableTransitGatewayRouteTablePropagationSyncType<InvocationReportingType> {
                return try enableTransitGatewayRouteTablePropagationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return EnableTransitGatewayRouteTablePropagationResult.__default
    }

    /**
     Invokes the EnableVgwRoutePropagation operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated EnableVgwRoutePropagationRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func enableVgwRoutePropagationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.EnableVgwRoutePropagationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let enableVgwRoutePropagationAsyncOverrideNonOptional = enableVgwRoutePropagationAsyncOverride {
            if let enableVgwRoutePropagationAsyncOverrideTyped = enableVgwRoutePropagationAsyncOverrideNonOptional
                    as? EnableVgwRoutePropagationAsyncType<InvocationReportingType> {
                return try enableVgwRoutePropagationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the EnableVgwRoutePropagation operation waiting for the response before returning.

     - Parameters:
         - input: The validated EnableVgwRoutePropagationRequest object being passed to this operation.
     */
    public func enableVgwRoutePropagationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.EnableVgwRoutePropagationRequest,
            reporting: InvocationReportingType) throws {
        if let enableVgwRoutePropagationSyncOverrideNonOptional = enableVgwRoutePropagationSyncOverride {
            if let enableVgwRoutePropagationSyncOverrideTyped = enableVgwRoutePropagationSyncOverrideNonOptional
                    as? EnableVgwRoutePropagationSyncType<InvocationReportingType> {
                return try enableVgwRoutePropagationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the EnableVolumeIO operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated EnableVolumeIORequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func enableVolumeIOAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.EnableVolumeIORequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let enableVolumeIOAsyncOverrideNonOptional = enableVolumeIOAsyncOverride {
            if let enableVolumeIOAsyncOverrideTyped = enableVolumeIOAsyncOverrideNonOptional
                    as? EnableVolumeIOAsyncType<InvocationReportingType> {
                return try enableVolumeIOAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the EnableVolumeIO operation waiting for the response before returning.

     - Parameters:
         - input: The validated EnableVolumeIORequest object being passed to this operation.
     */
    public func enableVolumeIOSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.EnableVolumeIORequest,
            reporting: InvocationReportingType) throws {
        if let enableVolumeIOSyncOverrideNonOptional = enableVolumeIOSyncOverride {
            if let enableVolumeIOSyncOverrideTyped = enableVolumeIOSyncOverrideNonOptional
                    as? EnableVolumeIOSyncType<InvocationReportingType> {
                return try enableVolumeIOSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the EnableVpcClassicLink operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated EnableVpcClassicLinkRequest object being passed to this operation.
         - completion: The EnableVpcClassicLinkResult object or an error will be passed to this 
           callback when the operation is complete. The EnableVpcClassicLinkResult
           object will be validated before being returned to caller.
     */
    public func enableVpcClassicLinkAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.EnableVpcClassicLinkRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.EnableVpcClassicLinkResult, HTTPClientError>) -> ()) throws {
        if let enableVpcClassicLinkAsyncOverrideNonOptional = enableVpcClassicLinkAsyncOverride {
            if let enableVpcClassicLinkAsyncOverrideTyped = enableVpcClassicLinkAsyncOverrideNonOptional
                    as? EnableVpcClassicLinkAsyncType<InvocationReportingType> {
                return try enableVpcClassicLinkAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = EnableVpcClassicLinkResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the EnableVpcClassicLink operation waiting for the response before returning.

     - Parameters:
         - input: The validated EnableVpcClassicLinkRequest object being passed to this operation.
     - Returns: The EnableVpcClassicLinkResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func enableVpcClassicLinkSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.EnableVpcClassicLinkRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.EnableVpcClassicLinkResult {
        if let enableVpcClassicLinkSyncOverrideNonOptional = enableVpcClassicLinkSyncOverride {
            if let enableVpcClassicLinkSyncOverrideTyped = enableVpcClassicLinkSyncOverrideNonOptional
                    as? EnableVpcClassicLinkSyncType<InvocationReportingType> {
                return try enableVpcClassicLinkSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return EnableVpcClassicLinkResult.__default
    }

    /**
     Invokes the EnableVpcClassicLinkDnsSupport operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated EnableVpcClassicLinkDnsSupportRequest object being passed to this operation.
         - completion: The EnableVpcClassicLinkDnsSupportResult object or an error will be passed to this 
           callback when the operation is complete. The EnableVpcClassicLinkDnsSupportResult
           object will be validated before being returned to caller.
     */
    public func enableVpcClassicLinkDnsSupportAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.EnableVpcClassicLinkDnsSupportRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.EnableVpcClassicLinkDnsSupportResult, HTTPClientError>) -> ()) throws {
        if let enableVpcClassicLinkDnsSupportAsyncOverrideNonOptional = enableVpcClassicLinkDnsSupportAsyncOverride {
            if let enableVpcClassicLinkDnsSupportAsyncOverrideTyped = enableVpcClassicLinkDnsSupportAsyncOverrideNonOptional
                    as? EnableVpcClassicLinkDnsSupportAsyncType<InvocationReportingType> {
                return try enableVpcClassicLinkDnsSupportAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = EnableVpcClassicLinkDnsSupportResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the EnableVpcClassicLinkDnsSupport operation waiting for the response before returning.

     - Parameters:
         - input: The validated EnableVpcClassicLinkDnsSupportRequest object being passed to this operation.
     - Returns: The EnableVpcClassicLinkDnsSupportResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func enableVpcClassicLinkDnsSupportSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.EnableVpcClassicLinkDnsSupportRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.EnableVpcClassicLinkDnsSupportResult {
        if let enableVpcClassicLinkDnsSupportSyncOverrideNonOptional = enableVpcClassicLinkDnsSupportSyncOverride {
            if let enableVpcClassicLinkDnsSupportSyncOverrideTyped = enableVpcClassicLinkDnsSupportSyncOverrideNonOptional
                    as? EnableVpcClassicLinkDnsSupportSyncType<InvocationReportingType> {
                return try enableVpcClassicLinkDnsSupportSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return EnableVpcClassicLinkDnsSupportResult.__default
    }

    /**
     Invokes the ExportClientVpnClientCertificateRevocationList operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ExportClientVpnClientCertificateRevocationListRequest object being passed to this operation.
         - completion: The ExportClientVpnClientCertificateRevocationListResult object or an error will be passed to this 
           callback when the operation is complete. The ExportClientVpnClientCertificateRevocationListResult
           object will be validated before being returned to caller.
     */
    public func exportClientVpnClientCertificateRevocationListAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ExportClientVpnClientCertificateRevocationListRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ExportClientVpnClientCertificateRevocationListResult, HTTPClientError>) -> ()) throws {
        if let exportClientVpnClientCertificateRevocationListAsyncOverrideNonOptional = exportClientVpnClientCertificateRevocationListAsyncOverride {
            if let exportClientVpnClientCertificateRevocationListAsyncOverrideTyped = exportClientVpnClientCertificateRevocationListAsyncOverrideNonOptional
                    as? ExportClientVpnClientCertificateRevocationListAsyncType<InvocationReportingType> {
                return try exportClientVpnClientCertificateRevocationListAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ExportClientVpnClientCertificateRevocationListResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ExportClientVpnClientCertificateRevocationList operation waiting for the response before returning.

     - Parameters:
         - input: The validated ExportClientVpnClientCertificateRevocationListRequest object being passed to this operation.
     - Returns: The ExportClientVpnClientCertificateRevocationListResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func exportClientVpnClientCertificateRevocationListSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ExportClientVpnClientCertificateRevocationListRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ExportClientVpnClientCertificateRevocationListResult {
        if let exportClientVpnClientCertificateRevocationListSyncOverrideNonOptional = exportClientVpnClientCertificateRevocationListSyncOverride {
            if let exportClientVpnClientCertificateRevocationListSyncOverrideTyped = exportClientVpnClientCertificateRevocationListSyncOverrideNonOptional
                    as? ExportClientVpnClientCertificateRevocationListSyncType<InvocationReportingType> {
                return try exportClientVpnClientCertificateRevocationListSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ExportClientVpnClientCertificateRevocationListResult.__default
    }

    /**
     Invokes the ExportClientVpnClientConfiguration operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ExportClientVpnClientConfigurationRequest object being passed to this operation.
         - completion: The ExportClientVpnClientConfigurationResult object or an error will be passed to this 
           callback when the operation is complete. The ExportClientVpnClientConfigurationResult
           object will be validated before being returned to caller.
     */
    public func exportClientVpnClientConfigurationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ExportClientVpnClientConfigurationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ExportClientVpnClientConfigurationResult, HTTPClientError>) -> ()) throws {
        if let exportClientVpnClientConfigurationAsyncOverrideNonOptional = exportClientVpnClientConfigurationAsyncOverride {
            if let exportClientVpnClientConfigurationAsyncOverrideTyped = exportClientVpnClientConfigurationAsyncOverrideNonOptional
                    as? ExportClientVpnClientConfigurationAsyncType<InvocationReportingType> {
                return try exportClientVpnClientConfigurationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ExportClientVpnClientConfigurationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ExportClientVpnClientConfiguration operation waiting for the response before returning.

     - Parameters:
         - input: The validated ExportClientVpnClientConfigurationRequest object being passed to this operation.
     - Returns: The ExportClientVpnClientConfigurationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func exportClientVpnClientConfigurationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ExportClientVpnClientConfigurationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ExportClientVpnClientConfigurationResult {
        if let exportClientVpnClientConfigurationSyncOverrideNonOptional = exportClientVpnClientConfigurationSyncOverride {
            if let exportClientVpnClientConfigurationSyncOverrideTyped = exportClientVpnClientConfigurationSyncOverrideNonOptional
                    as? ExportClientVpnClientConfigurationSyncType<InvocationReportingType> {
                return try exportClientVpnClientConfigurationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ExportClientVpnClientConfigurationResult.__default
    }

    /**
     Invokes the ExportImage operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ExportImageRequest object being passed to this operation.
         - completion: The ExportImageResult object or an error will be passed to this 
           callback when the operation is complete. The ExportImageResult
           object will be validated before being returned to caller.
     */
    public func exportImageAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ExportImageRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ExportImageResult, HTTPClientError>) -> ()) throws {
        if let exportImageAsyncOverrideNonOptional = exportImageAsyncOverride {
            if let exportImageAsyncOverrideTyped = exportImageAsyncOverrideNonOptional
                    as? ExportImageAsyncType<InvocationReportingType> {
                return try exportImageAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ExportImageResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ExportImage operation waiting for the response before returning.

     - Parameters:
         - input: The validated ExportImageRequest object being passed to this operation.
     - Returns: The ExportImageResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func exportImageSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ExportImageRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ExportImageResult {
        if let exportImageSyncOverrideNonOptional = exportImageSyncOverride {
            if let exportImageSyncOverrideTyped = exportImageSyncOverrideNonOptional
                    as? ExportImageSyncType<InvocationReportingType> {
                return try exportImageSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ExportImageResult.__default
    }

    /**
     Invokes the ExportTransitGatewayRoutes operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ExportTransitGatewayRoutesRequest object being passed to this operation.
         - completion: The ExportTransitGatewayRoutesResult object or an error will be passed to this 
           callback when the operation is complete. The ExportTransitGatewayRoutesResult
           object will be validated before being returned to caller.
     */
    public func exportTransitGatewayRoutesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ExportTransitGatewayRoutesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ExportTransitGatewayRoutesResult, HTTPClientError>) -> ()) throws {
        if let exportTransitGatewayRoutesAsyncOverrideNonOptional = exportTransitGatewayRoutesAsyncOverride {
            if let exportTransitGatewayRoutesAsyncOverrideTyped = exportTransitGatewayRoutesAsyncOverrideNonOptional
                    as? ExportTransitGatewayRoutesAsyncType<InvocationReportingType> {
                return try exportTransitGatewayRoutesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ExportTransitGatewayRoutesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ExportTransitGatewayRoutes operation waiting for the response before returning.

     - Parameters:
         - input: The validated ExportTransitGatewayRoutesRequest object being passed to this operation.
     - Returns: The ExportTransitGatewayRoutesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func exportTransitGatewayRoutesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ExportTransitGatewayRoutesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ExportTransitGatewayRoutesResult {
        if let exportTransitGatewayRoutesSyncOverrideNonOptional = exportTransitGatewayRoutesSyncOverride {
            if let exportTransitGatewayRoutesSyncOverrideTyped = exportTransitGatewayRoutesSyncOverrideNonOptional
                    as? ExportTransitGatewayRoutesSyncType<InvocationReportingType> {
                return try exportTransitGatewayRoutesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ExportTransitGatewayRoutesResult.__default
    }

    /**
     Invokes the GetAssociatedIpv6PoolCidrs operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetAssociatedIpv6PoolCidrsRequest object being passed to this operation.
         - completion: The GetAssociatedIpv6PoolCidrsResult object or an error will be passed to this 
           callback when the operation is complete. The GetAssociatedIpv6PoolCidrsResult
           object will be validated before being returned to caller.
     */
    public func getAssociatedIpv6PoolCidrsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetAssociatedIpv6PoolCidrsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetAssociatedIpv6PoolCidrsResult, HTTPClientError>) -> ()) throws {
        if let getAssociatedIpv6PoolCidrsAsyncOverrideNonOptional = getAssociatedIpv6PoolCidrsAsyncOverride {
            if let getAssociatedIpv6PoolCidrsAsyncOverrideTyped = getAssociatedIpv6PoolCidrsAsyncOverrideNonOptional
                    as? GetAssociatedIpv6PoolCidrsAsyncType<InvocationReportingType> {
                return try getAssociatedIpv6PoolCidrsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetAssociatedIpv6PoolCidrsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetAssociatedIpv6PoolCidrs operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetAssociatedIpv6PoolCidrsRequest object being passed to this operation.
     - Returns: The GetAssociatedIpv6PoolCidrsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getAssociatedIpv6PoolCidrsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetAssociatedIpv6PoolCidrsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetAssociatedIpv6PoolCidrsResult {
        if let getAssociatedIpv6PoolCidrsSyncOverrideNonOptional = getAssociatedIpv6PoolCidrsSyncOverride {
            if let getAssociatedIpv6PoolCidrsSyncOverrideTyped = getAssociatedIpv6PoolCidrsSyncOverrideNonOptional
                    as? GetAssociatedIpv6PoolCidrsSyncType<InvocationReportingType> {
                return try getAssociatedIpv6PoolCidrsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetAssociatedIpv6PoolCidrsResult.__default
    }

    /**
     Invokes the GetCapacityReservationUsage operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetCapacityReservationUsageRequest object being passed to this operation.
         - completion: The GetCapacityReservationUsageResult object or an error will be passed to this 
           callback when the operation is complete. The GetCapacityReservationUsageResult
           object will be validated before being returned to caller.
     */
    public func getCapacityReservationUsageAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetCapacityReservationUsageRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetCapacityReservationUsageResult, HTTPClientError>) -> ()) throws {
        if let getCapacityReservationUsageAsyncOverrideNonOptional = getCapacityReservationUsageAsyncOverride {
            if let getCapacityReservationUsageAsyncOverrideTyped = getCapacityReservationUsageAsyncOverrideNonOptional
                    as? GetCapacityReservationUsageAsyncType<InvocationReportingType> {
                return try getCapacityReservationUsageAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetCapacityReservationUsageResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetCapacityReservationUsage operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetCapacityReservationUsageRequest object being passed to this operation.
     - Returns: The GetCapacityReservationUsageResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getCapacityReservationUsageSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetCapacityReservationUsageRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetCapacityReservationUsageResult {
        if let getCapacityReservationUsageSyncOverrideNonOptional = getCapacityReservationUsageSyncOverride {
            if let getCapacityReservationUsageSyncOverrideTyped = getCapacityReservationUsageSyncOverrideNonOptional
                    as? GetCapacityReservationUsageSyncType<InvocationReportingType> {
                return try getCapacityReservationUsageSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetCapacityReservationUsageResult.__default
    }

    /**
     Invokes the GetCoipPoolUsage operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetCoipPoolUsageRequest object being passed to this operation.
         - completion: The GetCoipPoolUsageResult object or an error will be passed to this 
           callback when the operation is complete. The GetCoipPoolUsageResult
           object will be validated before being returned to caller.
     */
    public func getCoipPoolUsageAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetCoipPoolUsageRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetCoipPoolUsageResult, HTTPClientError>) -> ()) throws {
        if let getCoipPoolUsageAsyncOverrideNonOptional = getCoipPoolUsageAsyncOverride {
            if let getCoipPoolUsageAsyncOverrideTyped = getCoipPoolUsageAsyncOverrideNonOptional
                    as? GetCoipPoolUsageAsyncType<InvocationReportingType> {
                return try getCoipPoolUsageAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetCoipPoolUsageResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetCoipPoolUsage operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetCoipPoolUsageRequest object being passed to this operation.
     - Returns: The GetCoipPoolUsageResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getCoipPoolUsageSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetCoipPoolUsageRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetCoipPoolUsageResult {
        if let getCoipPoolUsageSyncOverrideNonOptional = getCoipPoolUsageSyncOverride {
            if let getCoipPoolUsageSyncOverrideTyped = getCoipPoolUsageSyncOverrideNonOptional
                    as? GetCoipPoolUsageSyncType<InvocationReportingType> {
                return try getCoipPoolUsageSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetCoipPoolUsageResult.__default
    }

    /**
     Invokes the GetConsoleOutput operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetConsoleOutputRequest object being passed to this operation.
         - completion: The GetConsoleOutputResult object or an error will be passed to this 
           callback when the operation is complete. The GetConsoleOutputResult
           object will be validated before being returned to caller.
     */
    public func getConsoleOutputAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetConsoleOutputRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetConsoleOutputResult, HTTPClientError>) -> ()) throws {
        if let getConsoleOutputAsyncOverrideNonOptional = getConsoleOutputAsyncOverride {
            if let getConsoleOutputAsyncOverrideTyped = getConsoleOutputAsyncOverrideNonOptional
                    as? GetConsoleOutputAsyncType<InvocationReportingType> {
                return try getConsoleOutputAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetConsoleOutputResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetConsoleOutput operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetConsoleOutputRequest object being passed to this operation.
     - Returns: The GetConsoleOutputResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getConsoleOutputSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetConsoleOutputRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetConsoleOutputResult {
        if let getConsoleOutputSyncOverrideNonOptional = getConsoleOutputSyncOverride {
            if let getConsoleOutputSyncOverrideTyped = getConsoleOutputSyncOverrideNonOptional
                    as? GetConsoleOutputSyncType<InvocationReportingType> {
                return try getConsoleOutputSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetConsoleOutputResult.__default
    }

    /**
     Invokes the GetConsoleScreenshot operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetConsoleScreenshotRequest object being passed to this operation.
         - completion: The GetConsoleScreenshotResult object or an error will be passed to this 
           callback when the operation is complete. The GetConsoleScreenshotResult
           object will be validated before being returned to caller.
     */
    public func getConsoleScreenshotAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetConsoleScreenshotRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetConsoleScreenshotResult, HTTPClientError>) -> ()) throws {
        if let getConsoleScreenshotAsyncOverrideNonOptional = getConsoleScreenshotAsyncOverride {
            if let getConsoleScreenshotAsyncOverrideTyped = getConsoleScreenshotAsyncOverrideNonOptional
                    as? GetConsoleScreenshotAsyncType<InvocationReportingType> {
                return try getConsoleScreenshotAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetConsoleScreenshotResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetConsoleScreenshot operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetConsoleScreenshotRequest object being passed to this operation.
     - Returns: The GetConsoleScreenshotResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getConsoleScreenshotSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetConsoleScreenshotRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetConsoleScreenshotResult {
        if let getConsoleScreenshotSyncOverrideNonOptional = getConsoleScreenshotSyncOverride {
            if let getConsoleScreenshotSyncOverrideTyped = getConsoleScreenshotSyncOverrideNonOptional
                    as? GetConsoleScreenshotSyncType<InvocationReportingType> {
                return try getConsoleScreenshotSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetConsoleScreenshotResult.__default
    }

    /**
     Invokes the GetDefaultCreditSpecification operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetDefaultCreditSpecificationRequest object being passed to this operation.
         - completion: The GetDefaultCreditSpecificationResult object or an error will be passed to this 
           callback when the operation is complete. The GetDefaultCreditSpecificationResult
           object will be validated before being returned to caller.
     */
    public func getDefaultCreditSpecificationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetDefaultCreditSpecificationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetDefaultCreditSpecificationResult, HTTPClientError>) -> ()) throws {
        if let getDefaultCreditSpecificationAsyncOverrideNonOptional = getDefaultCreditSpecificationAsyncOverride {
            if let getDefaultCreditSpecificationAsyncOverrideTyped = getDefaultCreditSpecificationAsyncOverrideNonOptional
                    as? GetDefaultCreditSpecificationAsyncType<InvocationReportingType> {
                return try getDefaultCreditSpecificationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetDefaultCreditSpecificationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetDefaultCreditSpecification operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetDefaultCreditSpecificationRequest object being passed to this operation.
     - Returns: The GetDefaultCreditSpecificationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getDefaultCreditSpecificationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetDefaultCreditSpecificationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetDefaultCreditSpecificationResult {
        if let getDefaultCreditSpecificationSyncOverrideNonOptional = getDefaultCreditSpecificationSyncOverride {
            if let getDefaultCreditSpecificationSyncOverrideTyped = getDefaultCreditSpecificationSyncOverrideNonOptional
                    as? GetDefaultCreditSpecificationSyncType<InvocationReportingType> {
                return try getDefaultCreditSpecificationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetDefaultCreditSpecificationResult.__default
    }

    /**
     Invokes the GetEbsDefaultKmsKeyId operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetEbsDefaultKmsKeyIdRequest object being passed to this operation.
         - completion: The GetEbsDefaultKmsKeyIdResult object or an error will be passed to this 
           callback when the operation is complete. The GetEbsDefaultKmsKeyIdResult
           object will be validated before being returned to caller.
     */
    public func getEbsDefaultKmsKeyIdAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetEbsDefaultKmsKeyIdRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetEbsDefaultKmsKeyIdResult, HTTPClientError>) -> ()) throws {
        if let getEbsDefaultKmsKeyIdAsyncOverrideNonOptional = getEbsDefaultKmsKeyIdAsyncOverride {
            if let getEbsDefaultKmsKeyIdAsyncOverrideTyped = getEbsDefaultKmsKeyIdAsyncOverrideNonOptional
                    as? GetEbsDefaultKmsKeyIdAsyncType<InvocationReportingType> {
                return try getEbsDefaultKmsKeyIdAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetEbsDefaultKmsKeyIdResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetEbsDefaultKmsKeyId operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetEbsDefaultKmsKeyIdRequest object being passed to this operation.
     - Returns: The GetEbsDefaultKmsKeyIdResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getEbsDefaultKmsKeyIdSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetEbsDefaultKmsKeyIdRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetEbsDefaultKmsKeyIdResult {
        if let getEbsDefaultKmsKeyIdSyncOverrideNonOptional = getEbsDefaultKmsKeyIdSyncOverride {
            if let getEbsDefaultKmsKeyIdSyncOverrideTyped = getEbsDefaultKmsKeyIdSyncOverrideNonOptional
                    as? GetEbsDefaultKmsKeyIdSyncType<InvocationReportingType> {
                return try getEbsDefaultKmsKeyIdSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetEbsDefaultKmsKeyIdResult.__default
    }

    /**
     Invokes the GetEbsEncryptionByDefault operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetEbsEncryptionByDefaultRequest object being passed to this operation.
         - completion: The GetEbsEncryptionByDefaultResult object or an error will be passed to this 
           callback when the operation is complete. The GetEbsEncryptionByDefaultResult
           object will be validated before being returned to caller.
     */
    public func getEbsEncryptionByDefaultAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetEbsEncryptionByDefaultRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetEbsEncryptionByDefaultResult, HTTPClientError>) -> ()) throws {
        if let getEbsEncryptionByDefaultAsyncOverrideNonOptional = getEbsEncryptionByDefaultAsyncOverride {
            if let getEbsEncryptionByDefaultAsyncOverrideTyped = getEbsEncryptionByDefaultAsyncOverrideNonOptional
                    as? GetEbsEncryptionByDefaultAsyncType<InvocationReportingType> {
                return try getEbsEncryptionByDefaultAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetEbsEncryptionByDefaultResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetEbsEncryptionByDefault operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetEbsEncryptionByDefaultRequest object being passed to this operation.
     - Returns: The GetEbsEncryptionByDefaultResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getEbsEncryptionByDefaultSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetEbsEncryptionByDefaultRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetEbsEncryptionByDefaultResult {
        if let getEbsEncryptionByDefaultSyncOverrideNonOptional = getEbsEncryptionByDefaultSyncOverride {
            if let getEbsEncryptionByDefaultSyncOverrideTyped = getEbsEncryptionByDefaultSyncOverrideNonOptional
                    as? GetEbsEncryptionByDefaultSyncType<InvocationReportingType> {
                return try getEbsEncryptionByDefaultSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetEbsEncryptionByDefaultResult.__default
    }

    /**
     Invokes the GetHostReservationPurchasePreview operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetHostReservationPurchasePreviewRequest object being passed to this operation.
         - completion: The GetHostReservationPurchasePreviewResult object or an error will be passed to this 
           callback when the operation is complete. The GetHostReservationPurchasePreviewResult
           object will be validated before being returned to caller.
     */
    public func getHostReservationPurchasePreviewAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetHostReservationPurchasePreviewRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetHostReservationPurchasePreviewResult, HTTPClientError>) -> ()) throws {
        if let getHostReservationPurchasePreviewAsyncOverrideNonOptional = getHostReservationPurchasePreviewAsyncOverride {
            if let getHostReservationPurchasePreviewAsyncOverrideTyped = getHostReservationPurchasePreviewAsyncOverrideNonOptional
                    as? GetHostReservationPurchasePreviewAsyncType<InvocationReportingType> {
                return try getHostReservationPurchasePreviewAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetHostReservationPurchasePreviewResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetHostReservationPurchasePreview operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetHostReservationPurchasePreviewRequest object being passed to this operation.
     - Returns: The GetHostReservationPurchasePreviewResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getHostReservationPurchasePreviewSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetHostReservationPurchasePreviewRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetHostReservationPurchasePreviewResult {
        if let getHostReservationPurchasePreviewSyncOverrideNonOptional = getHostReservationPurchasePreviewSyncOverride {
            if let getHostReservationPurchasePreviewSyncOverrideTyped = getHostReservationPurchasePreviewSyncOverrideNonOptional
                    as? GetHostReservationPurchasePreviewSyncType<InvocationReportingType> {
                return try getHostReservationPurchasePreviewSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetHostReservationPurchasePreviewResult.__default
    }

    /**
     Invokes the GetLaunchTemplateData operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetLaunchTemplateDataRequest object being passed to this operation.
         - completion: The GetLaunchTemplateDataResult object or an error will be passed to this 
           callback when the operation is complete. The GetLaunchTemplateDataResult
           object will be validated before being returned to caller.
     */
    public func getLaunchTemplateDataAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetLaunchTemplateDataRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetLaunchTemplateDataResult, HTTPClientError>) -> ()) throws {
        if let getLaunchTemplateDataAsyncOverrideNonOptional = getLaunchTemplateDataAsyncOverride {
            if let getLaunchTemplateDataAsyncOverrideTyped = getLaunchTemplateDataAsyncOverrideNonOptional
                    as? GetLaunchTemplateDataAsyncType<InvocationReportingType> {
                return try getLaunchTemplateDataAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetLaunchTemplateDataResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetLaunchTemplateData operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetLaunchTemplateDataRequest object being passed to this operation.
     - Returns: The GetLaunchTemplateDataResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getLaunchTemplateDataSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetLaunchTemplateDataRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetLaunchTemplateDataResult {
        if let getLaunchTemplateDataSyncOverrideNonOptional = getLaunchTemplateDataSyncOverride {
            if let getLaunchTemplateDataSyncOverrideTyped = getLaunchTemplateDataSyncOverrideNonOptional
                    as? GetLaunchTemplateDataSyncType<InvocationReportingType> {
                return try getLaunchTemplateDataSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetLaunchTemplateDataResult.__default
    }

    /**
     Invokes the GetPasswordData operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetPasswordDataRequest object being passed to this operation.
         - completion: The GetPasswordDataResult object or an error will be passed to this 
           callback when the operation is complete. The GetPasswordDataResult
           object will be validated before being returned to caller.
     */
    public func getPasswordDataAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetPasswordDataRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetPasswordDataResult, HTTPClientError>) -> ()) throws {
        if let getPasswordDataAsyncOverrideNonOptional = getPasswordDataAsyncOverride {
            if let getPasswordDataAsyncOverrideTyped = getPasswordDataAsyncOverrideNonOptional
                    as? GetPasswordDataAsyncType<InvocationReportingType> {
                return try getPasswordDataAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetPasswordDataResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetPasswordData operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetPasswordDataRequest object being passed to this operation.
     - Returns: The GetPasswordDataResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getPasswordDataSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetPasswordDataRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetPasswordDataResult {
        if let getPasswordDataSyncOverrideNonOptional = getPasswordDataSyncOverride {
            if let getPasswordDataSyncOverrideTyped = getPasswordDataSyncOverrideNonOptional
                    as? GetPasswordDataSyncType<InvocationReportingType> {
                return try getPasswordDataSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetPasswordDataResult.__default
    }

    /**
     Invokes the GetReservedInstancesExchangeQuote operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetReservedInstancesExchangeQuoteRequest object being passed to this operation.
         - completion: The GetReservedInstancesExchangeQuoteResult object or an error will be passed to this 
           callback when the operation is complete. The GetReservedInstancesExchangeQuoteResult
           object will be validated before being returned to caller.
     */
    public func getReservedInstancesExchangeQuoteAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetReservedInstancesExchangeQuoteRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetReservedInstancesExchangeQuoteResult, HTTPClientError>) -> ()) throws {
        if let getReservedInstancesExchangeQuoteAsyncOverrideNonOptional = getReservedInstancesExchangeQuoteAsyncOverride {
            if let getReservedInstancesExchangeQuoteAsyncOverrideTyped = getReservedInstancesExchangeQuoteAsyncOverrideNonOptional
                    as? GetReservedInstancesExchangeQuoteAsyncType<InvocationReportingType> {
                return try getReservedInstancesExchangeQuoteAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetReservedInstancesExchangeQuoteResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetReservedInstancesExchangeQuote operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetReservedInstancesExchangeQuoteRequest object being passed to this operation.
     - Returns: The GetReservedInstancesExchangeQuoteResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getReservedInstancesExchangeQuoteSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetReservedInstancesExchangeQuoteRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetReservedInstancesExchangeQuoteResult {
        if let getReservedInstancesExchangeQuoteSyncOverrideNonOptional = getReservedInstancesExchangeQuoteSyncOverride {
            if let getReservedInstancesExchangeQuoteSyncOverrideTyped = getReservedInstancesExchangeQuoteSyncOverrideNonOptional
                    as? GetReservedInstancesExchangeQuoteSyncType<InvocationReportingType> {
                return try getReservedInstancesExchangeQuoteSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetReservedInstancesExchangeQuoteResult.__default
    }

    /**
     Invokes the GetTransitGatewayAttachmentPropagations operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetTransitGatewayAttachmentPropagationsRequest object being passed to this operation.
         - completion: The GetTransitGatewayAttachmentPropagationsResult object or an error will be passed to this 
           callback when the operation is complete. The GetTransitGatewayAttachmentPropagationsResult
           object will be validated before being returned to caller.
     */
    public func getTransitGatewayAttachmentPropagationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetTransitGatewayAttachmentPropagationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetTransitGatewayAttachmentPropagationsResult, HTTPClientError>) -> ()) throws {
        if let getTransitGatewayAttachmentPropagationsAsyncOverrideNonOptional = getTransitGatewayAttachmentPropagationsAsyncOverride {
            if let getTransitGatewayAttachmentPropagationsAsyncOverrideTyped = getTransitGatewayAttachmentPropagationsAsyncOverrideNonOptional
                    as? GetTransitGatewayAttachmentPropagationsAsyncType<InvocationReportingType> {
                return try getTransitGatewayAttachmentPropagationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetTransitGatewayAttachmentPropagationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetTransitGatewayAttachmentPropagations operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetTransitGatewayAttachmentPropagationsRequest object being passed to this operation.
     - Returns: The GetTransitGatewayAttachmentPropagationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getTransitGatewayAttachmentPropagationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetTransitGatewayAttachmentPropagationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetTransitGatewayAttachmentPropagationsResult {
        if let getTransitGatewayAttachmentPropagationsSyncOverrideNonOptional = getTransitGatewayAttachmentPropagationsSyncOverride {
            if let getTransitGatewayAttachmentPropagationsSyncOverrideTyped = getTransitGatewayAttachmentPropagationsSyncOverrideNonOptional
                    as? GetTransitGatewayAttachmentPropagationsSyncType<InvocationReportingType> {
                return try getTransitGatewayAttachmentPropagationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetTransitGatewayAttachmentPropagationsResult.__default
    }

    /**
     Invokes the GetTransitGatewayMulticastDomainAssociations operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetTransitGatewayMulticastDomainAssociationsRequest object being passed to this operation.
         - completion: The GetTransitGatewayMulticastDomainAssociationsResult object or an error will be passed to this 
           callback when the operation is complete. The GetTransitGatewayMulticastDomainAssociationsResult
           object will be validated before being returned to caller.
     */
    public func getTransitGatewayMulticastDomainAssociationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetTransitGatewayMulticastDomainAssociationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetTransitGatewayMulticastDomainAssociationsResult, HTTPClientError>) -> ()) throws {
        if let getTransitGatewayMulticastDomainAssociationsAsyncOverrideNonOptional = getTransitGatewayMulticastDomainAssociationsAsyncOverride {
            if let getTransitGatewayMulticastDomainAssociationsAsyncOverrideTyped = getTransitGatewayMulticastDomainAssociationsAsyncOverrideNonOptional
                    as? GetTransitGatewayMulticastDomainAssociationsAsyncType<InvocationReportingType> {
                return try getTransitGatewayMulticastDomainAssociationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetTransitGatewayMulticastDomainAssociationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetTransitGatewayMulticastDomainAssociations operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetTransitGatewayMulticastDomainAssociationsRequest object being passed to this operation.
     - Returns: The GetTransitGatewayMulticastDomainAssociationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getTransitGatewayMulticastDomainAssociationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetTransitGatewayMulticastDomainAssociationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetTransitGatewayMulticastDomainAssociationsResult {
        if let getTransitGatewayMulticastDomainAssociationsSyncOverrideNonOptional = getTransitGatewayMulticastDomainAssociationsSyncOverride {
            if let getTransitGatewayMulticastDomainAssociationsSyncOverrideTyped = getTransitGatewayMulticastDomainAssociationsSyncOverrideNonOptional
                    as? GetTransitGatewayMulticastDomainAssociationsSyncType<InvocationReportingType> {
                return try getTransitGatewayMulticastDomainAssociationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetTransitGatewayMulticastDomainAssociationsResult.__default
    }

    /**
     Invokes the GetTransitGatewayRouteTableAssociations operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetTransitGatewayRouteTableAssociationsRequest object being passed to this operation.
         - completion: The GetTransitGatewayRouteTableAssociationsResult object or an error will be passed to this 
           callback when the operation is complete. The GetTransitGatewayRouteTableAssociationsResult
           object will be validated before being returned to caller.
     */
    public func getTransitGatewayRouteTableAssociationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetTransitGatewayRouteTableAssociationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetTransitGatewayRouteTableAssociationsResult, HTTPClientError>) -> ()) throws {
        if let getTransitGatewayRouteTableAssociationsAsyncOverrideNonOptional = getTransitGatewayRouteTableAssociationsAsyncOverride {
            if let getTransitGatewayRouteTableAssociationsAsyncOverrideTyped = getTransitGatewayRouteTableAssociationsAsyncOverrideNonOptional
                    as? GetTransitGatewayRouteTableAssociationsAsyncType<InvocationReportingType> {
                return try getTransitGatewayRouteTableAssociationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetTransitGatewayRouteTableAssociationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetTransitGatewayRouteTableAssociations operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetTransitGatewayRouteTableAssociationsRequest object being passed to this operation.
     - Returns: The GetTransitGatewayRouteTableAssociationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getTransitGatewayRouteTableAssociationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetTransitGatewayRouteTableAssociationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetTransitGatewayRouteTableAssociationsResult {
        if let getTransitGatewayRouteTableAssociationsSyncOverrideNonOptional = getTransitGatewayRouteTableAssociationsSyncOverride {
            if let getTransitGatewayRouteTableAssociationsSyncOverrideTyped = getTransitGatewayRouteTableAssociationsSyncOverrideNonOptional
                    as? GetTransitGatewayRouteTableAssociationsSyncType<InvocationReportingType> {
                return try getTransitGatewayRouteTableAssociationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetTransitGatewayRouteTableAssociationsResult.__default
    }

    /**
     Invokes the GetTransitGatewayRouteTablePropagations operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated GetTransitGatewayRouteTablePropagationsRequest object being passed to this operation.
         - completion: The GetTransitGatewayRouteTablePropagationsResult object or an error will be passed to this 
           callback when the operation is complete. The GetTransitGatewayRouteTablePropagationsResult
           object will be validated before being returned to caller.
     */
    public func getTransitGatewayRouteTablePropagationsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetTransitGatewayRouteTablePropagationsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.GetTransitGatewayRouteTablePropagationsResult, HTTPClientError>) -> ()) throws {
        if let getTransitGatewayRouteTablePropagationsAsyncOverrideNonOptional = getTransitGatewayRouteTablePropagationsAsyncOverride {
            if let getTransitGatewayRouteTablePropagationsAsyncOverrideTyped = getTransitGatewayRouteTablePropagationsAsyncOverrideNonOptional
                    as? GetTransitGatewayRouteTablePropagationsAsyncType<InvocationReportingType> {
                return try getTransitGatewayRouteTablePropagationsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = GetTransitGatewayRouteTablePropagationsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the GetTransitGatewayRouteTablePropagations operation waiting for the response before returning.

     - Parameters:
         - input: The validated GetTransitGatewayRouteTablePropagationsRequest object being passed to this operation.
     - Returns: The GetTransitGatewayRouteTablePropagationsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func getTransitGatewayRouteTablePropagationsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.GetTransitGatewayRouteTablePropagationsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.GetTransitGatewayRouteTablePropagationsResult {
        if let getTransitGatewayRouteTablePropagationsSyncOverrideNonOptional = getTransitGatewayRouteTablePropagationsSyncOverride {
            if let getTransitGatewayRouteTablePropagationsSyncOverrideTyped = getTransitGatewayRouteTablePropagationsSyncOverrideNonOptional
                    as? GetTransitGatewayRouteTablePropagationsSyncType<InvocationReportingType> {
                return try getTransitGatewayRouteTablePropagationsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return GetTransitGatewayRouteTablePropagationsResult.__default
    }

    /**
     Invokes the ImportClientVpnClientCertificateRevocationList operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ImportClientVpnClientCertificateRevocationListRequest object being passed to this operation.
         - completion: The ImportClientVpnClientCertificateRevocationListResult object or an error will be passed to this 
           callback when the operation is complete. The ImportClientVpnClientCertificateRevocationListResult
           object will be validated before being returned to caller.
     */
    public func importClientVpnClientCertificateRevocationListAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ImportClientVpnClientCertificateRevocationListRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ImportClientVpnClientCertificateRevocationListResult, HTTPClientError>) -> ()) throws {
        if let importClientVpnClientCertificateRevocationListAsyncOverrideNonOptional = importClientVpnClientCertificateRevocationListAsyncOverride {
            if let importClientVpnClientCertificateRevocationListAsyncOverrideTyped = importClientVpnClientCertificateRevocationListAsyncOverrideNonOptional
                    as? ImportClientVpnClientCertificateRevocationListAsyncType<InvocationReportingType> {
                return try importClientVpnClientCertificateRevocationListAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ImportClientVpnClientCertificateRevocationListResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ImportClientVpnClientCertificateRevocationList operation waiting for the response before returning.

     - Parameters:
         - input: The validated ImportClientVpnClientCertificateRevocationListRequest object being passed to this operation.
     - Returns: The ImportClientVpnClientCertificateRevocationListResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func importClientVpnClientCertificateRevocationListSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ImportClientVpnClientCertificateRevocationListRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ImportClientVpnClientCertificateRevocationListResult {
        if let importClientVpnClientCertificateRevocationListSyncOverrideNonOptional = importClientVpnClientCertificateRevocationListSyncOverride {
            if let importClientVpnClientCertificateRevocationListSyncOverrideTyped = importClientVpnClientCertificateRevocationListSyncOverrideNonOptional
                    as? ImportClientVpnClientCertificateRevocationListSyncType<InvocationReportingType> {
                return try importClientVpnClientCertificateRevocationListSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ImportClientVpnClientCertificateRevocationListResult.__default
    }

    /**
     Invokes the ImportImage operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ImportImageRequest object being passed to this operation.
         - completion: The ImportImageResult object or an error will be passed to this 
           callback when the operation is complete. The ImportImageResult
           object will be validated before being returned to caller.
     */
    public func importImageAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ImportImageRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ImportImageResult, HTTPClientError>) -> ()) throws {
        if let importImageAsyncOverrideNonOptional = importImageAsyncOverride {
            if let importImageAsyncOverrideTyped = importImageAsyncOverrideNonOptional
                    as? ImportImageAsyncType<InvocationReportingType> {
                return try importImageAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ImportImageResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ImportImage operation waiting for the response before returning.

     - Parameters:
         - input: The validated ImportImageRequest object being passed to this operation.
     - Returns: The ImportImageResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func importImageSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ImportImageRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ImportImageResult {
        if let importImageSyncOverrideNonOptional = importImageSyncOverride {
            if let importImageSyncOverrideTyped = importImageSyncOverrideNonOptional
                    as? ImportImageSyncType<InvocationReportingType> {
                return try importImageSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ImportImageResult.__default
    }

    /**
     Invokes the ImportInstance operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ImportInstanceRequest object being passed to this operation.
         - completion: The ImportInstanceResult object or an error will be passed to this 
           callback when the operation is complete. The ImportInstanceResult
           object will be validated before being returned to caller.
     */
    public func importInstanceAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ImportInstanceRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ImportInstanceResult, HTTPClientError>) -> ()) throws {
        if let importInstanceAsyncOverrideNonOptional = importInstanceAsyncOverride {
            if let importInstanceAsyncOverrideTyped = importInstanceAsyncOverrideNonOptional
                    as? ImportInstanceAsyncType<InvocationReportingType> {
                return try importInstanceAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ImportInstanceResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ImportInstance operation waiting for the response before returning.

     - Parameters:
         - input: The validated ImportInstanceRequest object being passed to this operation.
     - Returns: The ImportInstanceResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func importInstanceSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ImportInstanceRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ImportInstanceResult {
        if let importInstanceSyncOverrideNonOptional = importInstanceSyncOverride {
            if let importInstanceSyncOverrideTyped = importInstanceSyncOverrideNonOptional
                    as? ImportInstanceSyncType<InvocationReportingType> {
                return try importInstanceSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ImportInstanceResult.__default
    }

    /**
     Invokes the ImportKeyPair operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ImportKeyPairRequest object being passed to this operation.
         - completion: The ImportKeyPairResult object or an error will be passed to this 
           callback when the operation is complete. The ImportKeyPairResult
           object will be validated before being returned to caller.
     */
    public func importKeyPairAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ImportKeyPairRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ImportKeyPairResult, HTTPClientError>) -> ()) throws {
        if let importKeyPairAsyncOverrideNonOptional = importKeyPairAsyncOverride {
            if let importKeyPairAsyncOverrideTyped = importKeyPairAsyncOverrideNonOptional
                    as? ImportKeyPairAsyncType<InvocationReportingType> {
                return try importKeyPairAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ImportKeyPairResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ImportKeyPair operation waiting for the response before returning.

     - Parameters:
         - input: The validated ImportKeyPairRequest object being passed to this operation.
     - Returns: The ImportKeyPairResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func importKeyPairSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ImportKeyPairRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ImportKeyPairResult {
        if let importKeyPairSyncOverrideNonOptional = importKeyPairSyncOverride {
            if let importKeyPairSyncOverrideTyped = importKeyPairSyncOverrideNonOptional
                    as? ImportKeyPairSyncType<InvocationReportingType> {
                return try importKeyPairSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ImportKeyPairResult.__default
    }

    /**
     Invokes the ImportSnapshot operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ImportSnapshotRequest object being passed to this operation.
         - completion: The ImportSnapshotResult object or an error will be passed to this 
           callback when the operation is complete. The ImportSnapshotResult
           object will be validated before being returned to caller.
     */
    public func importSnapshotAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ImportSnapshotRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ImportSnapshotResult, HTTPClientError>) -> ()) throws {
        if let importSnapshotAsyncOverrideNonOptional = importSnapshotAsyncOverride {
            if let importSnapshotAsyncOverrideTyped = importSnapshotAsyncOverrideNonOptional
                    as? ImportSnapshotAsyncType<InvocationReportingType> {
                return try importSnapshotAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ImportSnapshotResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ImportSnapshot operation waiting for the response before returning.

     - Parameters:
         - input: The validated ImportSnapshotRequest object being passed to this operation.
     - Returns: The ImportSnapshotResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func importSnapshotSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ImportSnapshotRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ImportSnapshotResult {
        if let importSnapshotSyncOverrideNonOptional = importSnapshotSyncOverride {
            if let importSnapshotSyncOverrideTyped = importSnapshotSyncOverrideNonOptional
                    as? ImportSnapshotSyncType<InvocationReportingType> {
                return try importSnapshotSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ImportSnapshotResult.__default
    }

    /**
     Invokes the ImportVolume operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ImportVolumeRequest object being passed to this operation.
         - completion: The ImportVolumeResult object or an error will be passed to this 
           callback when the operation is complete. The ImportVolumeResult
           object will be validated before being returned to caller.
     */
    public func importVolumeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ImportVolumeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ImportVolumeResult, HTTPClientError>) -> ()) throws {
        if let importVolumeAsyncOverrideNonOptional = importVolumeAsyncOverride {
            if let importVolumeAsyncOverrideTyped = importVolumeAsyncOverrideNonOptional
                    as? ImportVolumeAsyncType<InvocationReportingType> {
                return try importVolumeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ImportVolumeResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ImportVolume operation waiting for the response before returning.

     - Parameters:
         - input: The validated ImportVolumeRequest object being passed to this operation.
     - Returns: The ImportVolumeResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func importVolumeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ImportVolumeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ImportVolumeResult {
        if let importVolumeSyncOverrideNonOptional = importVolumeSyncOverride {
            if let importVolumeSyncOverrideTyped = importVolumeSyncOverrideNonOptional
                    as? ImportVolumeSyncType<InvocationReportingType> {
                return try importVolumeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ImportVolumeResult.__default
    }

    /**
     Invokes the ModifyCapacityReservation operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyCapacityReservationRequest object being passed to this operation.
         - completion: The ModifyCapacityReservationResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyCapacityReservationResult
           object will be validated before being returned to caller.
     */
    public func modifyCapacityReservationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyCapacityReservationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyCapacityReservationResult, HTTPClientError>) -> ()) throws {
        if let modifyCapacityReservationAsyncOverrideNonOptional = modifyCapacityReservationAsyncOverride {
            if let modifyCapacityReservationAsyncOverrideTyped = modifyCapacityReservationAsyncOverrideNonOptional
                    as? ModifyCapacityReservationAsyncType<InvocationReportingType> {
                return try modifyCapacityReservationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyCapacityReservationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyCapacityReservation operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyCapacityReservationRequest object being passed to this operation.
     - Returns: The ModifyCapacityReservationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyCapacityReservationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyCapacityReservationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyCapacityReservationResult {
        if let modifyCapacityReservationSyncOverrideNonOptional = modifyCapacityReservationSyncOverride {
            if let modifyCapacityReservationSyncOverrideTyped = modifyCapacityReservationSyncOverrideNonOptional
                    as? ModifyCapacityReservationSyncType<InvocationReportingType> {
                return try modifyCapacityReservationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyCapacityReservationResult.__default
    }

    /**
     Invokes the ModifyClientVpnEndpoint operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyClientVpnEndpointRequest object being passed to this operation.
         - completion: The ModifyClientVpnEndpointResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyClientVpnEndpointResult
           object will be validated before being returned to caller.
     */
    public func modifyClientVpnEndpointAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyClientVpnEndpointRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyClientVpnEndpointResult, HTTPClientError>) -> ()) throws {
        if let modifyClientVpnEndpointAsyncOverrideNonOptional = modifyClientVpnEndpointAsyncOverride {
            if let modifyClientVpnEndpointAsyncOverrideTyped = modifyClientVpnEndpointAsyncOverrideNonOptional
                    as? ModifyClientVpnEndpointAsyncType<InvocationReportingType> {
                return try modifyClientVpnEndpointAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyClientVpnEndpointResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyClientVpnEndpoint operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyClientVpnEndpointRequest object being passed to this operation.
     - Returns: The ModifyClientVpnEndpointResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyClientVpnEndpointSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyClientVpnEndpointRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyClientVpnEndpointResult {
        if let modifyClientVpnEndpointSyncOverrideNonOptional = modifyClientVpnEndpointSyncOverride {
            if let modifyClientVpnEndpointSyncOverrideTyped = modifyClientVpnEndpointSyncOverrideNonOptional
                    as? ModifyClientVpnEndpointSyncType<InvocationReportingType> {
                return try modifyClientVpnEndpointSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyClientVpnEndpointResult.__default
    }

    /**
     Invokes the ModifyDefaultCreditSpecification operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyDefaultCreditSpecificationRequest object being passed to this operation.
         - completion: The ModifyDefaultCreditSpecificationResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyDefaultCreditSpecificationResult
           object will be validated before being returned to caller.
     */
    public func modifyDefaultCreditSpecificationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyDefaultCreditSpecificationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyDefaultCreditSpecificationResult, HTTPClientError>) -> ()) throws {
        if let modifyDefaultCreditSpecificationAsyncOverrideNonOptional = modifyDefaultCreditSpecificationAsyncOverride {
            if let modifyDefaultCreditSpecificationAsyncOverrideTyped = modifyDefaultCreditSpecificationAsyncOverrideNonOptional
                    as? ModifyDefaultCreditSpecificationAsyncType<InvocationReportingType> {
                return try modifyDefaultCreditSpecificationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyDefaultCreditSpecificationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyDefaultCreditSpecification operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyDefaultCreditSpecificationRequest object being passed to this operation.
     - Returns: The ModifyDefaultCreditSpecificationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyDefaultCreditSpecificationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyDefaultCreditSpecificationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyDefaultCreditSpecificationResult {
        if let modifyDefaultCreditSpecificationSyncOverrideNonOptional = modifyDefaultCreditSpecificationSyncOverride {
            if let modifyDefaultCreditSpecificationSyncOverrideTyped = modifyDefaultCreditSpecificationSyncOverrideNonOptional
                    as? ModifyDefaultCreditSpecificationSyncType<InvocationReportingType> {
                return try modifyDefaultCreditSpecificationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyDefaultCreditSpecificationResult.__default
    }

    /**
     Invokes the ModifyEbsDefaultKmsKeyId operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyEbsDefaultKmsKeyIdRequest object being passed to this operation.
         - completion: The ModifyEbsDefaultKmsKeyIdResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyEbsDefaultKmsKeyIdResult
           object will be validated before being returned to caller.
     */
    public func modifyEbsDefaultKmsKeyIdAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyEbsDefaultKmsKeyIdRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyEbsDefaultKmsKeyIdResult, HTTPClientError>) -> ()) throws {
        if let modifyEbsDefaultKmsKeyIdAsyncOverrideNonOptional = modifyEbsDefaultKmsKeyIdAsyncOverride {
            if let modifyEbsDefaultKmsKeyIdAsyncOverrideTyped = modifyEbsDefaultKmsKeyIdAsyncOverrideNonOptional
                    as? ModifyEbsDefaultKmsKeyIdAsyncType<InvocationReportingType> {
                return try modifyEbsDefaultKmsKeyIdAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyEbsDefaultKmsKeyIdResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyEbsDefaultKmsKeyId operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyEbsDefaultKmsKeyIdRequest object being passed to this operation.
     - Returns: The ModifyEbsDefaultKmsKeyIdResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyEbsDefaultKmsKeyIdSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyEbsDefaultKmsKeyIdRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyEbsDefaultKmsKeyIdResult {
        if let modifyEbsDefaultKmsKeyIdSyncOverrideNonOptional = modifyEbsDefaultKmsKeyIdSyncOverride {
            if let modifyEbsDefaultKmsKeyIdSyncOverrideTyped = modifyEbsDefaultKmsKeyIdSyncOverrideNonOptional
                    as? ModifyEbsDefaultKmsKeyIdSyncType<InvocationReportingType> {
                return try modifyEbsDefaultKmsKeyIdSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyEbsDefaultKmsKeyIdResult.__default
    }

    /**
     Invokes the ModifyFleet operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyFleetRequest object being passed to this operation.
         - completion: The ModifyFleetResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyFleetResult
           object will be validated before being returned to caller.
     */
    public func modifyFleetAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyFleetRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyFleetResult, HTTPClientError>) -> ()) throws {
        if let modifyFleetAsyncOverrideNonOptional = modifyFleetAsyncOverride {
            if let modifyFleetAsyncOverrideTyped = modifyFleetAsyncOverrideNonOptional
                    as? ModifyFleetAsyncType<InvocationReportingType> {
                return try modifyFleetAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyFleetResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyFleet operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyFleetRequest object being passed to this operation.
     - Returns: The ModifyFleetResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyFleetSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyFleetRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyFleetResult {
        if let modifyFleetSyncOverrideNonOptional = modifyFleetSyncOverride {
            if let modifyFleetSyncOverrideTyped = modifyFleetSyncOverrideNonOptional
                    as? ModifyFleetSyncType<InvocationReportingType> {
                return try modifyFleetSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyFleetResult.__default
    }

    /**
     Invokes the ModifyFpgaImageAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyFpgaImageAttributeRequest object being passed to this operation.
         - completion: The ModifyFpgaImageAttributeResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyFpgaImageAttributeResult
           object will be validated before being returned to caller.
     */
    public func modifyFpgaImageAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyFpgaImageAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyFpgaImageAttributeResult, HTTPClientError>) -> ()) throws {
        if let modifyFpgaImageAttributeAsyncOverrideNonOptional = modifyFpgaImageAttributeAsyncOverride {
            if let modifyFpgaImageAttributeAsyncOverrideTyped = modifyFpgaImageAttributeAsyncOverrideNonOptional
                    as? ModifyFpgaImageAttributeAsyncType<InvocationReportingType> {
                return try modifyFpgaImageAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyFpgaImageAttributeResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyFpgaImageAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyFpgaImageAttributeRequest object being passed to this operation.
     - Returns: The ModifyFpgaImageAttributeResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyFpgaImageAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyFpgaImageAttributeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyFpgaImageAttributeResult {
        if let modifyFpgaImageAttributeSyncOverrideNonOptional = modifyFpgaImageAttributeSyncOverride {
            if let modifyFpgaImageAttributeSyncOverrideTyped = modifyFpgaImageAttributeSyncOverrideNonOptional
                    as? ModifyFpgaImageAttributeSyncType<InvocationReportingType> {
                return try modifyFpgaImageAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyFpgaImageAttributeResult.__default
    }

    /**
     Invokes the ModifyHosts operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyHostsRequest object being passed to this operation.
         - completion: The ModifyHostsResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyHostsResult
           object will be validated before being returned to caller.
     */
    public func modifyHostsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyHostsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyHostsResult, HTTPClientError>) -> ()) throws {
        if let modifyHostsAsyncOverrideNonOptional = modifyHostsAsyncOverride {
            if let modifyHostsAsyncOverrideTyped = modifyHostsAsyncOverrideNonOptional
                    as? ModifyHostsAsyncType<InvocationReportingType> {
                return try modifyHostsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyHostsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyHosts operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyHostsRequest object being passed to this operation.
     - Returns: The ModifyHostsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyHostsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyHostsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyHostsResult {
        if let modifyHostsSyncOverrideNonOptional = modifyHostsSyncOverride {
            if let modifyHostsSyncOverrideTyped = modifyHostsSyncOverrideNonOptional
                    as? ModifyHostsSyncType<InvocationReportingType> {
                return try modifyHostsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyHostsResult.__default
    }

    /**
     Invokes the ModifyIdFormat operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyIdFormatRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func modifyIdFormatAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyIdFormatRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let modifyIdFormatAsyncOverrideNonOptional = modifyIdFormatAsyncOverride {
            if let modifyIdFormatAsyncOverrideTyped = modifyIdFormatAsyncOverrideNonOptional
                    as? ModifyIdFormatAsyncType<InvocationReportingType> {
                return try modifyIdFormatAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ModifyIdFormat operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyIdFormatRequest object being passed to this operation.
     */
    public func modifyIdFormatSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyIdFormatRequest,
            reporting: InvocationReportingType) throws {
        if let modifyIdFormatSyncOverrideNonOptional = modifyIdFormatSyncOverride {
            if let modifyIdFormatSyncOverrideTyped = modifyIdFormatSyncOverrideNonOptional
                    as? ModifyIdFormatSyncType<InvocationReportingType> {
                return try modifyIdFormatSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ModifyIdentityIdFormat operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyIdentityIdFormatRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func modifyIdentityIdFormatAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyIdentityIdFormatRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let modifyIdentityIdFormatAsyncOverrideNonOptional = modifyIdentityIdFormatAsyncOverride {
            if let modifyIdentityIdFormatAsyncOverrideTyped = modifyIdentityIdFormatAsyncOverrideNonOptional
                    as? ModifyIdentityIdFormatAsyncType<InvocationReportingType> {
                return try modifyIdentityIdFormatAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ModifyIdentityIdFormat operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyIdentityIdFormatRequest object being passed to this operation.
     */
    public func modifyIdentityIdFormatSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyIdentityIdFormatRequest,
            reporting: InvocationReportingType) throws {
        if let modifyIdentityIdFormatSyncOverrideNonOptional = modifyIdentityIdFormatSyncOverride {
            if let modifyIdentityIdFormatSyncOverrideTyped = modifyIdentityIdFormatSyncOverrideNonOptional
                    as? ModifyIdentityIdFormatSyncType<InvocationReportingType> {
                return try modifyIdentityIdFormatSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ModifyImageAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyImageAttributeRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func modifyImageAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyImageAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let modifyImageAttributeAsyncOverrideNonOptional = modifyImageAttributeAsyncOverride {
            if let modifyImageAttributeAsyncOverrideTyped = modifyImageAttributeAsyncOverrideNonOptional
                    as? ModifyImageAttributeAsyncType<InvocationReportingType> {
                return try modifyImageAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ModifyImageAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyImageAttributeRequest object being passed to this operation.
     */
    public func modifyImageAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyImageAttributeRequest,
            reporting: InvocationReportingType) throws {
        if let modifyImageAttributeSyncOverrideNonOptional = modifyImageAttributeSyncOverride {
            if let modifyImageAttributeSyncOverrideTyped = modifyImageAttributeSyncOverrideNonOptional
                    as? ModifyImageAttributeSyncType<InvocationReportingType> {
                return try modifyImageAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ModifyInstanceAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyInstanceAttributeRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func modifyInstanceAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyInstanceAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let modifyInstanceAttributeAsyncOverrideNonOptional = modifyInstanceAttributeAsyncOverride {
            if let modifyInstanceAttributeAsyncOverrideTyped = modifyInstanceAttributeAsyncOverrideNonOptional
                    as? ModifyInstanceAttributeAsyncType<InvocationReportingType> {
                return try modifyInstanceAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ModifyInstanceAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyInstanceAttributeRequest object being passed to this operation.
     */
    public func modifyInstanceAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyInstanceAttributeRequest,
            reporting: InvocationReportingType) throws {
        if let modifyInstanceAttributeSyncOverrideNonOptional = modifyInstanceAttributeSyncOverride {
            if let modifyInstanceAttributeSyncOverrideTyped = modifyInstanceAttributeSyncOverrideNonOptional
                    as? ModifyInstanceAttributeSyncType<InvocationReportingType> {
                return try modifyInstanceAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ModifyInstanceCapacityReservationAttributes operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyInstanceCapacityReservationAttributesRequest object being passed to this operation.
         - completion: The ModifyInstanceCapacityReservationAttributesResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyInstanceCapacityReservationAttributesResult
           object will be validated before being returned to caller.
     */
    public func modifyInstanceCapacityReservationAttributesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyInstanceCapacityReservationAttributesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyInstanceCapacityReservationAttributesResult, HTTPClientError>) -> ()) throws {
        if let modifyInstanceCapacityReservationAttributesAsyncOverrideNonOptional = modifyInstanceCapacityReservationAttributesAsyncOverride {
            if let modifyInstanceCapacityReservationAttributesAsyncOverrideTyped = modifyInstanceCapacityReservationAttributesAsyncOverrideNonOptional
                    as? ModifyInstanceCapacityReservationAttributesAsyncType<InvocationReportingType> {
                return try modifyInstanceCapacityReservationAttributesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyInstanceCapacityReservationAttributesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyInstanceCapacityReservationAttributes operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyInstanceCapacityReservationAttributesRequest object being passed to this operation.
     - Returns: The ModifyInstanceCapacityReservationAttributesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyInstanceCapacityReservationAttributesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyInstanceCapacityReservationAttributesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyInstanceCapacityReservationAttributesResult {
        if let modifyInstanceCapacityReservationAttributesSyncOverrideNonOptional = modifyInstanceCapacityReservationAttributesSyncOverride {
            if let modifyInstanceCapacityReservationAttributesSyncOverrideTyped = modifyInstanceCapacityReservationAttributesSyncOverrideNonOptional
                    as? ModifyInstanceCapacityReservationAttributesSyncType<InvocationReportingType> {
                return try modifyInstanceCapacityReservationAttributesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyInstanceCapacityReservationAttributesResult.__default
    }

    /**
     Invokes the ModifyInstanceCreditSpecification operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyInstanceCreditSpecificationRequest object being passed to this operation.
         - completion: The ModifyInstanceCreditSpecificationResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyInstanceCreditSpecificationResult
           object will be validated before being returned to caller.
     */
    public func modifyInstanceCreditSpecificationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyInstanceCreditSpecificationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyInstanceCreditSpecificationResult, HTTPClientError>) -> ()) throws {
        if let modifyInstanceCreditSpecificationAsyncOverrideNonOptional = modifyInstanceCreditSpecificationAsyncOverride {
            if let modifyInstanceCreditSpecificationAsyncOverrideTyped = modifyInstanceCreditSpecificationAsyncOverrideNonOptional
                    as? ModifyInstanceCreditSpecificationAsyncType<InvocationReportingType> {
                return try modifyInstanceCreditSpecificationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyInstanceCreditSpecificationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyInstanceCreditSpecification operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyInstanceCreditSpecificationRequest object being passed to this operation.
     - Returns: The ModifyInstanceCreditSpecificationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyInstanceCreditSpecificationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyInstanceCreditSpecificationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyInstanceCreditSpecificationResult {
        if let modifyInstanceCreditSpecificationSyncOverrideNonOptional = modifyInstanceCreditSpecificationSyncOverride {
            if let modifyInstanceCreditSpecificationSyncOverrideTyped = modifyInstanceCreditSpecificationSyncOverrideNonOptional
                    as? ModifyInstanceCreditSpecificationSyncType<InvocationReportingType> {
                return try modifyInstanceCreditSpecificationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyInstanceCreditSpecificationResult.__default
    }

    /**
     Invokes the ModifyInstanceEventStartTime operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyInstanceEventStartTimeRequest object being passed to this operation.
         - completion: The ModifyInstanceEventStartTimeResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyInstanceEventStartTimeResult
           object will be validated before being returned to caller.
     */
    public func modifyInstanceEventStartTimeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyInstanceEventStartTimeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyInstanceEventStartTimeResult, HTTPClientError>) -> ()) throws {
        if let modifyInstanceEventStartTimeAsyncOverrideNonOptional = modifyInstanceEventStartTimeAsyncOverride {
            if let modifyInstanceEventStartTimeAsyncOverrideTyped = modifyInstanceEventStartTimeAsyncOverrideNonOptional
                    as? ModifyInstanceEventStartTimeAsyncType<InvocationReportingType> {
                return try modifyInstanceEventStartTimeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyInstanceEventStartTimeResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyInstanceEventStartTime operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyInstanceEventStartTimeRequest object being passed to this operation.
     - Returns: The ModifyInstanceEventStartTimeResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyInstanceEventStartTimeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyInstanceEventStartTimeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyInstanceEventStartTimeResult {
        if let modifyInstanceEventStartTimeSyncOverrideNonOptional = modifyInstanceEventStartTimeSyncOverride {
            if let modifyInstanceEventStartTimeSyncOverrideTyped = modifyInstanceEventStartTimeSyncOverrideNonOptional
                    as? ModifyInstanceEventStartTimeSyncType<InvocationReportingType> {
                return try modifyInstanceEventStartTimeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyInstanceEventStartTimeResult.__default
    }

    /**
     Invokes the ModifyInstanceMetadataOptions operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyInstanceMetadataOptionsRequest object being passed to this operation.
         - completion: The ModifyInstanceMetadataOptionsResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyInstanceMetadataOptionsResult
           object will be validated before being returned to caller.
     */
    public func modifyInstanceMetadataOptionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyInstanceMetadataOptionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyInstanceMetadataOptionsResult, HTTPClientError>) -> ()) throws {
        if let modifyInstanceMetadataOptionsAsyncOverrideNonOptional = modifyInstanceMetadataOptionsAsyncOverride {
            if let modifyInstanceMetadataOptionsAsyncOverrideTyped = modifyInstanceMetadataOptionsAsyncOverrideNonOptional
                    as? ModifyInstanceMetadataOptionsAsyncType<InvocationReportingType> {
                return try modifyInstanceMetadataOptionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyInstanceMetadataOptionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyInstanceMetadataOptions operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyInstanceMetadataOptionsRequest object being passed to this operation.
     - Returns: The ModifyInstanceMetadataOptionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyInstanceMetadataOptionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyInstanceMetadataOptionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyInstanceMetadataOptionsResult {
        if let modifyInstanceMetadataOptionsSyncOverrideNonOptional = modifyInstanceMetadataOptionsSyncOverride {
            if let modifyInstanceMetadataOptionsSyncOverrideTyped = modifyInstanceMetadataOptionsSyncOverrideNonOptional
                    as? ModifyInstanceMetadataOptionsSyncType<InvocationReportingType> {
                return try modifyInstanceMetadataOptionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyInstanceMetadataOptionsResult.__default
    }

    /**
     Invokes the ModifyInstancePlacement operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyInstancePlacementRequest object being passed to this operation.
         - completion: The ModifyInstancePlacementResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyInstancePlacementResult
           object will be validated before being returned to caller.
     */
    public func modifyInstancePlacementAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyInstancePlacementRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyInstancePlacementResult, HTTPClientError>) -> ()) throws {
        if let modifyInstancePlacementAsyncOverrideNonOptional = modifyInstancePlacementAsyncOverride {
            if let modifyInstancePlacementAsyncOverrideTyped = modifyInstancePlacementAsyncOverrideNonOptional
                    as? ModifyInstancePlacementAsyncType<InvocationReportingType> {
                return try modifyInstancePlacementAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyInstancePlacementResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyInstancePlacement operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyInstancePlacementRequest object being passed to this operation.
     - Returns: The ModifyInstancePlacementResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyInstancePlacementSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyInstancePlacementRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyInstancePlacementResult {
        if let modifyInstancePlacementSyncOverrideNonOptional = modifyInstancePlacementSyncOverride {
            if let modifyInstancePlacementSyncOverrideTyped = modifyInstancePlacementSyncOverrideNonOptional
                    as? ModifyInstancePlacementSyncType<InvocationReportingType> {
                return try modifyInstancePlacementSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyInstancePlacementResult.__default
    }

    /**
     Invokes the ModifyLaunchTemplate operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyLaunchTemplateRequest object being passed to this operation.
         - completion: The ModifyLaunchTemplateResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyLaunchTemplateResult
           object will be validated before being returned to caller.
     */
    public func modifyLaunchTemplateAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyLaunchTemplateRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyLaunchTemplateResult, HTTPClientError>) -> ()) throws {
        if let modifyLaunchTemplateAsyncOverrideNonOptional = modifyLaunchTemplateAsyncOverride {
            if let modifyLaunchTemplateAsyncOverrideTyped = modifyLaunchTemplateAsyncOverrideNonOptional
                    as? ModifyLaunchTemplateAsyncType<InvocationReportingType> {
                return try modifyLaunchTemplateAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyLaunchTemplateResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyLaunchTemplate operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyLaunchTemplateRequest object being passed to this operation.
     - Returns: The ModifyLaunchTemplateResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyLaunchTemplateSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyLaunchTemplateRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyLaunchTemplateResult {
        if let modifyLaunchTemplateSyncOverrideNonOptional = modifyLaunchTemplateSyncOverride {
            if let modifyLaunchTemplateSyncOverrideTyped = modifyLaunchTemplateSyncOverrideNonOptional
                    as? ModifyLaunchTemplateSyncType<InvocationReportingType> {
                return try modifyLaunchTemplateSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyLaunchTemplateResult.__default
    }

    /**
     Invokes the ModifyNetworkInterfaceAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyNetworkInterfaceAttributeRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func modifyNetworkInterfaceAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyNetworkInterfaceAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let modifyNetworkInterfaceAttributeAsyncOverrideNonOptional = modifyNetworkInterfaceAttributeAsyncOverride {
            if let modifyNetworkInterfaceAttributeAsyncOverrideTyped = modifyNetworkInterfaceAttributeAsyncOverrideNonOptional
                    as? ModifyNetworkInterfaceAttributeAsyncType<InvocationReportingType> {
                return try modifyNetworkInterfaceAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ModifyNetworkInterfaceAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyNetworkInterfaceAttributeRequest object being passed to this operation.
     */
    public func modifyNetworkInterfaceAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyNetworkInterfaceAttributeRequest,
            reporting: InvocationReportingType) throws {
        if let modifyNetworkInterfaceAttributeSyncOverrideNonOptional = modifyNetworkInterfaceAttributeSyncOverride {
            if let modifyNetworkInterfaceAttributeSyncOverrideTyped = modifyNetworkInterfaceAttributeSyncOverrideNonOptional
                    as? ModifyNetworkInterfaceAttributeSyncType<InvocationReportingType> {
                return try modifyNetworkInterfaceAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ModifyReservedInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyReservedInstancesRequest object being passed to this operation.
         - completion: The ModifyReservedInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyReservedInstancesResult
           object will be validated before being returned to caller.
     */
    public func modifyReservedInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyReservedInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyReservedInstancesResult, HTTPClientError>) -> ()) throws {
        if let modifyReservedInstancesAsyncOverrideNonOptional = modifyReservedInstancesAsyncOverride {
            if let modifyReservedInstancesAsyncOverrideTyped = modifyReservedInstancesAsyncOverrideNonOptional
                    as? ModifyReservedInstancesAsyncType<InvocationReportingType> {
                return try modifyReservedInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyReservedInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyReservedInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyReservedInstancesRequest object being passed to this operation.
     - Returns: The ModifyReservedInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyReservedInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyReservedInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyReservedInstancesResult {
        if let modifyReservedInstancesSyncOverrideNonOptional = modifyReservedInstancesSyncOverride {
            if let modifyReservedInstancesSyncOverrideTyped = modifyReservedInstancesSyncOverrideNonOptional
                    as? ModifyReservedInstancesSyncType<InvocationReportingType> {
                return try modifyReservedInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyReservedInstancesResult.__default
    }

    /**
     Invokes the ModifySnapshotAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifySnapshotAttributeRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func modifySnapshotAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifySnapshotAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let modifySnapshotAttributeAsyncOverrideNonOptional = modifySnapshotAttributeAsyncOverride {
            if let modifySnapshotAttributeAsyncOverrideTyped = modifySnapshotAttributeAsyncOverrideNonOptional
                    as? ModifySnapshotAttributeAsyncType<InvocationReportingType> {
                return try modifySnapshotAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ModifySnapshotAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifySnapshotAttributeRequest object being passed to this operation.
     */
    public func modifySnapshotAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifySnapshotAttributeRequest,
            reporting: InvocationReportingType) throws {
        if let modifySnapshotAttributeSyncOverrideNonOptional = modifySnapshotAttributeSyncOverride {
            if let modifySnapshotAttributeSyncOverrideTyped = modifySnapshotAttributeSyncOverrideNonOptional
                    as? ModifySnapshotAttributeSyncType<InvocationReportingType> {
                return try modifySnapshotAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ModifySpotFleetRequest operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifySpotFleetRequestRequest object being passed to this operation.
         - completion: The ModifySpotFleetRequestResponse object or an error will be passed to this 
           callback when the operation is complete. The ModifySpotFleetRequestResponse
           object will be validated before being returned to caller.
     */
    public func modifySpotFleetRequestAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifySpotFleetRequestRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifySpotFleetRequestResponse, HTTPClientError>) -> ()) throws {
        if let modifySpotFleetRequestAsyncOverrideNonOptional = modifySpotFleetRequestAsyncOverride {
            if let modifySpotFleetRequestAsyncOverrideTyped = modifySpotFleetRequestAsyncOverrideNonOptional
                    as? ModifySpotFleetRequestAsyncType<InvocationReportingType> {
                return try modifySpotFleetRequestAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifySpotFleetRequestResponse.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifySpotFleetRequest operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifySpotFleetRequestRequest object being passed to this operation.
     - Returns: The ModifySpotFleetRequestResponse object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifySpotFleetRequestSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifySpotFleetRequestRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifySpotFleetRequestResponse {
        if let modifySpotFleetRequestSyncOverrideNonOptional = modifySpotFleetRequestSyncOverride {
            if let modifySpotFleetRequestSyncOverrideTyped = modifySpotFleetRequestSyncOverrideNonOptional
                    as? ModifySpotFleetRequestSyncType<InvocationReportingType> {
                return try modifySpotFleetRequestSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifySpotFleetRequestResponse.__default
    }

    /**
     Invokes the ModifySubnetAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifySubnetAttributeRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func modifySubnetAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifySubnetAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let modifySubnetAttributeAsyncOverrideNonOptional = modifySubnetAttributeAsyncOverride {
            if let modifySubnetAttributeAsyncOverrideTyped = modifySubnetAttributeAsyncOverrideNonOptional
                    as? ModifySubnetAttributeAsyncType<InvocationReportingType> {
                return try modifySubnetAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ModifySubnetAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifySubnetAttributeRequest object being passed to this operation.
     */
    public func modifySubnetAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifySubnetAttributeRequest,
            reporting: InvocationReportingType) throws {
        if let modifySubnetAttributeSyncOverrideNonOptional = modifySubnetAttributeSyncOverride {
            if let modifySubnetAttributeSyncOverrideTyped = modifySubnetAttributeSyncOverrideNonOptional
                    as? ModifySubnetAttributeSyncType<InvocationReportingType> {
                return try modifySubnetAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ModifyTrafficMirrorFilterNetworkServices operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyTrafficMirrorFilterNetworkServicesRequest object being passed to this operation.
         - completion: The ModifyTrafficMirrorFilterNetworkServicesResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyTrafficMirrorFilterNetworkServicesResult
           object will be validated before being returned to caller.
     */
    public func modifyTrafficMirrorFilterNetworkServicesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyTrafficMirrorFilterNetworkServicesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyTrafficMirrorFilterNetworkServicesResult, HTTPClientError>) -> ()) throws {
        if let modifyTrafficMirrorFilterNetworkServicesAsyncOverrideNonOptional = modifyTrafficMirrorFilterNetworkServicesAsyncOverride {
            if let modifyTrafficMirrorFilterNetworkServicesAsyncOverrideTyped = modifyTrafficMirrorFilterNetworkServicesAsyncOverrideNonOptional
                    as? ModifyTrafficMirrorFilterNetworkServicesAsyncType<InvocationReportingType> {
                return try modifyTrafficMirrorFilterNetworkServicesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyTrafficMirrorFilterNetworkServicesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyTrafficMirrorFilterNetworkServices operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyTrafficMirrorFilterNetworkServicesRequest object being passed to this operation.
     - Returns: The ModifyTrafficMirrorFilterNetworkServicesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyTrafficMirrorFilterNetworkServicesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyTrafficMirrorFilterNetworkServicesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyTrafficMirrorFilterNetworkServicesResult {
        if let modifyTrafficMirrorFilterNetworkServicesSyncOverrideNonOptional = modifyTrafficMirrorFilterNetworkServicesSyncOverride {
            if let modifyTrafficMirrorFilterNetworkServicesSyncOverrideTyped = modifyTrafficMirrorFilterNetworkServicesSyncOverrideNonOptional
                    as? ModifyTrafficMirrorFilterNetworkServicesSyncType<InvocationReportingType> {
                return try modifyTrafficMirrorFilterNetworkServicesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyTrafficMirrorFilterNetworkServicesResult.__default
    }

    /**
     Invokes the ModifyTrafficMirrorFilterRule operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyTrafficMirrorFilterRuleRequest object being passed to this operation.
         - completion: The ModifyTrafficMirrorFilterRuleResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyTrafficMirrorFilterRuleResult
           object will be validated before being returned to caller.
     */
    public func modifyTrafficMirrorFilterRuleAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyTrafficMirrorFilterRuleRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyTrafficMirrorFilterRuleResult, HTTPClientError>) -> ()) throws {
        if let modifyTrafficMirrorFilterRuleAsyncOverrideNonOptional = modifyTrafficMirrorFilterRuleAsyncOverride {
            if let modifyTrafficMirrorFilterRuleAsyncOverrideTyped = modifyTrafficMirrorFilterRuleAsyncOverrideNonOptional
                    as? ModifyTrafficMirrorFilterRuleAsyncType<InvocationReportingType> {
                return try modifyTrafficMirrorFilterRuleAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyTrafficMirrorFilterRuleResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyTrafficMirrorFilterRule operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyTrafficMirrorFilterRuleRequest object being passed to this operation.
     - Returns: The ModifyTrafficMirrorFilterRuleResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyTrafficMirrorFilterRuleSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyTrafficMirrorFilterRuleRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyTrafficMirrorFilterRuleResult {
        if let modifyTrafficMirrorFilterRuleSyncOverrideNonOptional = modifyTrafficMirrorFilterRuleSyncOverride {
            if let modifyTrafficMirrorFilterRuleSyncOverrideTyped = modifyTrafficMirrorFilterRuleSyncOverrideNonOptional
                    as? ModifyTrafficMirrorFilterRuleSyncType<InvocationReportingType> {
                return try modifyTrafficMirrorFilterRuleSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyTrafficMirrorFilterRuleResult.__default
    }

    /**
     Invokes the ModifyTrafficMirrorSession operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyTrafficMirrorSessionRequest object being passed to this operation.
         - completion: The ModifyTrafficMirrorSessionResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyTrafficMirrorSessionResult
           object will be validated before being returned to caller.
     */
    public func modifyTrafficMirrorSessionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyTrafficMirrorSessionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyTrafficMirrorSessionResult, HTTPClientError>) -> ()) throws {
        if let modifyTrafficMirrorSessionAsyncOverrideNonOptional = modifyTrafficMirrorSessionAsyncOverride {
            if let modifyTrafficMirrorSessionAsyncOverrideTyped = modifyTrafficMirrorSessionAsyncOverrideNonOptional
                    as? ModifyTrafficMirrorSessionAsyncType<InvocationReportingType> {
                return try modifyTrafficMirrorSessionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyTrafficMirrorSessionResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyTrafficMirrorSession operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyTrafficMirrorSessionRequest object being passed to this operation.
     - Returns: The ModifyTrafficMirrorSessionResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyTrafficMirrorSessionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyTrafficMirrorSessionRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyTrafficMirrorSessionResult {
        if let modifyTrafficMirrorSessionSyncOverrideNonOptional = modifyTrafficMirrorSessionSyncOverride {
            if let modifyTrafficMirrorSessionSyncOverrideTyped = modifyTrafficMirrorSessionSyncOverrideNonOptional
                    as? ModifyTrafficMirrorSessionSyncType<InvocationReportingType> {
                return try modifyTrafficMirrorSessionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyTrafficMirrorSessionResult.__default
    }

    /**
     Invokes the ModifyTransitGatewayVpcAttachment operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyTransitGatewayVpcAttachmentRequest object being passed to this operation.
         - completion: The ModifyTransitGatewayVpcAttachmentResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyTransitGatewayVpcAttachmentResult
           object will be validated before being returned to caller.
     */
    public func modifyTransitGatewayVpcAttachmentAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyTransitGatewayVpcAttachmentRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyTransitGatewayVpcAttachmentResult, HTTPClientError>) -> ()) throws {
        if let modifyTransitGatewayVpcAttachmentAsyncOverrideNonOptional = modifyTransitGatewayVpcAttachmentAsyncOverride {
            if let modifyTransitGatewayVpcAttachmentAsyncOverrideTyped = modifyTransitGatewayVpcAttachmentAsyncOverrideNonOptional
                    as? ModifyTransitGatewayVpcAttachmentAsyncType<InvocationReportingType> {
                return try modifyTransitGatewayVpcAttachmentAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyTransitGatewayVpcAttachmentResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyTransitGatewayVpcAttachment operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyTransitGatewayVpcAttachmentRequest object being passed to this operation.
     - Returns: The ModifyTransitGatewayVpcAttachmentResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyTransitGatewayVpcAttachmentSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyTransitGatewayVpcAttachmentRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyTransitGatewayVpcAttachmentResult {
        if let modifyTransitGatewayVpcAttachmentSyncOverrideNonOptional = modifyTransitGatewayVpcAttachmentSyncOverride {
            if let modifyTransitGatewayVpcAttachmentSyncOverrideTyped = modifyTransitGatewayVpcAttachmentSyncOverrideNonOptional
                    as? ModifyTransitGatewayVpcAttachmentSyncType<InvocationReportingType> {
                return try modifyTransitGatewayVpcAttachmentSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyTransitGatewayVpcAttachmentResult.__default
    }

    /**
     Invokes the ModifyVolume operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyVolumeRequest object being passed to this operation.
         - completion: The ModifyVolumeResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyVolumeResult
           object will be validated before being returned to caller.
     */
    public func modifyVolumeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVolumeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyVolumeResult, HTTPClientError>) -> ()) throws {
        if let modifyVolumeAsyncOverrideNonOptional = modifyVolumeAsyncOverride {
            if let modifyVolumeAsyncOverrideTyped = modifyVolumeAsyncOverrideNonOptional
                    as? ModifyVolumeAsyncType<InvocationReportingType> {
                return try modifyVolumeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyVolumeResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyVolume operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyVolumeRequest object being passed to this operation.
     - Returns: The ModifyVolumeResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyVolumeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVolumeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyVolumeResult {
        if let modifyVolumeSyncOverrideNonOptional = modifyVolumeSyncOverride {
            if let modifyVolumeSyncOverrideTyped = modifyVolumeSyncOverrideNonOptional
                    as? ModifyVolumeSyncType<InvocationReportingType> {
                return try modifyVolumeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyVolumeResult.__default
    }

    /**
     Invokes the ModifyVolumeAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyVolumeAttributeRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func modifyVolumeAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVolumeAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let modifyVolumeAttributeAsyncOverrideNonOptional = modifyVolumeAttributeAsyncOverride {
            if let modifyVolumeAttributeAsyncOverrideTyped = modifyVolumeAttributeAsyncOverrideNonOptional
                    as? ModifyVolumeAttributeAsyncType<InvocationReportingType> {
                return try modifyVolumeAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ModifyVolumeAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyVolumeAttributeRequest object being passed to this operation.
     */
    public func modifyVolumeAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVolumeAttributeRequest,
            reporting: InvocationReportingType) throws {
        if let modifyVolumeAttributeSyncOverrideNonOptional = modifyVolumeAttributeSyncOverride {
            if let modifyVolumeAttributeSyncOverrideTyped = modifyVolumeAttributeSyncOverrideNonOptional
                    as? ModifyVolumeAttributeSyncType<InvocationReportingType> {
                return try modifyVolumeAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ModifyVpcAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyVpcAttributeRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func modifyVpcAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpcAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let modifyVpcAttributeAsyncOverrideNonOptional = modifyVpcAttributeAsyncOverride {
            if let modifyVpcAttributeAsyncOverrideTyped = modifyVpcAttributeAsyncOverrideNonOptional
                    as? ModifyVpcAttributeAsyncType<InvocationReportingType> {
                return try modifyVpcAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ModifyVpcAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyVpcAttributeRequest object being passed to this operation.
     */
    public func modifyVpcAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpcAttributeRequest,
            reporting: InvocationReportingType) throws {
        if let modifyVpcAttributeSyncOverrideNonOptional = modifyVpcAttributeSyncOverride {
            if let modifyVpcAttributeSyncOverrideTyped = modifyVpcAttributeSyncOverrideNonOptional
                    as? ModifyVpcAttributeSyncType<InvocationReportingType> {
                return try modifyVpcAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ModifyVpcEndpoint operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyVpcEndpointRequest object being passed to this operation.
         - completion: The ModifyVpcEndpointResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyVpcEndpointResult
           object will be validated before being returned to caller.
     */
    public func modifyVpcEndpointAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpcEndpointRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyVpcEndpointResult, HTTPClientError>) -> ()) throws {
        if let modifyVpcEndpointAsyncOverrideNonOptional = modifyVpcEndpointAsyncOverride {
            if let modifyVpcEndpointAsyncOverrideTyped = modifyVpcEndpointAsyncOverrideNonOptional
                    as? ModifyVpcEndpointAsyncType<InvocationReportingType> {
                return try modifyVpcEndpointAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyVpcEndpointResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyVpcEndpoint operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyVpcEndpointRequest object being passed to this operation.
     - Returns: The ModifyVpcEndpointResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyVpcEndpointSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpcEndpointRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyVpcEndpointResult {
        if let modifyVpcEndpointSyncOverrideNonOptional = modifyVpcEndpointSyncOverride {
            if let modifyVpcEndpointSyncOverrideTyped = modifyVpcEndpointSyncOverrideNonOptional
                    as? ModifyVpcEndpointSyncType<InvocationReportingType> {
                return try modifyVpcEndpointSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyVpcEndpointResult.__default
    }

    /**
     Invokes the ModifyVpcEndpointConnectionNotification operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyVpcEndpointConnectionNotificationRequest object being passed to this operation.
         - completion: The ModifyVpcEndpointConnectionNotificationResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyVpcEndpointConnectionNotificationResult
           object will be validated before being returned to caller.
     */
    public func modifyVpcEndpointConnectionNotificationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpcEndpointConnectionNotificationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyVpcEndpointConnectionNotificationResult, HTTPClientError>) -> ()) throws {
        if let modifyVpcEndpointConnectionNotificationAsyncOverrideNonOptional = modifyVpcEndpointConnectionNotificationAsyncOverride {
            if let modifyVpcEndpointConnectionNotificationAsyncOverrideTyped = modifyVpcEndpointConnectionNotificationAsyncOverrideNonOptional
                    as? ModifyVpcEndpointConnectionNotificationAsyncType<InvocationReportingType> {
                return try modifyVpcEndpointConnectionNotificationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyVpcEndpointConnectionNotificationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyVpcEndpointConnectionNotification operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyVpcEndpointConnectionNotificationRequest object being passed to this operation.
     - Returns: The ModifyVpcEndpointConnectionNotificationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyVpcEndpointConnectionNotificationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpcEndpointConnectionNotificationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyVpcEndpointConnectionNotificationResult {
        if let modifyVpcEndpointConnectionNotificationSyncOverrideNonOptional = modifyVpcEndpointConnectionNotificationSyncOverride {
            if let modifyVpcEndpointConnectionNotificationSyncOverrideTyped = modifyVpcEndpointConnectionNotificationSyncOverrideNonOptional
                    as? ModifyVpcEndpointConnectionNotificationSyncType<InvocationReportingType> {
                return try modifyVpcEndpointConnectionNotificationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyVpcEndpointConnectionNotificationResult.__default
    }

    /**
     Invokes the ModifyVpcEndpointServiceConfiguration operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyVpcEndpointServiceConfigurationRequest object being passed to this operation.
         - completion: The ModifyVpcEndpointServiceConfigurationResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyVpcEndpointServiceConfigurationResult
           object will be validated before being returned to caller.
     */
    public func modifyVpcEndpointServiceConfigurationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpcEndpointServiceConfigurationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyVpcEndpointServiceConfigurationResult, HTTPClientError>) -> ()) throws {
        if let modifyVpcEndpointServiceConfigurationAsyncOverrideNonOptional = modifyVpcEndpointServiceConfigurationAsyncOverride {
            if let modifyVpcEndpointServiceConfigurationAsyncOverrideTyped = modifyVpcEndpointServiceConfigurationAsyncOverrideNonOptional
                    as? ModifyVpcEndpointServiceConfigurationAsyncType<InvocationReportingType> {
                return try modifyVpcEndpointServiceConfigurationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyVpcEndpointServiceConfigurationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyVpcEndpointServiceConfiguration operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyVpcEndpointServiceConfigurationRequest object being passed to this operation.
     - Returns: The ModifyVpcEndpointServiceConfigurationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyVpcEndpointServiceConfigurationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpcEndpointServiceConfigurationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyVpcEndpointServiceConfigurationResult {
        if let modifyVpcEndpointServiceConfigurationSyncOverrideNonOptional = modifyVpcEndpointServiceConfigurationSyncOverride {
            if let modifyVpcEndpointServiceConfigurationSyncOverrideTyped = modifyVpcEndpointServiceConfigurationSyncOverrideNonOptional
                    as? ModifyVpcEndpointServiceConfigurationSyncType<InvocationReportingType> {
                return try modifyVpcEndpointServiceConfigurationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyVpcEndpointServiceConfigurationResult.__default
    }

    /**
     Invokes the ModifyVpcEndpointServicePermissions operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyVpcEndpointServicePermissionsRequest object being passed to this operation.
         - completion: The ModifyVpcEndpointServicePermissionsResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyVpcEndpointServicePermissionsResult
           object will be validated before being returned to caller.
     */
    public func modifyVpcEndpointServicePermissionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpcEndpointServicePermissionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyVpcEndpointServicePermissionsResult, HTTPClientError>) -> ()) throws {
        if let modifyVpcEndpointServicePermissionsAsyncOverrideNonOptional = modifyVpcEndpointServicePermissionsAsyncOverride {
            if let modifyVpcEndpointServicePermissionsAsyncOverrideTyped = modifyVpcEndpointServicePermissionsAsyncOverrideNonOptional
                    as? ModifyVpcEndpointServicePermissionsAsyncType<InvocationReportingType> {
                return try modifyVpcEndpointServicePermissionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyVpcEndpointServicePermissionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyVpcEndpointServicePermissions operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyVpcEndpointServicePermissionsRequest object being passed to this operation.
     - Returns: The ModifyVpcEndpointServicePermissionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyVpcEndpointServicePermissionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpcEndpointServicePermissionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyVpcEndpointServicePermissionsResult {
        if let modifyVpcEndpointServicePermissionsSyncOverrideNonOptional = modifyVpcEndpointServicePermissionsSyncOverride {
            if let modifyVpcEndpointServicePermissionsSyncOverrideTyped = modifyVpcEndpointServicePermissionsSyncOverrideNonOptional
                    as? ModifyVpcEndpointServicePermissionsSyncType<InvocationReportingType> {
                return try modifyVpcEndpointServicePermissionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyVpcEndpointServicePermissionsResult.__default
    }

    /**
     Invokes the ModifyVpcPeeringConnectionOptions operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyVpcPeeringConnectionOptionsRequest object being passed to this operation.
         - completion: The ModifyVpcPeeringConnectionOptionsResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyVpcPeeringConnectionOptionsResult
           object will be validated before being returned to caller.
     */
    public func modifyVpcPeeringConnectionOptionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpcPeeringConnectionOptionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyVpcPeeringConnectionOptionsResult, HTTPClientError>) -> ()) throws {
        if let modifyVpcPeeringConnectionOptionsAsyncOverrideNonOptional = modifyVpcPeeringConnectionOptionsAsyncOverride {
            if let modifyVpcPeeringConnectionOptionsAsyncOverrideTyped = modifyVpcPeeringConnectionOptionsAsyncOverrideNonOptional
                    as? ModifyVpcPeeringConnectionOptionsAsyncType<InvocationReportingType> {
                return try modifyVpcPeeringConnectionOptionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyVpcPeeringConnectionOptionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyVpcPeeringConnectionOptions operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyVpcPeeringConnectionOptionsRequest object being passed to this operation.
     - Returns: The ModifyVpcPeeringConnectionOptionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyVpcPeeringConnectionOptionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpcPeeringConnectionOptionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyVpcPeeringConnectionOptionsResult {
        if let modifyVpcPeeringConnectionOptionsSyncOverrideNonOptional = modifyVpcPeeringConnectionOptionsSyncOverride {
            if let modifyVpcPeeringConnectionOptionsSyncOverrideTyped = modifyVpcPeeringConnectionOptionsSyncOverrideNonOptional
                    as? ModifyVpcPeeringConnectionOptionsSyncType<InvocationReportingType> {
                return try modifyVpcPeeringConnectionOptionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyVpcPeeringConnectionOptionsResult.__default
    }

    /**
     Invokes the ModifyVpcTenancy operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyVpcTenancyRequest object being passed to this operation.
         - completion: The ModifyVpcTenancyResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyVpcTenancyResult
           object will be validated before being returned to caller.
     */
    public func modifyVpcTenancyAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpcTenancyRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyVpcTenancyResult, HTTPClientError>) -> ()) throws {
        if let modifyVpcTenancyAsyncOverrideNonOptional = modifyVpcTenancyAsyncOverride {
            if let modifyVpcTenancyAsyncOverrideTyped = modifyVpcTenancyAsyncOverrideNonOptional
                    as? ModifyVpcTenancyAsyncType<InvocationReportingType> {
                return try modifyVpcTenancyAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyVpcTenancyResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyVpcTenancy operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyVpcTenancyRequest object being passed to this operation.
     - Returns: The ModifyVpcTenancyResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyVpcTenancySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpcTenancyRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyVpcTenancyResult {
        if let modifyVpcTenancySyncOverrideNonOptional = modifyVpcTenancySyncOverride {
            if let modifyVpcTenancySyncOverrideTyped = modifyVpcTenancySyncOverrideNonOptional
                    as? ModifyVpcTenancySyncType<InvocationReportingType> {
                return try modifyVpcTenancySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyVpcTenancyResult.__default
    }

    /**
     Invokes the ModifyVpnConnection operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyVpnConnectionRequest object being passed to this operation.
         - completion: The ModifyVpnConnectionResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyVpnConnectionResult
           object will be validated before being returned to caller.
     */
    public func modifyVpnConnectionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpnConnectionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyVpnConnectionResult, HTTPClientError>) -> ()) throws {
        if let modifyVpnConnectionAsyncOverrideNonOptional = modifyVpnConnectionAsyncOverride {
            if let modifyVpnConnectionAsyncOverrideTyped = modifyVpnConnectionAsyncOverrideNonOptional
                    as? ModifyVpnConnectionAsyncType<InvocationReportingType> {
                return try modifyVpnConnectionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyVpnConnectionResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyVpnConnection operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyVpnConnectionRequest object being passed to this operation.
     - Returns: The ModifyVpnConnectionResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyVpnConnectionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpnConnectionRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyVpnConnectionResult {
        if let modifyVpnConnectionSyncOverrideNonOptional = modifyVpnConnectionSyncOverride {
            if let modifyVpnConnectionSyncOverrideTyped = modifyVpnConnectionSyncOverrideNonOptional
                    as? ModifyVpnConnectionSyncType<InvocationReportingType> {
                return try modifyVpnConnectionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyVpnConnectionResult.__default
    }

    /**
     Invokes the ModifyVpnTunnelCertificate operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyVpnTunnelCertificateRequest object being passed to this operation.
         - completion: The ModifyVpnTunnelCertificateResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyVpnTunnelCertificateResult
           object will be validated before being returned to caller.
     */
    public func modifyVpnTunnelCertificateAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpnTunnelCertificateRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyVpnTunnelCertificateResult, HTTPClientError>) -> ()) throws {
        if let modifyVpnTunnelCertificateAsyncOverrideNonOptional = modifyVpnTunnelCertificateAsyncOverride {
            if let modifyVpnTunnelCertificateAsyncOverrideTyped = modifyVpnTunnelCertificateAsyncOverrideNonOptional
                    as? ModifyVpnTunnelCertificateAsyncType<InvocationReportingType> {
                return try modifyVpnTunnelCertificateAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyVpnTunnelCertificateResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyVpnTunnelCertificate operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyVpnTunnelCertificateRequest object being passed to this operation.
     - Returns: The ModifyVpnTunnelCertificateResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyVpnTunnelCertificateSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpnTunnelCertificateRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyVpnTunnelCertificateResult {
        if let modifyVpnTunnelCertificateSyncOverrideNonOptional = modifyVpnTunnelCertificateSyncOverride {
            if let modifyVpnTunnelCertificateSyncOverrideTyped = modifyVpnTunnelCertificateSyncOverrideNonOptional
                    as? ModifyVpnTunnelCertificateSyncType<InvocationReportingType> {
                return try modifyVpnTunnelCertificateSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyVpnTunnelCertificateResult.__default
    }

    /**
     Invokes the ModifyVpnTunnelOptions operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ModifyVpnTunnelOptionsRequest object being passed to this operation.
         - completion: The ModifyVpnTunnelOptionsResult object or an error will be passed to this 
           callback when the operation is complete. The ModifyVpnTunnelOptionsResult
           object will be validated before being returned to caller.
     */
    public func modifyVpnTunnelOptionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpnTunnelOptionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ModifyVpnTunnelOptionsResult, HTTPClientError>) -> ()) throws {
        if let modifyVpnTunnelOptionsAsyncOverrideNonOptional = modifyVpnTunnelOptionsAsyncOverride {
            if let modifyVpnTunnelOptionsAsyncOverrideTyped = modifyVpnTunnelOptionsAsyncOverrideNonOptional
                    as? ModifyVpnTunnelOptionsAsyncType<InvocationReportingType> {
                return try modifyVpnTunnelOptionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ModifyVpnTunnelOptionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ModifyVpnTunnelOptions operation waiting for the response before returning.

     - Parameters:
         - input: The validated ModifyVpnTunnelOptionsRequest object being passed to this operation.
     - Returns: The ModifyVpnTunnelOptionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func modifyVpnTunnelOptionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ModifyVpnTunnelOptionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ModifyVpnTunnelOptionsResult {
        if let modifyVpnTunnelOptionsSyncOverrideNonOptional = modifyVpnTunnelOptionsSyncOverride {
            if let modifyVpnTunnelOptionsSyncOverrideTyped = modifyVpnTunnelOptionsSyncOverrideNonOptional
                    as? ModifyVpnTunnelOptionsSyncType<InvocationReportingType> {
                return try modifyVpnTunnelOptionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ModifyVpnTunnelOptionsResult.__default
    }

    /**
     Invokes the MonitorInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated MonitorInstancesRequest object being passed to this operation.
         - completion: The MonitorInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The MonitorInstancesResult
           object will be validated before being returned to caller.
     */
    public func monitorInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.MonitorInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.MonitorInstancesResult, HTTPClientError>) -> ()) throws {
        if let monitorInstancesAsyncOverrideNonOptional = monitorInstancesAsyncOverride {
            if let monitorInstancesAsyncOverrideTyped = monitorInstancesAsyncOverrideNonOptional
                    as? MonitorInstancesAsyncType<InvocationReportingType> {
                return try monitorInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = MonitorInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the MonitorInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated MonitorInstancesRequest object being passed to this operation.
     - Returns: The MonitorInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func monitorInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.MonitorInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.MonitorInstancesResult {
        if let monitorInstancesSyncOverrideNonOptional = monitorInstancesSyncOverride {
            if let monitorInstancesSyncOverrideTyped = monitorInstancesSyncOverrideNonOptional
                    as? MonitorInstancesSyncType<InvocationReportingType> {
                return try monitorInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return MonitorInstancesResult.__default
    }

    /**
     Invokes the MoveAddressToVpc operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated MoveAddressToVpcRequest object being passed to this operation.
         - completion: The MoveAddressToVpcResult object or an error will be passed to this 
           callback when the operation is complete. The MoveAddressToVpcResult
           object will be validated before being returned to caller.
     */
    public func moveAddressToVpcAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.MoveAddressToVpcRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.MoveAddressToVpcResult, HTTPClientError>) -> ()) throws {
        if let moveAddressToVpcAsyncOverrideNonOptional = moveAddressToVpcAsyncOverride {
            if let moveAddressToVpcAsyncOverrideTyped = moveAddressToVpcAsyncOverrideNonOptional
                    as? MoveAddressToVpcAsyncType<InvocationReportingType> {
                return try moveAddressToVpcAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = MoveAddressToVpcResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the MoveAddressToVpc operation waiting for the response before returning.

     - Parameters:
         - input: The validated MoveAddressToVpcRequest object being passed to this operation.
     - Returns: The MoveAddressToVpcResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func moveAddressToVpcSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.MoveAddressToVpcRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.MoveAddressToVpcResult {
        if let moveAddressToVpcSyncOverrideNonOptional = moveAddressToVpcSyncOverride {
            if let moveAddressToVpcSyncOverrideTyped = moveAddressToVpcSyncOverrideNonOptional
                    as? MoveAddressToVpcSyncType<InvocationReportingType> {
                return try moveAddressToVpcSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return MoveAddressToVpcResult.__default
    }

    /**
     Invokes the ProvisionByoipCidr operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ProvisionByoipCidrRequest object being passed to this operation.
         - completion: The ProvisionByoipCidrResult object or an error will be passed to this 
           callback when the operation is complete. The ProvisionByoipCidrResult
           object will be validated before being returned to caller.
     */
    public func provisionByoipCidrAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ProvisionByoipCidrRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ProvisionByoipCidrResult, HTTPClientError>) -> ()) throws {
        if let provisionByoipCidrAsyncOverrideNonOptional = provisionByoipCidrAsyncOverride {
            if let provisionByoipCidrAsyncOverrideTyped = provisionByoipCidrAsyncOverrideNonOptional
                    as? ProvisionByoipCidrAsyncType<InvocationReportingType> {
                return try provisionByoipCidrAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ProvisionByoipCidrResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ProvisionByoipCidr operation waiting for the response before returning.

     - Parameters:
         - input: The validated ProvisionByoipCidrRequest object being passed to this operation.
     - Returns: The ProvisionByoipCidrResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func provisionByoipCidrSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ProvisionByoipCidrRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ProvisionByoipCidrResult {
        if let provisionByoipCidrSyncOverrideNonOptional = provisionByoipCidrSyncOverride {
            if let provisionByoipCidrSyncOverrideTyped = provisionByoipCidrSyncOverrideNonOptional
                    as? ProvisionByoipCidrSyncType<InvocationReportingType> {
                return try provisionByoipCidrSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ProvisionByoipCidrResult.__default
    }

    /**
     Invokes the PurchaseHostReservation operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated PurchaseHostReservationRequest object being passed to this operation.
         - completion: The PurchaseHostReservationResult object or an error will be passed to this 
           callback when the operation is complete. The PurchaseHostReservationResult
           object will be validated before being returned to caller.
     */
    public func purchaseHostReservationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.PurchaseHostReservationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.PurchaseHostReservationResult, HTTPClientError>) -> ()) throws {
        if let purchaseHostReservationAsyncOverrideNonOptional = purchaseHostReservationAsyncOverride {
            if let purchaseHostReservationAsyncOverrideTyped = purchaseHostReservationAsyncOverrideNonOptional
                    as? PurchaseHostReservationAsyncType<InvocationReportingType> {
                return try purchaseHostReservationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = PurchaseHostReservationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the PurchaseHostReservation operation waiting for the response before returning.

     - Parameters:
         - input: The validated PurchaseHostReservationRequest object being passed to this operation.
     - Returns: The PurchaseHostReservationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func purchaseHostReservationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.PurchaseHostReservationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.PurchaseHostReservationResult {
        if let purchaseHostReservationSyncOverrideNonOptional = purchaseHostReservationSyncOverride {
            if let purchaseHostReservationSyncOverrideTyped = purchaseHostReservationSyncOverrideNonOptional
                    as? PurchaseHostReservationSyncType<InvocationReportingType> {
                return try purchaseHostReservationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return PurchaseHostReservationResult.__default
    }

    /**
     Invokes the PurchaseReservedInstancesOffering operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated PurchaseReservedInstancesOfferingRequest object being passed to this operation.
         - completion: The PurchaseReservedInstancesOfferingResult object or an error will be passed to this 
           callback when the operation is complete. The PurchaseReservedInstancesOfferingResult
           object will be validated before being returned to caller.
     */
    public func purchaseReservedInstancesOfferingAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.PurchaseReservedInstancesOfferingRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.PurchaseReservedInstancesOfferingResult, HTTPClientError>) -> ()) throws {
        if let purchaseReservedInstancesOfferingAsyncOverrideNonOptional = purchaseReservedInstancesOfferingAsyncOverride {
            if let purchaseReservedInstancesOfferingAsyncOverrideTyped = purchaseReservedInstancesOfferingAsyncOverrideNonOptional
                    as? PurchaseReservedInstancesOfferingAsyncType<InvocationReportingType> {
                return try purchaseReservedInstancesOfferingAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = PurchaseReservedInstancesOfferingResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the PurchaseReservedInstancesOffering operation waiting for the response before returning.

     - Parameters:
         - input: The validated PurchaseReservedInstancesOfferingRequest object being passed to this operation.
     - Returns: The PurchaseReservedInstancesOfferingResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func purchaseReservedInstancesOfferingSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.PurchaseReservedInstancesOfferingRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.PurchaseReservedInstancesOfferingResult {
        if let purchaseReservedInstancesOfferingSyncOverrideNonOptional = purchaseReservedInstancesOfferingSyncOverride {
            if let purchaseReservedInstancesOfferingSyncOverrideTyped = purchaseReservedInstancesOfferingSyncOverrideNonOptional
                    as? PurchaseReservedInstancesOfferingSyncType<InvocationReportingType> {
                return try purchaseReservedInstancesOfferingSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return PurchaseReservedInstancesOfferingResult.__default
    }

    /**
     Invokes the PurchaseScheduledInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated PurchaseScheduledInstancesRequest object being passed to this operation.
         - completion: The PurchaseScheduledInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The PurchaseScheduledInstancesResult
           object will be validated before being returned to caller.
     */
    public func purchaseScheduledInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.PurchaseScheduledInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.PurchaseScheduledInstancesResult, HTTPClientError>) -> ()) throws {
        if let purchaseScheduledInstancesAsyncOverrideNonOptional = purchaseScheduledInstancesAsyncOverride {
            if let purchaseScheduledInstancesAsyncOverrideTyped = purchaseScheduledInstancesAsyncOverrideNonOptional
                    as? PurchaseScheduledInstancesAsyncType<InvocationReportingType> {
                return try purchaseScheduledInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = PurchaseScheduledInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the PurchaseScheduledInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated PurchaseScheduledInstancesRequest object being passed to this operation.
     - Returns: The PurchaseScheduledInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func purchaseScheduledInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.PurchaseScheduledInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.PurchaseScheduledInstancesResult {
        if let purchaseScheduledInstancesSyncOverrideNonOptional = purchaseScheduledInstancesSyncOverride {
            if let purchaseScheduledInstancesSyncOverrideTyped = purchaseScheduledInstancesSyncOverrideNonOptional
                    as? PurchaseScheduledInstancesSyncType<InvocationReportingType> {
                return try purchaseScheduledInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return PurchaseScheduledInstancesResult.__default
    }

    /**
     Invokes the RebootInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RebootInstancesRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func rebootInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RebootInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let rebootInstancesAsyncOverrideNonOptional = rebootInstancesAsyncOverride {
            if let rebootInstancesAsyncOverrideTyped = rebootInstancesAsyncOverrideNonOptional
                    as? RebootInstancesAsyncType<InvocationReportingType> {
                return try rebootInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the RebootInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated RebootInstancesRequest object being passed to this operation.
     */
    public func rebootInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RebootInstancesRequest,
            reporting: InvocationReportingType) throws {
        if let rebootInstancesSyncOverrideNonOptional = rebootInstancesSyncOverride {
            if let rebootInstancesSyncOverrideTyped = rebootInstancesSyncOverrideNonOptional
                    as? RebootInstancesSyncType<InvocationReportingType> {
                return try rebootInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the RegisterImage operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RegisterImageRequest object being passed to this operation.
         - completion: The RegisterImageResult object or an error will be passed to this 
           callback when the operation is complete. The RegisterImageResult
           object will be validated before being returned to caller.
     */
    public func registerImageAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RegisterImageRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.RegisterImageResult, HTTPClientError>) -> ()) throws {
        if let registerImageAsyncOverrideNonOptional = registerImageAsyncOverride {
            if let registerImageAsyncOverrideTyped = registerImageAsyncOverrideNonOptional
                    as? RegisterImageAsyncType<InvocationReportingType> {
                return try registerImageAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = RegisterImageResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the RegisterImage operation waiting for the response before returning.

     - Parameters:
         - input: The validated RegisterImageRequest object being passed to this operation.
     - Returns: The RegisterImageResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func registerImageSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RegisterImageRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.RegisterImageResult {
        if let registerImageSyncOverrideNonOptional = registerImageSyncOverride {
            if let registerImageSyncOverrideTyped = registerImageSyncOverrideNonOptional
                    as? RegisterImageSyncType<InvocationReportingType> {
                return try registerImageSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return RegisterImageResult.__default
    }

    /**
     Invokes the RegisterTransitGatewayMulticastGroupMembers operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RegisterTransitGatewayMulticastGroupMembersRequest object being passed to this operation.
         - completion: The RegisterTransitGatewayMulticastGroupMembersResult object or an error will be passed to this 
           callback when the operation is complete. The RegisterTransitGatewayMulticastGroupMembersResult
           object will be validated before being returned to caller.
     */
    public func registerTransitGatewayMulticastGroupMembersAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RegisterTransitGatewayMulticastGroupMembersRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.RegisterTransitGatewayMulticastGroupMembersResult, HTTPClientError>) -> ()) throws {
        if let registerTransitGatewayMulticastGroupMembersAsyncOverrideNonOptional = registerTransitGatewayMulticastGroupMembersAsyncOverride {
            if let registerTransitGatewayMulticastGroupMembersAsyncOverrideTyped = registerTransitGatewayMulticastGroupMembersAsyncOverrideNonOptional
                    as? RegisterTransitGatewayMulticastGroupMembersAsyncType<InvocationReportingType> {
                return try registerTransitGatewayMulticastGroupMembersAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = RegisterTransitGatewayMulticastGroupMembersResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the RegisterTransitGatewayMulticastGroupMembers operation waiting for the response before returning.

     - Parameters:
         - input: The validated RegisterTransitGatewayMulticastGroupMembersRequest object being passed to this operation.
     - Returns: The RegisterTransitGatewayMulticastGroupMembersResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func registerTransitGatewayMulticastGroupMembersSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RegisterTransitGatewayMulticastGroupMembersRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.RegisterTransitGatewayMulticastGroupMembersResult {
        if let registerTransitGatewayMulticastGroupMembersSyncOverrideNonOptional = registerTransitGatewayMulticastGroupMembersSyncOverride {
            if let registerTransitGatewayMulticastGroupMembersSyncOverrideTyped = registerTransitGatewayMulticastGroupMembersSyncOverrideNonOptional
                    as? RegisterTransitGatewayMulticastGroupMembersSyncType<InvocationReportingType> {
                return try registerTransitGatewayMulticastGroupMembersSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return RegisterTransitGatewayMulticastGroupMembersResult.__default
    }

    /**
     Invokes the RegisterTransitGatewayMulticastGroupSources operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RegisterTransitGatewayMulticastGroupSourcesRequest object being passed to this operation.
         - completion: The RegisterTransitGatewayMulticastGroupSourcesResult object or an error will be passed to this 
           callback when the operation is complete. The RegisterTransitGatewayMulticastGroupSourcesResult
           object will be validated before being returned to caller.
     */
    public func registerTransitGatewayMulticastGroupSourcesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RegisterTransitGatewayMulticastGroupSourcesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.RegisterTransitGatewayMulticastGroupSourcesResult, HTTPClientError>) -> ()) throws {
        if let registerTransitGatewayMulticastGroupSourcesAsyncOverrideNonOptional = registerTransitGatewayMulticastGroupSourcesAsyncOverride {
            if let registerTransitGatewayMulticastGroupSourcesAsyncOverrideTyped = registerTransitGatewayMulticastGroupSourcesAsyncOverrideNonOptional
                    as? RegisterTransitGatewayMulticastGroupSourcesAsyncType<InvocationReportingType> {
                return try registerTransitGatewayMulticastGroupSourcesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = RegisterTransitGatewayMulticastGroupSourcesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the RegisterTransitGatewayMulticastGroupSources operation waiting for the response before returning.

     - Parameters:
         - input: The validated RegisterTransitGatewayMulticastGroupSourcesRequest object being passed to this operation.
     - Returns: The RegisterTransitGatewayMulticastGroupSourcesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func registerTransitGatewayMulticastGroupSourcesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RegisterTransitGatewayMulticastGroupSourcesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.RegisterTransitGatewayMulticastGroupSourcesResult {
        if let registerTransitGatewayMulticastGroupSourcesSyncOverrideNonOptional = registerTransitGatewayMulticastGroupSourcesSyncOverride {
            if let registerTransitGatewayMulticastGroupSourcesSyncOverrideTyped = registerTransitGatewayMulticastGroupSourcesSyncOverrideNonOptional
                    as? RegisterTransitGatewayMulticastGroupSourcesSyncType<InvocationReportingType> {
                return try registerTransitGatewayMulticastGroupSourcesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return RegisterTransitGatewayMulticastGroupSourcesResult.__default
    }

    /**
     Invokes the RejectTransitGatewayPeeringAttachment operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RejectTransitGatewayPeeringAttachmentRequest object being passed to this operation.
         - completion: The RejectTransitGatewayPeeringAttachmentResult object or an error will be passed to this 
           callback when the operation is complete. The RejectTransitGatewayPeeringAttachmentResult
           object will be validated before being returned to caller.
     */
    public func rejectTransitGatewayPeeringAttachmentAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RejectTransitGatewayPeeringAttachmentRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.RejectTransitGatewayPeeringAttachmentResult, HTTPClientError>) -> ()) throws {
        if let rejectTransitGatewayPeeringAttachmentAsyncOverrideNonOptional = rejectTransitGatewayPeeringAttachmentAsyncOverride {
            if let rejectTransitGatewayPeeringAttachmentAsyncOverrideTyped = rejectTransitGatewayPeeringAttachmentAsyncOverrideNonOptional
                    as? RejectTransitGatewayPeeringAttachmentAsyncType<InvocationReportingType> {
                return try rejectTransitGatewayPeeringAttachmentAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = RejectTransitGatewayPeeringAttachmentResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the RejectTransitGatewayPeeringAttachment operation waiting for the response before returning.

     - Parameters:
         - input: The validated RejectTransitGatewayPeeringAttachmentRequest object being passed to this operation.
     - Returns: The RejectTransitGatewayPeeringAttachmentResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func rejectTransitGatewayPeeringAttachmentSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RejectTransitGatewayPeeringAttachmentRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.RejectTransitGatewayPeeringAttachmentResult {
        if let rejectTransitGatewayPeeringAttachmentSyncOverrideNonOptional = rejectTransitGatewayPeeringAttachmentSyncOverride {
            if let rejectTransitGatewayPeeringAttachmentSyncOverrideTyped = rejectTransitGatewayPeeringAttachmentSyncOverrideNonOptional
                    as? RejectTransitGatewayPeeringAttachmentSyncType<InvocationReportingType> {
                return try rejectTransitGatewayPeeringAttachmentSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return RejectTransitGatewayPeeringAttachmentResult.__default
    }

    /**
     Invokes the RejectTransitGatewayVpcAttachment operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RejectTransitGatewayVpcAttachmentRequest object being passed to this operation.
         - completion: The RejectTransitGatewayVpcAttachmentResult object or an error will be passed to this 
           callback when the operation is complete. The RejectTransitGatewayVpcAttachmentResult
           object will be validated before being returned to caller.
     */
    public func rejectTransitGatewayVpcAttachmentAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RejectTransitGatewayVpcAttachmentRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.RejectTransitGatewayVpcAttachmentResult, HTTPClientError>) -> ()) throws {
        if let rejectTransitGatewayVpcAttachmentAsyncOverrideNonOptional = rejectTransitGatewayVpcAttachmentAsyncOverride {
            if let rejectTransitGatewayVpcAttachmentAsyncOverrideTyped = rejectTransitGatewayVpcAttachmentAsyncOverrideNonOptional
                    as? RejectTransitGatewayVpcAttachmentAsyncType<InvocationReportingType> {
                return try rejectTransitGatewayVpcAttachmentAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = RejectTransitGatewayVpcAttachmentResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the RejectTransitGatewayVpcAttachment operation waiting for the response before returning.

     - Parameters:
         - input: The validated RejectTransitGatewayVpcAttachmentRequest object being passed to this operation.
     - Returns: The RejectTransitGatewayVpcAttachmentResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func rejectTransitGatewayVpcAttachmentSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RejectTransitGatewayVpcAttachmentRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.RejectTransitGatewayVpcAttachmentResult {
        if let rejectTransitGatewayVpcAttachmentSyncOverrideNonOptional = rejectTransitGatewayVpcAttachmentSyncOverride {
            if let rejectTransitGatewayVpcAttachmentSyncOverrideTyped = rejectTransitGatewayVpcAttachmentSyncOverrideNonOptional
                    as? RejectTransitGatewayVpcAttachmentSyncType<InvocationReportingType> {
                return try rejectTransitGatewayVpcAttachmentSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return RejectTransitGatewayVpcAttachmentResult.__default
    }

    /**
     Invokes the RejectVpcEndpointConnections operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RejectVpcEndpointConnectionsRequest object being passed to this operation.
         - completion: The RejectVpcEndpointConnectionsResult object or an error will be passed to this 
           callback when the operation is complete. The RejectVpcEndpointConnectionsResult
           object will be validated before being returned to caller.
     */
    public func rejectVpcEndpointConnectionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RejectVpcEndpointConnectionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.RejectVpcEndpointConnectionsResult, HTTPClientError>) -> ()) throws {
        if let rejectVpcEndpointConnectionsAsyncOverrideNonOptional = rejectVpcEndpointConnectionsAsyncOverride {
            if let rejectVpcEndpointConnectionsAsyncOverrideTyped = rejectVpcEndpointConnectionsAsyncOverrideNonOptional
                    as? RejectVpcEndpointConnectionsAsyncType<InvocationReportingType> {
                return try rejectVpcEndpointConnectionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = RejectVpcEndpointConnectionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the RejectVpcEndpointConnections operation waiting for the response before returning.

     - Parameters:
         - input: The validated RejectVpcEndpointConnectionsRequest object being passed to this operation.
     - Returns: The RejectVpcEndpointConnectionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func rejectVpcEndpointConnectionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RejectVpcEndpointConnectionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.RejectVpcEndpointConnectionsResult {
        if let rejectVpcEndpointConnectionsSyncOverrideNonOptional = rejectVpcEndpointConnectionsSyncOverride {
            if let rejectVpcEndpointConnectionsSyncOverrideTyped = rejectVpcEndpointConnectionsSyncOverrideNonOptional
                    as? RejectVpcEndpointConnectionsSyncType<InvocationReportingType> {
                return try rejectVpcEndpointConnectionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return RejectVpcEndpointConnectionsResult.__default
    }

    /**
     Invokes the RejectVpcPeeringConnection operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RejectVpcPeeringConnectionRequest object being passed to this operation.
         - completion: The RejectVpcPeeringConnectionResult object or an error will be passed to this 
           callback when the operation is complete. The RejectVpcPeeringConnectionResult
           object will be validated before being returned to caller.
     */
    public func rejectVpcPeeringConnectionAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RejectVpcPeeringConnectionRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.RejectVpcPeeringConnectionResult, HTTPClientError>) -> ()) throws {
        if let rejectVpcPeeringConnectionAsyncOverrideNonOptional = rejectVpcPeeringConnectionAsyncOverride {
            if let rejectVpcPeeringConnectionAsyncOverrideTyped = rejectVpcPeeringConnectionAsyncOverrideNonOptional
                    as? RejectVpcPeeringConnectionAsyncType<InvocationReportingType> {
                return try rejectVpcPeeringConnectionAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = RejectVpcPeeringConnectionResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the RejectVpcPeeringConnection operation waiting for the response before returning.

     - Parameters:
         - input: The validated RejectVpcPeeringConnectionRequest object being passed to this operation.
     - Returns: The RejectVpcPeeringConnectionResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func rejectVpcPeeringConnectionSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RejectVpcPeeringConnectionRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.RejectVpcPeeringConnectionResult {
        if let rejectVpcPeeringConnectionSyncOverrideNonOptional = rejectVpcPeeringConnectionSyncOverride {
            if let rejectVpcPeeringConnectionSyncOverrideTyped = rejectVpcPeeringConnectionSyncOverrideNonOptional
                    as? RejectVpcPeeringConnectionSyncType<InvocationReportingType> {
                return try rejectVpcPeeringConnectionSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return RejectVpcPeeringConnectionResult.__default
    }

    /**
     Invokes the ReleaseAddress operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ReleaseAddressRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func releaseAddressAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReleaseAddressRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let releaseAddressAsyncOverrideNonOptional = releaseAddressAsyncOverride {
            if let releaseAddressAsyncOverrideTyped = releaseAddressAsyncOverrideNonOptional
                    as? ReleaseAddressAsyncType<InvocationReportingType> {
                return try releaseAddressAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ReleaseAddress operation waiting for the response before returning.

     - Parameters:
         - input: The validated ReleaseAddressRequest object being passed to this operation.
     */
    public func releaseAddressSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReleaseAddressRequest,
            reporting: InvocationReportingType) throws {
        if let releaseAddressSyncOverrideNonOptional = releaseAddressSyncOverride {
            if let releaseAddressSyncOverrideTyped = releaseAddressSyncOverrideNonOptional
                    as? ReleaseAddressSyncType<InvocationReportingType> {
                return try releaseAddressSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ReleaseHosts operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ReleaseHostsRequest object being passed to this operation.
         - completion: The ReleaseHostsResult object or an error will be passed to this 
           callback when the operation is complete. The ReleaseHostsResult
           object will be validated before being returned to caller.
     */
    public func releaseHostsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReleaseHostsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ReleaseHostsResult, HTTPClientError>) -> ()) throws {
        if let releaseHostsAsyncOverrideNonOptional = releaseHostsAsyncOverride {
            if let releaseHostsAsyncOverrideTyped = releaseHostsAsyncOverrideNonOptional
                    as? ReleaseHostsAsyncType<InvocationReportingType> {
                return try releaseHostsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ReleaseHostsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ReleaseHosts operation waiting for the response before returning.

     - Parameters:
         - input: The validated ReleaseHostsRequest object being passed to this operation.
     - Returns: The ReleaseHostsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func releaseHostsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReleaseHostsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ReleaseHostsResult {
        if let releaseHostsSyncOverrideNonOptional = releaseHostsSyncOverride {
            if let releaseHostsSyncOverrideTyped = releaseHostsSyncOverrideNonOptional
                    as? ReleaseHostsSyncType<InvocationReportingType> {
                return try releaseHostsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ReleaseHostsResult.__default
    }

    /**
     Invokes the ReplaceIamInstanceProfileAssociation operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ReplaceIamInstanceProfileAssociationRequest object being passed to this operation.
         - completion: The ReplaceIamInstanceProfileAssociationResult object or an error will be passed to this 
           callback when the operation is complete. The ReplaceIamInstanceProfileAssociationResult
           object will be validated before being returned to caller.
     */
    public func replaceIamInstanceProfileAssociationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReplaceIamInstanceProfileAssociationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ReplaceIamInstanceProfileAssociationResult, HTTPClientError>) -> ()) throws {
        if let replaceIamInstanceProfileAssociationAsyncOverrideNonOptional = replaceIamInstanceProfileAssociationAsyncOverride {
            if let replaceIamInstanceProfileAssociationAsyncOverrideTyped = replaceIamInstanceProfileAssociationAsyncOverrideNonOptional
                    as? ReplaceIamInstanceProfileAssociationAsyncType<InvocationReportingType> {
                return try replaceIamInstanceProfileAssociationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ReplaceIamInstanceProfileAssociationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ReplaceIamInstanceProfileAssociation operation waiting for the response before returning.

     - Parameters:
         - input: The validated ReplaceIamInstanceProfileAssociationRequest object being passed to this operation.
     - Returns: The ReplaceIamInstanceProfileAssociationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func replaceIamInstanceProfileAssociationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReplaceIamInstanceProfileAssociationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ReplaceIamInstanceProfileAssociationResult {
        if let replaceIamInstanceProfileAssociationSyncOverrideNonOptional = replaceIamInstanceProfileAssociationSyncOverride {
            if let replaceIamInstanceProfileAssociationSyncOverrideTyped = replaceIamInstanceProfileAssociationSyncOverrideNonOptional
                    as? ReplaceIamInstanceProfileAssociationSyncType<InvocationReportingType> {
                return try replaceIamInstanceProfileAssociationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ReplaceIamInstanceProfileAssociationResult.__default
    }

    /**
     Invokes the ReplaceNetworkAclAssociation operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ReplaceNetworkAclAssociationRequest object being passed to this operation.
         - completion: The ReplaceNetworkAclAssociationResult object or an error will be passed to this 
           callback when the operation is complete. The ReplaceNetworkAclAssociationResult
           object will be validated before being returned to caller.
     */
    public func replaceNetworkAclAssociationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReplaceNetworkAclAssociationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ReplaceNetworkAclAssociationResult, HTTPClientError>) -> ()) throws {
        if let replaceNetworkAclAssociationAsyncOverrideNonOptional = replaceNetworkAclAssociationAsyncOverride {
            if let replaceNetworkAclAssociationAsyncOverrideTyped = replaceNetworkAclAssociationAsyncOverrideNonOptional
                    as? ReplaceNetworkAclAssociationAsyncType<InvocationReportingType> {
                return try replaceNetworkAclAssociationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ReplaceNetworkAclAssociationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ReplaceNetworkAclAssociation operation waiting for the response before returning.

     - Parameters:
         - input: The validated ReplaceNetworkAclAssociationRequest object being passed to this operation.
     - Returns: The ReplaceNetworkAclAssociationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func replaceNetworkAclAssociationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReplaceNetworkAclAssociationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ReplaceNetworkAclAssociationResult {
        if let replaceNetworkAclAssociationSyncOverrideNonOptional = replaceNetworkAclAssociationSyncOverride {
            if let replaceNetworkAclAssociationSyncOverrideTyped = replaceNetworkAclAssociationSyncOverrideNonOptional
                    as? ReplaceNetworkAclAssociationSyncType<InvocationReportingType> {
                return try replaceNetworkAclAssociationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ReplaceNetworkAclAssociationResult.__default
    }

    /**
     Invokes the ReplaceNetworkAclEntry operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ReplaceNetworkAclEntryRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func replaceNetworkAclEntryAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReplaceNetworkAclEntryRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let replaceNetworkAclEntryAsyncOverrideNonOptional = replaceNetworkAclEntryAsyncOverride {
            if let replaceNetworkAclEntryAsyncOverrideTyped = replaceNetworkAclEntryAsyncOverrideNonOptional
                    as? ReplaceNetworkAclEntryAsyncType<InvocationReportingType> {
                return try replaceNetworkAclEntryAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ReplaceNetworkAclEntry operation waiting for the response before returning.

     - Parameters:
         - input: The validated ReplaceNetworkAclEntryRequest object being passed to this operation.
     */
    public func replaceNetworkAclEntrySync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReplaceNetworkAclEntryRequest,
            reporting: InvocationReportingType) throws {
        if let replaceNetworkAclEntrySyncOverrideNonOptional = replaceNetworkAclEntrySyncOverride {
            if let replaceNetworkAclEntrySyncOverrideTyped = replaceNetworkAclEntrySyncOverrideNonOptional
                    as? ReplaceNetworkAclEntrySyncType<InvocationReportingType> {
                return try replaceNetworkAclEntrySyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ReplaceRoute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ReplaceRouteRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func replaceRouteAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReplaceRouteRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let replaceRouteAsyncOverrideNonOptional = replaceRouteAsyncOverride {
            if let replaceRouteAsyncOverrideTyped = replaceRouteAsyncOverrideNonOptional
                    as? ReplaceRouteAsyncType<InvocationReportingType> {
                return try replaceRouteAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ReplaceRoute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ReplaceRouteRequest object being passed to this operation.
     */
    public func replaceRouteSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReplaceRouteRequest,
            reporting: InvocationReportingType) throws {
        if let replaceRouteSyncOverrideNonOptional = replaceRouteSyncOverride {
            if let replaceRouteSyncOverrideTyped = replaceRouteSyncOverrideNonOptional
                    as? ReplaceRouteSyncType<InvocationReportingType> {
                return try replaceRouteSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ReplaceRouteTableAssociation operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ReplaceRouteTableAssociationRequest object being passed to this operation.
         - completion: The ReplaceRouteTableAssociationResult object or an error will be passed to this 
           callback when the operation is complete. The ReplaceRouteTableAssociationResult
           object will be validated before being returned to caller.
     */
    public func replaceRouteTableAssociationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReplaceRouteTableAssociationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ReplaceRouteTableAssociationResult, HTTPClientError>) -> ()) throws {
        if let replaceRouteTableAssociationAsyncOverrideNonOptional = replaceRouteTableAssociationAsyncOverride {
            if let replaceRouteTableAssociationAsyncOverrideTyped = replaceRouteTableAssociationAsyncOverrideNonOptional
                    as? ReplaceRouteTableAssociationAsyncType<InvocationReportingType> {
                return try replaceRouteTableAssociationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ReplaceRouteTableAssociationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ReplaceRouteTableAssociation operation waiting for the response before returning.

     - Parameters:
         - input: The validated ReplaceRouteTableAssociationRequest object being passed to this operation.
     - Returns: The ReplaceRouteTableAssociationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func replaceRouteTableAssociationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReplaceRouteTableAssociationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ReplaceRouteTableAssociationResult {
        if let replaceRouteTableAssociationSyncOverrideNonOptional = replaceRouteTableAssociationSyncOverride {
            if let replaceRouteTableAssociationSyncOverrideTyped = replaceRouteTableAssociationSyncOverrideNonOptional
                    as? ReplaceRouteTableAssociationSyncType<InvocationReportingType> {
                return try replaceRouteTableAssociationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ReplaceRouteTableAssociationResult.__default
    }

    /**
     Invokes the ReplaceTransitGatewayRoute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ReplaceTransitGatewayRouteRequest object being passed to this operation.
         - completion: The ReplaceTransitGatewayRouteResult object or an error will be passed to this 
           callback when the operation is complete. The ReplaceTransitGatewayRouteResult
           object will be validated before being returned to caller.
     */
    public func replaceTransitGatewayRouteAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReplaceTransitGatewayRouteRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ReplaceTransitGatewayRouteResult, HTTPClientError>) -> ()) throws {
        if let replaceTransitGatewayRouteAsyncOverrideNonOptional = replaceTransitGatewayRouteAsyncOverride {
            if let replaceTransitGatewayRouteAsyncOverrideTyped = replaceTransitGatewayRouteAsyncOverrideNonOptional
                    as? ReplaceTransitGatewayRouteAsyncType<InvocationReportingType> {
                return try replaceTransitGatewayRouteAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ReplaceTransitGatewayRouteResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ReplaceTransitGatewayRoute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ReplaceTransitGatewayRouteRequest object being passed to this operation.
     - Returns: The ReplaceTransitGatewayRouteResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func replaceTransitGatewayRouteSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReplaceTransitGatewayRouteRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ReplaceTransitGatewayRouteResult {
        if let replaceTransitGatewayRouteSyncOverrideNonOptional = replaceTransitGatewayRouteSyncOverride {
            if let replaceTransitGatewayRouteSyncOverrideTyped = replaceTransitGatewayRouteSyncOverrideNonOptional
                    as? ReplaceTransitGatewayRouteSyncType<InvocationReportingType> {
                return try replaceTransitGatewayRouteSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ReplaceTransitGatewayRouteResult.__default
    }

    /**
     Invokes the ReportInstanceStatus operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ReportInstanceStatusRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func reportInstanceStatusAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReportInstanceStatusRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let reportInstanceStatusAsyncOverrideNonOptional = reportInstanceStatusAsyncOverride {
            if let reportInstanceStatusAsyncOverrideTyped = reportInstanceStatusAsyncOverrideNonOptional
                    as? ReportInstanceStatusAsyncType<InvocationReportingType> {
                return try reportInstanceStatusAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ReportInstanceStatus operation waiting for the response before returning.

     - Parameters:
         - input: The validated ReportInstanceStatusRequest object being passed to this operation.
     */
    public func reportInstanceStatusSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ReportInstanceStatusRequest,
            reporting: InvocationReportingType) throws {
        if let reportInstanceStatusSyncOverrideNonOptional = reportInstanceStatusSyncOverride {
            if let reportInstanceStatusSyncOverrideTyped = reportInstanceStatusSyncOverrideNonOptional
                    as? ReportInstanceStatusSyncType<InvocationReportingType> {
                return try reportInstanceStatusSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the RequestSpotFleet operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RequestSpotFleetRequest object being passed to this operation.
         - completion: The RequestSpotFleetResponse object or an error will be passed to this 
           callback when the operation is complete. The RequestSpotFleetResponse
           object will be validated before being returned to caller.
     */
    public func requestSpotFleetAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RequestSpotFleetRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.RequestSpotFleetResponse, HTTPClientError>) -> ()) throws {
        if let requestSpotFleetAsyncOverrideNonOptional = requestSpotFleetAsyncOverride {
            if let requestSpotFleetAsyncOverrideTyped = requestSpotFleetAsyncOverrideNonOptional
                    as? RequestSpotFleetAsyncType<InvocationReportingType> {
                return try requestSpotFleetAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = RequestSpotFleetResponse.__default
        
        completion(.success(result))
    }

    /**
     Invokes the RequestSpotFleet operation waiting for the response before returning.

     - Parameters:
         - input: The validated RequestSpotFleetRequest object being passed to this operation.
     - Returns: The RequestSpotFleetResponse object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func requestSpotFleetSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RequestSpotFleetRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.RequestSpotFleetResponse {
        if let requestSpotFleetSyncOverrideNonOptional = requestSpotFleetSyncOverride {
            if let requestSpotFleetSyncOverrideTyped = requestSpotFleetSyncOverrideNonOptional
                    as? RequestSpotFleetSyncType<InvocationReportingType> {
                return try requestSpotFleetSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return RequestSpotFleetResponse.__default
    }

    /**
     Invokes the RequestSpotInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RequestSpotInstancesRequest object being passed to this operation.
         - completion: The RequestSpotInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The RequestSpotInstancesResult
           object will be validated before being returned to caller.
     */
    public func requestSpotInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RequestSpotInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.RequestSpotInstancesResult, HTTPClientError>) -> ()) throws {
        if let requestSpotInstancesAsyncOverrideNonOptional = requestSpotInstancesAsyncOverride {
            if let requestSpotInstancesAsyncOverrideTyped = requestSpotInstancesAsyncOverrideNonOptional
                    as? RequestSpotInstancesAsyncType<InvocationReportingType> {
                return try requestSpotInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = RequestSpotInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the RequestSpotInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated RequestSpotInstancesRequest object being passed to this operation.
     - Returns: The RequestSpotInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func requestSpotInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RequestSpotInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.RequestSpotInstancesResult {
        if let requestSpotInstancesSyncOverrideNonOptional = requestSpotInstancesSyncOverride {
            if let requestSpotInstancesSyncOverrideTyped = requestSpotInstancesSyncOverrideNonOptional
                    as? RequestSpotInstancesSyncType<InvocationReportingType> {
                return try requestSpotInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return RequestSpotInstancesResult.__default
    }

    /**
     Invokes the ResetEbsDefaultKmsKeyId operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ResetEbsDefaultKmsKeyIdRequest object being passed to this operation.
         - completion: The ResetEbsDefaultKmsKeyIdResult object or an error will be passed to this 
           callback when the operation is complete. The ResetEbsDefaultKmsKeyIdResult
           object will be validated before being returned to caller.
     */
    public func resetEbsDefaultKmsKeyIdAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ResetEbsDefaultKmsKeyIdRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ResetEbsDefaultKmsKeyIdResult, HTTPClientError>) -> ()) throws {
        if let resetEbsDefaultKmsKeyIdAsyncOverrideNonOptional = resetEbsDefaultKmsKeyIdAsyncOverride {
            if let resetEbsDefaultKmsKeyIdAsyncOverrideTyped = resetEbsDefaultKmsKeyIdAsyncOverrideNonOptional
                    as? ResetEbsDefaultKmsKeyIdAsyncType<InvocationReportingType> {
                return try resetEbsDefaultKmsKeyIdAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ResetEbsDefaultKmsKeyIdResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ResetEbsDefaultKmsKeyId operation waiting for the response before returning.

     - Parameters:
         - input: The validated ResetEbsDefaultKmsKeyIdRequest object being passed to this operation.
     - Returns: The ResetEbsDefaultKmsKeyIdResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func resetEbsDefaultKmsKeyIdSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ResetEbsDefaultKmsKeyIdRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ResetEbsDefaultKmsKeyIdResult {
        if let resetEbsDefaultKmsKeyIdSyncOverrideNonOptional = resetEbsDefaultKmsKeyIdSyncOverride {
            if let resetEbsDefaultKmsKeyIdSyncOverrideTyped = resetEbsDefaultKmsKeyIdSyncOverrideNonOptional
                    as? ResetEbsDefaultKmsKeyIdSyncType<InvocationReportingType> {
                return try resetEbsDefaultKmsKeyIdSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ResetEbsDefaultKmsKeyIdResult.__default
    }

    /**
     Invokes the ResetFpgaImageAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ResetFpgaImageAttributeRequest object being passed to this operation.
         - completion: The ResetFpgaImageAttributeResult object or an error will be passed to this 
           callback when the operation is complete. The ResetFpgaImageAttributeResult
           object will be validated before being returned to caller.
     */
    public func resetFpgaImageAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ResetFpgaImageAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.ResetFpgaImageAttributeResult, HTTPClientError>) -> ()) throws {
        if let resetFpgaImageAttributeAsyncOverrideNonOptional = resetFpgaImageAttributeAsyncOverride {
            if let resetFpgaImageAttributeAsyncOverrideTyped = resetFpgaImageAttributeAsyncOverrideNonOptional
                    as? ResetFpgaImageAttributeAsyncType<InvocationReportingType> {
                return try resetFpgaImageAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = ResetFpgaImageAttributeResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the ResetFpgaImageAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ResetFpgaImageAttributeRequest object being passed to this operation.
     - Returns: The ResetFpgaImageAttributeResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func resetFpgaImageAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ResetFpgaImageAttributeRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.ResetFpgaImageAttributeResult {
        if let resetFpgaImageAttributeSyncOverrideNonOptional = resetFpgaImageAttributeSyncOverride {
            if let resetFpgaImageAttributeSyncOverrideTyped = resetFpgaImageAttributeSyncOverrideNonOptional
                    as? ResetFpgaImageAttributeSyncType<InvocationReportingType> {
                return try resetFpgaImageAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return ResetFpgaImageAttributeResult.__default
    }

    /**
     Invokes the ResetImageAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ResetImageAttributeRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func resetImageAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ResetImageAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let resetImageAttributeAsyncOverrideNonOptional = resetImageAttributeAsyncOverride {
            if let resetImageAttributeAsyncOverrideTyped = resetImageAttributeAsyncOverrideNonOptional
                    as? ResetImageAttributeAsyncType<InvocationReportingType> {
                return try resetImageAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ResetImageAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ResetImageAttributeRequest object being passed to this operation.
     */
    public func resetImageAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ResetImageAttributeRequest,
            reporting: InvocationReportingType) throws {
        if let resetImageAttributeSyncOverrideNonOptional = resetImageAttributeSyncOverride {
            if let resetImageAttributeSyncOverrideTyped = resetImageAttributeSyncOverrideNonOptional
                    as? ResetImageAttributeSyncType<InvocationReportingType> {
                return try resetImageAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ResetInstanceAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ResetInstanceAttributeRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func resetInstanceAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ResetInstanceAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let resetInstanceAttributeAsyncOverrideNonOptional = resetInstanceAttributeAsyncOverride {
            if let resetInstanceAttributeAsyncOverrideTyped = resetInstanceAttributeAsyncOverrideNonOptional
                    as? ResetInstanceAttributeAsyncType<InvocationReportingType> {
                return try resetInstanceAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ResetInstanceAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ResetInstanceAttributeRequest object being passed to this operation.
     */
    public func resetInstanceAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ResetInstanceAttributeRequest,
            reporting: InvocationReportingType) throws {
        if let resetInstanceAttributeSyncOverrideNonOptional = resetInstanceAttributeSyncOverride {
            if let resetInstanceAttributeSyncOverrideTyped = resetInstanceAttributeSyncOverrideNonOptional
                    as? ResetInstanceAttributeSyncType<InvocationReportingType> {
                return try resetInstanceAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ResetNetworkInterfaceAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ResetNetworkInterfaceAttributeRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func resetNetworkInterfaceAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ResetNetworkInterfaceAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let resetNetworkInterfaceAttributeAsyncOverrideNonOptional = resetNetworkInterfaceAttributeAsyncOverride {
            if let resetNetworkInterfaceAttributeAsyncOverrideTyped = resetNetworkInterfaceAttributeAsyncOverrideNonOptional
                    as? ResetNetworkInterfaceAttributeAsyncType<InvocationReportingType> {
                return try resetNetworkInterfaceAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ResetNetworkInterfaceAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ResetNetworkInterfaceAttributeRequest object being passed to this operation.
     */
    public func resetNetworkInterfaceAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ResetNetworkInterfaceAttributeRequest,
            reporting: InvocationReportingType) throws {
        if let resetNetworkInterfaceAttributeSyncOverrideNonOptional = resetNetworkInterfaceAttributeSyncOverride {
            if let resetNetworkInterfaceAttributeSyncOverrideTyped = resetNetworkInterfaceAttributeSyncOverrideNonOptional
                    as? ResetNetworkInterfaceAttributeSyncType<InvocationReportingType> {
                return try resetNetworkInterfaceAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the ResetSnapshotAttribute operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated ResetSnapshotAttributeRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func resetSnapshotAttributeAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ResetSnapshotAttributeRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let resetSnapshotAttributeAsyncOverrideNonOptional = resetSnapshotAttributeAsyncOverride {
            if let resetSnapshotAttributeAsyncOverrideTyped = resetSnapshotAttributeAsyncOverrideNonOptional
                    as? ResetSnapshotAttributeAsyncType<InvocationReportingType> {
                return try resetSnapshotAttributeAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the ResetSnapshotAttribute operation waiting for the response before returning.

     - Parameters:
         - input: The validated ResetSnapshotAttributeRequest object being passed to this operation.
     */
    public func resetSnapshotAttributeSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.ResetSnapshotAttributeRequest,
            reporting: InvocationReportingType) throws {
        if let resetSnapshotAttributeSyncOverrideNonOptional = resetSnapshotAttributeSyncOverride {
            if let resetSnapshotAttributeSyncOverrideTyped = resetSnapshotAttributeSyncOverrideNonOptional
                    as? ResetSnapshotAttributeSyncType<InvocationReportingType> {
                return try resetSnapshotAttributeSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the RestoreAddressToClassic operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RestoreAddressToClassicRequest object being passed to this operation.
         - completion: The RestoreAddressToClassicResult object or an error will be passed to this 
           callback when the operation is complete. The RestoreAddressToClassicResult
           object will be validated before being returned to caller.
     */
    public func restoreAddressToClassicAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RestoreAddressToClassicRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.RestoreAddressToClassicResult, HTTPClientError>) -> ()) throws {
        if let restoreAddressToClassicAsyncOverrideNonOptional = restoreAddressToClassicAsyncOverride {
            if let restoreAddressToClassicAsyncOverrideTyped = restoreAddressToClassicAsyncOverrideNonOptional
                    as? RestoreAddressToClassicAsyncType<InvocationReportingType> {
                return try restoreAddressToClassicAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = RestoreAddressToClassicResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the RestoreAddressToClassic operation waiting for the response before returning.

     - Parameters:
         - input: The validated RestoreAddressToClassicRequest object being passed to this operation.
     - Returns: The RestoreAddressToClassicResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func restoreAddressToClassicSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RestoreAddressToClassicRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.RestoreAddressToClassicResult {
        if let restoreAddressToClassicSyncOverrideNonOptional = restoreAddressToClassicSyncOverride {
            if let restoreAddressToClassicSyncOverrideTyped = restoreAddressToClassicSyncOverrideNonOptional
                    as? RestoreAddressToClassicSyncType<InvocationReportingType> {
                return try restoreAddressToClassicSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return RestoreAddressToClassicResult.__default
    }

    /**
     Invokes the RevokeClientVpnIngress operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RevokeClientVpnIngressRequest object being passed to this operation.
         - completion: The RevokeClientVpnIngressResult object or an error will be passed to this 
           callback when the operation is complete. The RevokeClientVpnIngressResult
           object will be validated before being returned to caller.
     */
    public func revokeClientVpnIngressAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RevokeClientVpnIngressRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.RevokeClientVpnIngressResult, HTTPClientError>) -> ()) throws {
        if let revokeClientVpnIngressAsyncOverrideNonOptional = revokeClientVpnIngressAsyncOverride {
            if let revokeClientVpnIngressAsyncOverrideTyped = revokeClientVpnIngressAsyncOverrideNonOptional
                    as? RevokeClientVpnIngressAsyncType<InvocationReportingType> {
                return try revokeClientVpnIngressAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = RevokeClientVpnIngressResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the RevokeClientVpnIngress operation waiting for the response before returning.

     - Parameters:
         - input: The validated RevokeClientVpnIngressRequest object being passed to this operation.
     - Returns: The RevokeClientVpnIngressResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func revokeClientVpnIngressSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RevokeClientVpnIngressRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.RevokeClientVpnIngressResult {
        if let revokeClientVpnIngressSyncOverrideNonOptional = revokeClientVpnIngressSyncOverride {
            if let revokeClientVpnIngressSyncOverrideTyped = revokeClientVpnIngressSyncOverrideNonOptional
                    as? RevokeClientVpnIngressSyncType<InvocationReportingType> {
                return try revokeClientVpnIngressSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return RevokeClientVpnIngressResult.__default
    }

    /**
     Invokes the RevokeSecurityGroupEgress operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RevokeSecurityGroupEgressRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func revokeSecurityGroupEgressAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RevokeSecurityGroupEgressRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let revokeSecurityGroupEgressAsyncOverrideNonOptional = revokeSecurityGroupEgressAsyncOverride {
            if let revokeSecurityGroupEgressAsyncOverrideTyped = revokeSecurityGroupEgressAsyncOverrideNonOptional
                    as? RevokeSecurityGroupEgressAsyncType<InvocationReportingType> {
                return try revokeSecurityGroupEgressAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the RevokeSecurityGroupEgress operation waiting for the response before returning.

     - Parameters:
         - input: The validated RevokeSecurityGroupEgressRequest object being passed to this operation.
     */
    public func revokeSecurityGroupEgressSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RevokeSecurityGroupEgressRequest,
            reporting: InvocationReportingType) throws {
        if let revokeSecurityGroupEgressSyncOverrideNonOptional = revokeSecurityGroupEgressSyncOverride {
            if let revokeSecurityGroupEgressSyncOverrideTyped = revokeSecurityGroupEgressSyncOverrideNonOptional
                    as? RevokeSecurityGroupEgressSyncType<InvocationReportingType> {
                return try revokeSecurityGroupEgressSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the RevokeSecurityGroupIngress operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RevokeSecurityGroupIngressRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func revokeSecurityGroupIngressAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RevokeSecurityGroupIngressRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let revokeSecurityGroupIngressAsyncOverrideNonOptional = revokeSecurityGroupIngressAsyncOverride {
            if let revokeSecurityGroupIngressAsyncOverrideTyped = revokeSecurityGroupIngressAsyncOverrideNonOptional
                    as? RevokeSecurityGroupIngressAsyncType<InvocationReportingType> {
                return try revokeSecurityGroupIngressAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the RevokeSecurityGroupIngress operation waiting for the response before returning.

     - Parameters:
         - input: The validated RevokeSecurityGroupIngressRequest object being passed to this operation.
     */
    public func revokeSecurityGroupIngressSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RevokeSecurityGroupIngressRequest,
            reporting: InvocationReportingType) throws {
        if let revokeSecurityGroupIngressSyncOverrideNonOptional = revokeSecurityGroupIngressSyncOverride {
            if let revokeSecurityGroupIngressSyncOverrideTyped = revokeSecurityGroupIngressSyncOverrideNonOptional
                    as? RevokeSecurityGroupIngressSyncType<InvocationReportingType> {
                return try revokeSecurityGroupIngressSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the RunInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RunInstancesRequest object being passed to this operation.
         - completion: The Reservation object or an error will be passed to this 
           callback when the operation is complete. The Reservation
           object will be validated before being returned to caller.
     */
    public func runInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RunInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.Reservation, HTTPClientError>) -> ()) throws {
        if let runInstancesAsyncOverrideNonOptional = runInstancesAsyncOverride {
            if let runInstancesAsyncOverrideTyped = runInstancesAsyncOverrideNonOptional
                    as? RunInstancesAsyncType<InvocationReportingType> {
                return try runInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = Reservation.__default
        
        completion(.success(result))
    }

    /**
     Invokes the RunInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated RunInstancesRequest object being passed to this operation.
     - Returns: The Reservation object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func runInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RunInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.Reservation {
        if let runInstancesSyncOverrideNonOptional = runInstancesSyncOverride {
            if let runInstancesSyncOverrideTyped = runInstancesSyncOverrideNonOptional
                    as? RunInstancesSyncType<InvocationReportingType> {
                return try runInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return Reservation.__default
    }

    /**
     Invokes the RunScheduledInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated RunScheduledInstancesRequest object being passed to this operation.
         - completion: The RunScheduledInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The RunScheduledInstancesResult
           object will be validated before being returned to caller.
     */
    public func runScheduledInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RunScheduledInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.RunScheduledInstancesResult, HTTPClientError>) -> ()) throws {
        if let runScheduledInstancesAsyncOverrideNonOptional = runScheduledInstancesAsyncOverride {
            if let runScheduledInstancesAsyncOverrideTyped = runScheduledInstancesAsyncOverrideNonOptional
                    as? RunScheduledInstancesAsyncType<InvocationReportingType> {
                return try runScheduledInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = RunScheduledInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the RunScheduledInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated RunScheduledInstancesRequest object being passed to this operation.
     - Returns: The RunScheduledInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func runScheduledInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.RunScheduledInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.RunScheduledInstancesResult {
        if let runScheduledInstancesSyncOverrideNonOptional = runScheduledInstancesSyncOverride {
            if let runScheduledInstancesSyncOverrideTyped = runScheduledInstancesSyncOverrideNonOptional
                    as? RunScheduledInstancesSyncType<InvocationReportingType> {
                return try runScheduledInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return RunScheduledInstancesResult.__default
    }

    /**
     Invokes the SearchLocalGatewayRoutes operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated SearchLocalGatewayRoutesRequest object being passed to this operation.
         - completion: The SearchLocalGatewayRoutesResult object or an error will be passed to this 
           callback when the operation is complete. The SearchLocalGatewayRoutesResult
           object will be validated before being returned to caller.
     */
    public func searchLocalGatewayRoutesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.SearchLocalGatewayRoutesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.SearchLocalGatewayRoutesResult, HTTPClientError>) -> ()) throws {
        if let searchLocalGatewayRoutesAsyncOverrideNonOptional = searchLocalGatewayRoutesAsyncOverride {
            if let searchLocalGatewayRoutesAsyncOverrideTyped = searchLocalGatewayRoutesAsyncOverrideNonOptional
                    as? SearchLocalGatewayRoutesAsyncType<InvocationReportingType> {
                return try searchLocalGatewayRoutesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = SearchLocalGatewayRoutesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the SearchLocalGatewayRoutes operation waiting for the response before returning.

     - Parameters:
         - input: The validated SearchLocalGatewayRoutesRequest object being passed to this operation.
     - Returns: The SearchLocalGatewayRoutesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func searchLocalGatewayRoutesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.SearchLocalGatewayRoutesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.SearchLocalGatewayRoutesResult {
        if let searchLocalGatewayRoutesSyncOverrideNonOptional = searchLocalGatewayRoutesSyncOverride {
            if let searchLocalGatewayRoutesSyncOverrideTyped = searchLocalGatewayRoutesSyncOverrideNonOptional
                    as? SearchLocalGatewayRoutesSyncType<InvocationReportingType> {
                return try searchLocalGatewayRoutesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return SearchLocalGatewayRoutesResult.__default
    }

    /**
     Invokes the SearchTransitGatewayMulticastGroups operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated SearchTransitGatewayMulticastGroupsRequest object being passed to this operation.
         - completion: The SearchTransitGatewayMulticastGroupsResult object or an error will be passed to this 
           callback when the operation is complete. The SearchTransitGatewayMulticastGroupsResult
           object will be validated before being returned to caller.
     */
    public func searchTransitGatewayMulticastGroupsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.SearchTransitGatewayMulticastGroupsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.SearchTransitGatewayMulticastGroupsResult, HTTPClientError>) -> ()) throws {
        if let searchTransitGatewayMulticastGroupsAsyncOverrideNonOptional = searchTransitGatewayMulticastGroupsAsyncOverride {
            if let searchTransitGatewayMulticastGroupsAsyncOverrideTyped = searchTransitGatewayMulticastGroupsAsyncOverrideNonOptional
                    as? SearchTransitGatewayMulticastGroupsAsyncType<InvocationReportingType> {
                return try searchTransitGatewayMulticastGroupsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = SearchTransitGatewayMulticastGroupsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the SearchTransitGatewayMulticastGroups operation waiting for the response before returning.

     - Parameters:
         - input: The validated SearchTransitGatewayMulticastGroupsRequest object being passed to this operation.
     - Returns: The SearchTransitGatewayMulticastGroupsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func searchTransitGatewayMulticastGroupsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.SearchTransitGatewayMulticastGroupsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.SearchTransitGatewayMulticastGroupsResult {
        if let searchTransitGatewayMulticastGroupsSyncOverrideNonOptional = searchTransitGatewayMulticastGroupsSyncOverride {
            if let searchTransitGatewayMulticastGroupsSyncOverrideTyped = searchTransitGatewayMulticastGroupsSyncOverrideNonOptional
                    as? SearchTransitGatewayMulticastGroupsSyncType<InvocationReportingType> {
                return try searchTransitGatewayMulticastGroupsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return SearchTransitGatewayMulticastGroupsResult.__default
    }

    /**
     Invokes the SearchTransitGatewayRoutes operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated SearchTransitGatewayRoutesRequest object being passed to this operation.
         - completion: The SearchTransitGatewayRoutesResult object or an error will be passed to this 
           callback when the operation is complete. The SearchTransitGatewayRoutesResult
           object will be validated before being returned to caller.
     */
    public func searchTransitGatewayRoutesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.SearchTransitGatewayRoutesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.SearchTransitGatewayRoutesResult, HTTPClientError>) -> ()) throws {
        if let searchTransitGatewayRoutesAsyncOverrideNonOptional = searchTransitGatewayRoutesAsyncOverride {
            if let searchTransitGatewayRoutesAsyncOverrideTyped = searchTransitGatewayRoutesAsyncOverrideNonOptional
                    as? SearchTransitGatewayRoutesAsyncType<InvocationReportingType> {
                return try searchTransitGatewayRoutesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = SearchTransitGatewayRoutesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the SearchTransitGatewayRoutes operation waiting for the response before returning.

     - Parameters:
         - input: The validated SearchTransitGatewayRoutesRequest object being passed to this operation.
     - Returns: The SearchTransitGatewayRoutesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func searchTransitGatewayRoutesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.SearchTransitGatewayRoutesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.SearchTransitGatewayRoutesResult {
        if let searchTransitGatewayRoutesSyncOverrideNonOptional = searchTransitGatewayRoutesSyncOverride {
            if let searchTransitGatewayRoutesSyncOverrideTyped = searchTransitGatewayRoutesSyncOverrideNonOptional
                    as? SearchTransitGatewayRoutesSyncType<InvocationReportingType> {
                return try searchTransitGatewayRoutesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return SearchTransitGatewayRoutesResult.__default
    }

    /**
     Invokes the SendDiagnosticInterrupt operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated SendDiagnosticInterruptRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func sendDiagnosticInterruptAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.SendDiagnosticInterruptRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let sendDiagnosticInterruptAsyncOverrideNonOptional = sendDiagnosticInterruptAsyncOverride {
            if let sendDiagnosticInterruptAsyncOverrideTyped = sendDiagnosticInterruptAsyncOverrideNonOptional
                    as? SendDiagnosticInterruptAsyncType<InvocationReportingType> {
                return try sendDiagnosticInterruptAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the SendDiagnosticInterrupt operation waiting for the response before returning.

     - Parameters:
         - input: The validated SendDiagnosticInterruptRequest object being passed to this operation.
     */
    public func sendDiagnosticInterruptSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.SendDiagnosticInterruptRequest,
            reporting: InvocationReportingType) throws {
        if let sendDiagnosticInterruptSyncOverrideNonOptional = sendDiagnosticInterruptSyncOverride {
            if let sendDiagnosticInterruptSyncOverrideTyped = sendDiagnosticInterruptSyncOverrideNonOptional
                    as? SendDiagnosticInterruptSyncType<InvocationReportingType> {
                return try sendDiagnosticInterruptSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the StartInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated StartInstancesRequest object being passed to this operation.
         - completion: The StartInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The StartInstancesResult
           object will be validated before being returned to caller.
     */
    public func startInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.StartInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.StartInstancesResult, HTTPClientError>) -> ()) throws {
        if let startInstancesAsyncOverrideNonOptional = startInstancesAsyncOverride {
            if let startInstancesAsyncOverrideTyped = startInstancesAsyncOverrideNonOptional
                    as? StartInstancesAsyncType<InvocationReportingType> {
                return try startInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = StartInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the StartInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated StartInstancesRequest object being passed to this operation.
     - Returns: The StartInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func startInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.StartInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.StartInstancesResult {
        if let startInstancesSyncOverrideNonOptional = startInstancesSyncOverride {
            if let startInstancesSyncOverrideTyped = startInstancesSyncOverrideNonOptional
                    as? StartInstancesSyncType<InvocationReportingType> {
                return try startInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return StartInstancesResult.__default
    }

    /**
     Invokes the StartVpcEndpointServicePrivateDnsVerification operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated StartVpcEndpointServicePrivateDnsVerificationRequest object being passed to this operation.
         - completion: The StartVpcEndpointServicePrivateDnsVerificationResult object or an error will be passed to this 
           callback when the operation is complete. The StartVpcEndpointServicePrivateDnsVerificationResult
           object will be validated before being returned to caller.
     */
    public func startVpcEndpointServicePrivateDnsVerificationAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.StartVpcEndpointServicePrivateDnsVerificationRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.StartVpcEndpointServicePrivateDnsVerificationResult, HTTPClientError>) -> ()) throws {
        if let startVpcEndpointServicePrivateDnsVerificationAsyncOverrideNonOptional = startVpcEndpointServicePrivateDnsVerificationAsyncOverride {
            if let startVpcEndpointServicePrivateDnsVerificationAsyncOverrideTyped = startVpcEndpointServicePrivateDnsVerificationAsyncOverrideNonOptional
                    as? StartVpcEndpointServicePrivateDnsVerificationAsyncType<InvocationReportingType> {
                return try startVpcEndpointServicePrivateDnsVerificationAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = StartVpcEndpointServicePrivateDnsVerificationResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the StartVpcEndpointServicePrivateDnsVerification operation waiting for the response before returning.

     - Parameters:
         - input: The validated StartVpcEndpointServicePrivateDnsVerificationRequest object being passed to this operation.
     - Returns: The StartVpcEndpointServicePrivateDnsVerificationResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func startVpcEndpointServicePrivateDnsVerificationSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.StartVpcEndpointServicePrivateDnsVerificationRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.StartVpcEndpointServicePrivateDnsVerificationResult {
        if let startVpcEndpointServicePrivateDnsVerificationSyncOverrideNonOptional = startVpcEndpointServicePrivateDnsVerificationSyncOverride {
            if let startVpcEndpointServicePrivateDnsVerificationSyncOverrideTyped = startVpcEndpointServicePrivateDnsVerificationSyncOverrideNonOptional
                    as? StartVpcEndpointServicePrivateDnsVerificationSyncType<InvocationReportingType> {
                return try startVpcEndpointServicePrivateDnsVerificationSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return StartVpcEndpointServicePrivateDnsVerificationResult.__default
    }

    /**
     Invokes the StopInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated StopInstancesRequest object being passed to this operation.
         - completion: The StopInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The StopInstancesResult
           object will be validated before being returned to caller.
     */
    public func stopInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.StopInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.StopInstancesResult, HTTPClientError>) -> ()) throws {
        if let stopInstancesAsyncOverrideNonOptional = stopInstancesAsyncOverride {
            if let stopInstancesAsyncOverrideTyped = stopInstancesAsyncOverrideNonOptional
                    as? StopInstancesAsyncType<InvocationReportingType> {
                return try stopInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = StopInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the StopInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated StopInstancesRequest object being passed to this operation.
     - Returns: The StopInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func stopInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.StopInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.StopInstancesResult {
        if let stopInstancesSyncOverrideNonOptional = stopInstancesSyncOverride {
            if let stopInstancesSyncOverrideTyped = stopInstancesSyncOverrideNonOptional
                    as? StopInstancesSyncType<InvocationReportingType> {
                return try stopInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return StopInstancesResult.__default
    }

    /**
     Invokes the TerminateClientVpnConnections operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated TerminateClientVpnConnectionsRequest object being passed to this operation.
         - completion: The TerminateClientVpnConnectionsResult object or an error will be passed to this 
           callback when the operation is complete. The TerminateClientVpnConnectionsResult
           object will be validated before being returned to caller.
     */
    public func terminateClientVpnConnectionsAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.TerminateClientVpnConnectionsRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.TerminateClientVpnConnectionsResult, HTTPClientError>) -> ()) throws {
        if let terminateClientVpnConnectionsAsyncOverrideNonOptional = terminateClientVpnConnectionsAsyncOverride {
            if let terminateClientVpnConnectionsAsyncOverrideTyped = terminateClientVpnConnectionsAsyncOverrideNonOptional
                    as? TerminateClientVpnConnectionsAsyncType<InvocationReportingType> {
                return try terminateClientVpnConnectionsAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = TerminateClientVpnConnectionsResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the TerminateClientVpnConnections operation waiting for the response before returning.

     - Parameters:
         - input: The validated TerminateClientVpnConnectionsRequest object being passed to this operation.
     - Returns: The TerminateClientVpnConnectionsResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func terminateClientVpnConnectionsSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.TerminateClientVpnConnectionsRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.TerminateClientVpnConnectionsResult {
        if let terminateClientVpnConnectionsSyncOverrideNonOptional = terminateClientVpnConnectionsSyncOverride {
            if let terminateClientVpnConnectionsSyncOverrideTyped = terminateClientVpnConnectionsSyncOverrideNonOptional
                    as? TerminateClientVpnConnectionsSyncType<InvocationReportingType> {
                return try terminateClientVpnConnectionsSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return TerminateClientVpnConnectionsResult.__default
    }

    /**
     Invokes the TerminateInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated TerminateInstancesRequest object being passed to this operation.
         - completion: The TerminateInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The TerminateInstancesResult
           object will be validated before being returned to caller.
     */
    public func terminateInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.TerminateInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.TerminateInstancesResult, HTTPClientError>) -> ()) throws {
        if let terminateInstancesAsyncOverrideNonOptional = terminateInstancesAsyncOverride {
            if let terminateInstancesAsyncOverrideTyped = terminateInstancesAsyncOverrideNonOptional
                    as? TerminateInstancesAsyncType<InvocationReportingType> {
                return try terminateInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = TerminateInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the TerminateInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated TerminateInstancesRequest object being passed to this operation.
     - Returns: The TerminateInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func terminateInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.TerminateInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.TerminateInstancesResult {
        if let terminateInstancesSyncOverrideNonOptional = terminateInstancesSyncOverride {
            if let terminateInstancesSyncOverrideTyped = terminateInstancesSyncOverrideNonOptional
                    as? TerminateInstancesSyncType<InvocationReportingType> {
                return try terminateInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return TerminateInstancesResult.__default
    }

    /**
     Invokes the UnassignIpv6Addresses operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated UnassignIpv6AddressesRequest object being passed to this operation.
         - completion: The UnassignIpv6AddressesResult object or an error will be passed to this 
           callback when the operation is complete. The UnassignIpv6AddressesResult
           object will be validated before being returned to caller.
     */
    public func unassignIpv6AddressesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.UnassignIpv6AddressesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.UnassignIpv6AddressesResult, HTTPClientError>) -> ()) throws {
        if let unassignIpv6AddressesAsyncOverrideNonOptional = unassignIpv6AddressesAsyncOverride {
            if let unassignIpv6AddressesAsyncOverrideTyped = unassignIpv6AddressesAsyncOverrideNonOptional
                    as? UnassignIpv6AddressesAsyncType<InvocationReportingType> {
                return try unassignIpv6AddressesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = UnassignIpv6AddressesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the UnassignIpv6Addresses operation waiting for the response before returning.

     - Parameters:
         - input: The validated UnassignIpv6AddressesRequest object being passed to this operation.
     - Returns: The UnassignIpv6AddressesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func unassignIpv6AddressesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.UnassignIpv6AddressesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.UnassignIpv6AddressesResult {
        if let unassignIpv6AddressesSyncOverrideNonOptional = unassignIpv6AddressesSyncOverride {
            if let unassignIpv6AddressesSyncOverrideTyped = unassignIpv6AddressesSyncOverrideNonOptional
                    as? UnassignIpv6AddressesSyncType<InvocationReportingType> {
                return try unassignIpv6AddressesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return UnassignIpv6AddressesResult.__default
    }

    /**
     Invokes the UnassignPrivateIpAddresses operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated UnassignPrivateIpAddressesRequest object being passed to this operation.
         - completion: Nil or an error will be passed to this callback when the operation
           is complete.
     */
    public func unassignPrivateIpAddressesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.UnassignPrivateIpAddressesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Swift.Error?) -> ()) throws {
        if let unassignPrivateIpAddressesAsyncOverrideNonOptional = unassignPrivateIpAddressesAsyncOverride {
            if let unassignPrivateIpAddressesAsyncOverrideTyped = unassignPrivateIpAddressesAsyncOverrideNonOptional
                    as? UnassignPrivateIpAddressesAsyncType<InvocationReportingType> {
                return try unassignPrivateIpAddressesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        completion(nil)
    }

    /**
     Invokes the UnassignPrivateIpAddresses operation waiting for the response before returning.

     - Parameters:
         - input: The validated UnassignPrivateIpAddressesRequest object being passed to this operation.
     */
    public func unassignPrivateIpAddressesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.UnassignPrivateIpAddressesRequest,
            reporting: InvocationReportingType) throws {
        if let unassignPrivateIpAddressesSyncOverrideNonOptional = unassignPrivateIpAddressesSyncOverride {
            if let unassignPrivateIpAddressesSyncOverrideTyped = unassignPrivateIpAddressesSyncOverrideNonOptional
                    as? UnassignPrivateIpAddressesSyncType<InvocationReportingType> {
                return try unassignPrivateIpAddressesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

    }

    /**
     Invokes the UnmonitorInstances operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated UnmonitorInstancesRequest object being passed to this operation.
         - completion: The UnmonitorInstancesResult object or an error will be passed to this 
           callback when the operation is complete. The UnmonitorInstancesResult
           object will be validated before being returned to caller.
     */
    public func unmonitorInstancesAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.UnmonitorInstancesRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.UnmonitorInstancesResult, HTTPClientError>) -> ()) throws {
        if let unmonitorInstancesAsyncOverrideNonOptional = unmonitorInstancesAsyncOverride {
            if let unmonitorInstancesAsyncOverrideTyped = unmonitorInstancesAsyncOverrideNonOptional
                    as? UnmonitorInstancesAsyncType<InvocationReportingType> {
                return try unmonitorInstancesAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = UnmonitorInstancesResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the UnmonitorInstances operation waiting for the response before returning.

     - Parameters:
         - input: The validated UnmonitorInstancesRequest object being passed to this operation.
     - Returns: The UnmonitorInstancesResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func unmonitorInstancesSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.UnmonitorInstancesRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.UnmonitorInstancesResult {
        if let unmonitorInstancesSyncOverrideNonOptional = unmonitorInstancesSyncOverride {
            if let unmonitorInstancesSyncOverrideTyped = unmonitorInstancesSyncOverrideNonOptional
                    as? UnmonitorInstancesSyncType<InvocationReportingType> {
                return try unmonitorInstancesSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return UnmonitorInstancesResult.__default
    }

    /**
     Invokes the UpdateSecurityGroupRuleDescriptionsEgress operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated UpdateSecurityGroupRuleDescriptionsEgressRequest object being passed to this operation.
         - completion: The UpdateSecurityGroupRuleDescriptionsEgressResult object or an error will be passed to this 
           callback when the operation is complete. The UpdateSecurityGroupRuleDescriptionsEgressResult
           object will be validated before being returned to caller.
     */
    public func updateSecurityGroupRuleDescriptionsEgressAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.UpdateSecurityGroupRuleDescriptionsEgressRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.UpdateSecurityGroupRuleDescriptionsEgressResult, HTTPClientError>) -> ()) throws {
        if let updateSecurityGroupRuleDescriptionsEgressAsyncOverrideNonOptional = updateSecurityGroupRuleDescriptionsEgressAsyncOverride {
            if let updateSecurityGroupRuleDescriptionsEgressAsyncOverrideTyped = updateSecurityGroupRuleDescriptionsEgressAsyncOverrideNonOptional
                    as? UpdateSecurityGroupRuleDescriptionsEgressAsyncType<InvocationReportingType> {
                return try updateSecurityGroupRuleDescriptionsEgressAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = UpdateSecurityGroupRuleDescriptionsEgressResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the UpdateSecurityGroupRuleDescriptionsEgress operation waiting for the response before returning.

     - Parameters:
         - input: The validated UpdateSecurityGroupRuleDescriptionsEgressRequest object being passed to this operation.
     - Returns: The UpdateSecurityGroupRuleDescriptionsEgressResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func updateSecurityGroupRuleDescriptionsEgressSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.UpdateSecurityGroupRuleDescriptionsEgressRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.UpdateSecurityGroupRuleDescriptionsEgressResult {
        if let updateSecurityGroupRuleDescriptionsEgressSyncOverrideNonOptional = updateSecurityGroupRuleDescriptionsEgressSyncOverride {
            if let updateSecurityGroupRuleDescriptionsEgressSyncOverrideTyped = updateSecurityGroupRuleDescriptionsEgressSyncOverrideNonOptional
                    as? UpdateSecurityGroupRuleDescriptionsEgressSyncType<InvocationReportingType> {
                return try updateSecurityGroupRuleDescriptionsEgressSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return UpdateSecurityGroupRuleDescriptionsEgressResult.__default
    }

    /**
     Invokes the UpdateSecurityGroupRuleDescriptionsIngress operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated UpdateSecurityGroupRuleDescriptionsIngressRequest object being passed to this operation.
         - completion: The UpdateSecurityGroupRuleDescriptionsIngressResult object or an error will be passed to this 
           callback when the operation is complete. The UpdateSecurityGroupRuleDescriptionsIngressResult
           object will be validated before being returned to caller.
     */
    public func updateSecurityGroupRuleDescriptionsIngressAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.UpdateSecurityGroupRuleDescriptionsIngressRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.UpdateSecurityGroupRuleDescriptionsIngressResult, HTTPClientError>) -> ()) throws {
        if let updateSecurityGroupRuleDescriptionsIngressAsyncOverrideNonOptional = updateSecurityGroupRuleDescriptionsIngressAsyncOverride {
            if let updateSecurityGroupRuleDescriptionsIngressAsyncOverrideTyped = updateSecurityGroupRuleDescriptionsIngressAsyncOverrideNonOptional
                    as? UpdateSecurityGroupRuleDescriptionsIngressAsyncType<InvocationReportingType> {
                return try updateSecurityGroupRuleDescriptionsIngressAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = UpdateSecurityGroupRuleDescriptionsIngressResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the UpdateSecurityGroupRuleDescriptionsIngress operation waiting for the response before returning.

     - Parameters:
         - input: The validated UpdateSecurityGroupRuleDescriptionsIngressRequest object being passed to this operation.
     - Returns: The UpdateSecurityGroupRuleDescriptionsIngressResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func updateSecurityGroupRuleDescriptionsIngressSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.UpdateSecurityGroupRuleDescriptionsIngressRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.UpdateSecurityGroupRuleDescriptionsIngressResult {
        if let updateSecurityGroupRuleDescriptionsIngressSyncOverrideNonOptional = updateSecurityGroupRuleDescriptionsIngressSyncOverride {
            if let updateSecurityGroupRuleDescriptionsIngressSyncOverrideTyped = updateSecurityGroupRuleDescriptionsIngressSyncOverrideNonOptional
                    as? UpdateSecurityGroupRuleDescriptionsIngressSyncType<InvocationReportingType> {
                return try updateSecurityGroupRuleDescriptionsIngressSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return UpdateSecurityGroupRuleDescriptionsIngressResult.__default
    }

    /**
     Invokes the WithdrawByoipCidr operation returning immediately and passing the response to a callback.

     - Parameters:
         - input: The validated WithdrawByoipCidrRequest object being passed to this operation.
         - completion: The WithdrawByoipCidrResult object or an error will be passed to this 
           callback when the operation is complete. The WithdrawByoipCidrResult
           object will be validated before being returned to caller.
     */
    public func withdrawByoipCidrAsync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.WithdrawByoipCidrRequest, 
            reporting: InvocationReportingType,
            completion: @escaping (Result<ElasticComputeCloudModel.WithdrawByoipCidrResult, HTTPClientError>) -> ()) throws {
        if let withdrawByoipCidrAsyncOverrideNonOptional = withdrawByoipCidrAsyncOverride {
            if let withdrawByoipCidrAsyncOverrideTyped = withdrawByoipCidrAsyncOverrideNonOptional
                    as? WithdrawByoipCidrAsyncType<InvocationReportingType> {
                return try withdrawByoipCidrAsyncOverrideTyped(input, reporting, completion)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        let result = WithdrawByoipCidrResult.__default
        
        completion(.success(result))
    }

    /**
     Invokes the WithdrawByoipCidr operation waiting for the response before returning.

     - Parameters:
         - input: The validated WithdrawByoipCidrRequest object being passed to this operation.
     - Returns: The WithdrawByoipCidrResult object to be passed back from the caller of this operation.
         Will be validated before being returned to caller.
     */
    public func withdrawByoipCidrSync<InvocationReportingType: SmokeAWSInvocationReporting>(
            input: ElasticComputeCloudModel.WithdrawByoipCidrRequest,
            reporting: InvocationReportingType) throws -> ElasticComputeCloudModel.WithdrawByoipCidrResult {
        if let withdrawByoipCidrSyncOverrideNonOptional = withdrawByoipCidrSyncOverride {
            if let withdrawByoipCidrSyncOverrideTyped = withdrawByoipCidrSyncOverrideNonOptional
                    as? WithdrawByoipCidrSyncType<InvocationReportingType> {
                return try withdrawByoipCidrSyncOverrideTyped(input, reporting)
            } else {
                fatalError("Function reporting type '\(InvocationReportingType.self)' incompatible with client reporting type '\(ClientInvocationReportingType.self)'.")
            }
        }

        return WithdrawByoipCidrResult.__default
    }
}
